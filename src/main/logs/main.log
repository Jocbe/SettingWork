[2013-07-08 11:10:57] [ERROR] RavenFilter:327 - Unable to load certificate file: /home/jcb98/github_tests/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
java.io.FileNotFoundException: /home/jcb98/github_tests/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt (No such file or directory)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.<init>(FileInputStream.java:137)
	at java.io.FileInputStream.<init>(FileInputStream.java:96)
	at uk.ac.cam.ucs.webauth.RavenFilter.getKeyStore(RavenFilter.java:315)
	at uk.ac.cam.ucs.webauth.RavenFilter.init(RavenFilter.java:273)
	at org.eclipse.jetty.servlet.FilterHolder.doStart(FilterHolder.java:97)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:739)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:244)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1132)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:577)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:491)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:160)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at org.eclipse.jetty.server.handler.HandlerCollection$1.run(HandlerCollection.java:200)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:450)
	at java.lang.Thread.run(Thread.java:679)
[2013-07-08 11:12:29] [ERROR] RavenFilter:327 - Unable to load certificate file: /home/jcb98/github_tests/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
java.io.FileNotFoundException: /home/jcb98/github_tests/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt (No such file or directory)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.<init>(FileInputStream.java:137)
	at java.io.FileInputStream.<init>(FileInputStream.java:96)
	at uk.ac.cam.ucs.webauth.RavenFilter.getKeyStore(RavenFilter.java:315)
	at uk.ac.cam.ucs.webauth.RavenFilter.init(RavenFilter.java:273)
	at org.eclipse.jetty.servlet.FilterHolder.doStart(FilterHolder.java:97)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:739)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:244)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1132)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:577)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:491)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:160)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at org.eclipse.jetty.server.handler.HandlerCollection$1.run(HandlerCollection.java:200)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:450)
	at java.lang.Thread.run(Thread.java:679)
[2013-07-08 11:14:59] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 11:14:59] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 11:14:59] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 11:14:59] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 11:14:59] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 11:14:59] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 11:14:59] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 11:14:59] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 11:14:59] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 11:14:59] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 11:14:59] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 11:14:59] [INFO ] DriverManagerConnectionProviderImpl:156 - HHH000046: Connection properties: {user=sa, password=****}
[2013-07-08 11:14:59] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 11:14:59] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 11:14:59] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 11:14:59] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 11:14:59] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 11:14:59] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:14:59] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 11:14:59] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:14:59] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 11:14:59] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:14:59] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 11:14:59] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 11:14:59] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 11:23:19] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 11:23:19] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 11:23:19] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 11:23:19] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 11:23:19] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 11:23:19] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 11:23:19] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 11:23:19] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 11:23:19] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 11:23:19] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 11:23:19] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 11:23:19] [INFO ] DriverManagerConnectionProviderImpl:156 - HHH000046: Connection properties: {user=sa, password=****}
[2013-07-08 11:23:19] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 11:23:19] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 11:23:19] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 11:23:19] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 11:23:19] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 11:23:19] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:23:19] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 11:23:19] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:23:19] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 11:23:19] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:23:19] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 11:23:19] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 11:23:19] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 11:24:53] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 11:24:53] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 11:24:53] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 11:24:53] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 11:24:53] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 11:24:53] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 11:24:53] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 11:24:53] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 11:24:53] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 11:24:53] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 11:24:53] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 11:24:53] [INFO ] DriverManagerConnectionProviderImpl:156 - HHH000046: Connection properties: {user=sa, password=****}
[2013-07-08 11:24:53] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 11:24:54] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 11:24:54] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 11:24:54] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 11:24:54] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 11:24:54] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:24:54] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 11:24:54] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:24:54] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 11:24:54] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:24:54] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 11:24:54] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 11:24:54] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 11:28:21] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 11:28:21] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 11:28:21] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 11:28:21] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 11:28:21] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 11:28:21] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 11:28:21] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 11:28:21] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 11:28:21] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 11:28:21] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 11:28:21] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 11:28:21] [INFO ] DriverManagerConnectionProviderImpl:156 - HHH000046: Connection properties: {user=sa, password=****}
[2013-07-08 11:28:21] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 11:28:21] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 11:28:21] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 11:28:21] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 11:28:21] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 11:28:21] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:28:21] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 11:28:21] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:28:21] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 11:28:21] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:28:21] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 11:28:21] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 11:28:21] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 11:30:00] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 11:30:00] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 11:30:00] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 11:30:00] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 11:30:00] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 11:30:00] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 11:30:00] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 11:30:00] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 11:30:00] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 11:30:00] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 11:30:00] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 11:30:00] [INFO ] DriverManagerConnectionProviderImpl:156 - HHH000046: Connection properties: {user=sa, password=****}
[2013-07-08 11:30:00] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 11:30:00] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 11:30:00] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 11:30:00] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 11:30:00] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 11:30:00] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:30:00] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 11:30:00] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:30:00] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 11:30:00] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:30:00] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 11:30:00] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 11:30:00] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 11:33:09] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github_tests/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 11:33:09] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 11:33:09] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 11:33:09] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 11:33:09] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 11:33:09] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@22b90a6e
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@22b90a6e
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@22b90a6e
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@10ba5a81
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61335b86
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@12e29f36
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@724a2dd4
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@724a2dd4
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@724a2dd4
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@5092eb76
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@5092eb76
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5092eb76
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@db951f2
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@db951f2
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@db951f2
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@381bd13
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@381bd13
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@381bd13
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@448be1c9
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@448be1c9
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@448be1c9
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@d6d46d7
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@d6d46d7
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@d6d46d7
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@256b352c
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@256b352c
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@256b352c
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1e4276fd
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1e4276fd
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@54011d95
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@54011d95
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@39ce9085
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@39ce9085
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23f2bc83
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@c387202
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@111bda67
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@111bda67
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@7be758ca
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7be758ca
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@34a083f2
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@34a083f2
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1d30b5e2
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1d30b5e2
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1d30b5e2
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@c9021e3
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@5fb45ddc
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5fb45ddc
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5fb45ddc
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@388eed76
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@22c8ebd6
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@22c8ebd6
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@6b064b80
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6b064b80
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3c6e4ba6
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3c6e4ba6
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@55a517bd
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@55a517bd
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4c6030f9
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4c6030f9
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3bd85e85
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3834a1c8
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@51bfa303
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@51bfa303
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@51bfa303
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@71e13a2c
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@71e13a2c
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@71e13a2c
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@468034b6
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@976484e
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@976484e
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@976484e
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@74bffc3a
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@74bffc3a
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@74bffc3a
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@59e14a78
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@db2b10a
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@7aaf8b32
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7aaf8b32
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@50baa573
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@b9deddb
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b9deddb
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@114c02d4
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@114c02d4
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@20b124fa
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@766d4f30
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@48a84b47
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@4d8ef117
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4d8ef117
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@699dd97b
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7a315068
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3b961a84
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7ba6eeab
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@c7f5bf9
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7d6f3ed7
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1286d597
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5230b601
[2013-07-08 11:33:09] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 11:33:09] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 11:33:09] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 11:33:09] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 11:33:09] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 11:33:09] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 11:33:09] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 11:33:09] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 11:33:09] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 11:33:09] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 11:33:09] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 11:33:09] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 11:33:09] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 11:33:09] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 11:33:09] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 11:33:09] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 11:33:09] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 11:33:09] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 11:33:09] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 11:33:09] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 11:33:09] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 11:33:09] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 11:33:09] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github_tests/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 11:33:09] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 11:33:10] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 11:33:10] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 11:33:10] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 11:33:10] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 11:33:10] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 11:33:10] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 11:33:10] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 11:33:10] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 11:33:10] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 11:33:10] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 11:33:10] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 11:33:10] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 11:33:10] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 11:33:10] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:33:10] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:33:10] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:33:10] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:33:10] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 11:33:10] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:33:10] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 11:33:10] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 11:33:10] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:33:10] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:33:10] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 11:33:10] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:33:10] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 11:33:10] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 11:33:10] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:33:10] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:33:10] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 11:33:10] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:33:10] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 11:33:10] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 11:33:10] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:33:10] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 11:33:10] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:33:10] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 11:33:10] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:33:10] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 11:33:10] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:33:10] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:33:10] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:33:10] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:33:10] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:33:10] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:33:10] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:33:10] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:33:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:33:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:33:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 11:33:10] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 11:33:10] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 11:33:10] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 11:33:10] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 11:33:10] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github_tests/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 11:33:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:33:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:33:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:33:10] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@70d1c9b5
[2013-07-08 11:33:10] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 48e4f95f-8e4a-459b-8de1-302c034d5ee5 (<unnamed>)
[2013-07-08 11:33:10] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 11:33:10] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 11:33:10] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:33:10] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:33:10] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:33:10] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:33:10] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:33:10] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:33:10] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:33:10] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:33:10] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:33:10] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:33:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:33:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:33:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:33:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:33:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:33:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:33:10] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:33:10] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:33:10] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:33:10] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:33:10] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:33:10] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:33:10] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:33:10] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:33:10] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:33:10] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:33:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:33:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:33:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:33:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:33:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:33:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:33:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:33:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:33:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:33:10] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 11:33:10] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 11:33:10] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:33:10] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:33:10] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 11:33:10] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:33:10] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:33:10] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 11:33:10] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:33:10] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:33:10] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 11:33:10] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 11:33:10] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 11:33:10] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 11:33:10] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 11:33:10] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 11:33:10] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 11:33:10] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 11:33:10] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 11:33:10] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 11:33:10] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 11:33:10] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 11:33:10] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 11:33:10] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 11:33:10] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 11:33:16] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 11:33:16] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 11:33:16] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 11:33:16] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 11:33:16] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 11:33:16] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: aaa98, using strategy: org.hibernate.id.Assigned
[2013-07-08 11:33:16] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: bbb12, using strategy: org.hibernate.id.Assigned
[2013-07-08 11:33:16] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONSETS
[2013-07-08 11:33:16] [DEBUG] SQL:104 - select max(id) from QUESTIONSETS
[2013-07-08 11:33:16] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 11:33:16] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:33:16] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONS
[2013-07-08 11:33:16] [DEBUG] SQL:104 - select max(id) from QUESTIONS
[2013-07-08 11:33:16] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 11:33:16] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:33:16] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 2, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:33:16] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 3, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:33:16] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 11:33:16] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 11:33:16] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 11:33:17] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2013-07-08 11:33:17] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 11:33:17] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 11:33:17] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [power n k], that calculates k-th power of n., id=3, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:33:17] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=1, name=Foundations of Computer Science example sheet, owner=org.example.models.User#aaa98}
[2013-07-08 11:33:17] [DEBUG] EntityPrinter:121 - org.example.models.User{id=bbb12, name=Bob}
[2013-07-08 11:33:17] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 11:33:17] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [square n], that calculates square of n., id=1, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:33:17] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [factorial n], that calculates factorial of n., id=2, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:33:17] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 11:33:17] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 11:33:17] [DEBUG] SQL:104 - insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 11:33:17] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:33:17] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:33:17] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:33:17] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 11:33:17] [DEBUG] JdbcCoordinatorImpl:173 - HHH000420: Closing un-released batch
[2013-07-08 11:33:17] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 11:33:17] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 11:33:17] [DEBUG] SynchronousDispatcher:60 - PathInfo: /favicon.ico
[2013-07-08 11:34:23] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 11:34:28] [DEBUG] RavenFilter:389 - RavenFilter running for: /auth
[2013-07-08 11:34:28] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:34:28] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 11:34:28] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:34:28] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/auth
[2013-07-08 11:34:31] [DEBUG] RavenFilter:389 - RavenFilter running for: /auth
[2013-07-08 11:34:31] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T103431Z!1373279668-7869-0!http://localhost:8080/auth!jcb98!!pwd!35754!!2!jaR3O3ZrM1XyHWEaF-vhLKd.9uj0OTx7hyMeNRqFKADcafzKYTdSfs5rR2patWvEQWogMpK8XUsuGEQSVkOBBZzj0H3l5t55TevjJK9Aqe6AC3G93rrSlcrUoRuY9G2Xi3Mi1IluHidYm6pjn3xV8Cu77yKr3zFZNeYq4QDgsgg_
[2013-07-08 11:34:31] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/auth, desc: , aauth: , iact: , msg: , params: , date: 20130708T103428Z, fail: 
[2013-07-08 11:34:31] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:34:31] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 11:34:31] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T103431Z Last: 1373279671638 Life: 35754 ID: 1373279668-7869-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 11:34:31] [DEBUG] RavenFilter:389 - RavenFilter running for: /auth
[2013-07-08 11:34:31] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:34:31] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/auth, desc: , aauth: , iact: , msg: , params: , date: 20130708T103428Z, fail: 
[2013-07-08 11:34:31] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T103431Z Last: 1373279671638 Life: 35754 ID: 1373279668-7869-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 11:34:31] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 11:34:31] [DEBUG] SynchronousDispatcher:60 - PathInfo: /favicon.ico
[2013-07-08 11:37:07] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github_tests/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 11:37:07] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 11:37:07] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 11:37:07] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 11:37:07] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 11:37:07] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@717757ad
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@717757ad
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@717757ad
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3f78e13f
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@71e852be
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7844a013
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@10fd0a62
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@10fd0a62
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@10fd0a62
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@225bcd91
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@225bcd91
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@225bcd91
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@12e29f36
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@12e29f36
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@12e29f36
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@62f04dae
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@62f04dae
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@62f04dae
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@5092eb76
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@5092eb76
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5092eb76
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@57044c5
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@57044c5
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@57044c5
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@6b6c14c0
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@6b6c14c0
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6b6c14c0
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@a211b37
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@a211b37
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7051630a
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7051630a
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@448be1c9
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@448be1c9
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@10bfb545
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@145d424
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@256b352c
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@256b352c
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@1e4276fd
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e4276fd
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@6b5b5783
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6b5b5783
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@15364ee5
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15364ee5
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15364ee5
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@111bda67
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@3e7c609
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3e7c609
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3e7c609
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4c18fa85
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@7810a519
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7810a519
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@34a083f2
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@34a083f2
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2e7857a5
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2e7857a5
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@68f51766
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@68f51766
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@c65fb1
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@c65fb1
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3a7e479a
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@86ecec5
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@4e0bd5df
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4e0bd5df
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@4e0bd5df
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@591bfcbe
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@591bfcbe
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@591bfcbe
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@5afc0f5
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@3b0e2558
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3b0e2558
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@3b0e2558
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6e9c2192
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6e9c2192
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6e9c2192
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@3bd85e85
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@3834a1c8
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@74bffc3a
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@74bffc3a
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6fb8fcdd
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@6b91602
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6b91602
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@4d12bc7b
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4d12bc7b
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@164ca42b
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4a393167
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@627b5c
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@455bfaf
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@455bfaf
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2f031310
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@72d8978c
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@69c5a33b
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2e5facbd
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@b45c414
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@114c02d4
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@154db52b
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@20b124fa
[2013-07-08 11:37:08] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 11:37:08] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 11:37:08] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 11:37:08] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 11:37:08] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 11:37:08] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 11:37:08] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 11:37:08] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 11:37:08] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 11:37:08] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 11:37:08] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 11:37:08] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 11:37:08] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 11:37:08] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 11:37:08] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 11:37:08] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 11:37:08] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 11:37:08] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 11:37:08] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 11:37:08] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 11:37:08] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 11:37:08] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 11:37:08] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github_tests/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 11:37:08] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 11:37:08] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 11:37:08] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 11:37:08] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 11:37:08] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 11:37:08] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 11:37:08] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 11:37:08] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 11:37:08] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 11:37:08] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 11:37:08] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 11:37:08] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 11:37:08] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 11:37:08] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 11:37:08] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:37:08] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:37:08] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:37:08] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:37:08] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 11:37:08] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:37:08] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 11:37:08] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 11:37:08] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:37:08] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:37:08] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 11:37:08] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:37:08] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 11:37:08] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 11:37:08] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:37:08] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:37:08] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 11:37:08] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:37:08] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 11:37:08] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 11:37:08] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:37:08] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 11:37:08] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:37:08] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 11:37:08] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:37:08] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 11:37:08] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:37:08] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:37:08] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:37:08] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:37:08] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:37:08] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:37:08] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:37:08] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:37:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:37:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:37:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 11:37:08] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 11:37:08] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 11:37:08] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 11:37:08] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 11:37:08] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github_tests/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:37:08] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7bfcb845
[2013-07-08 11:37:08] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 095f74a0-19ba-4ce0-9122-f257cb174fc5 (<unnamed>)
[2013-07-08 11:37:08] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 11:37:08] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 11:37:08] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:37:08] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:37:08] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:37:08] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:37:08] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:37:08] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:37:08] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:37:08] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:37:08] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:37:08] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:37:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:37:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:37:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:37:08] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:37:08] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:37:08] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:37:08] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:37:08] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:37:08] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:37:08] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:37:08] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:37:08] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:37:08] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:37:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:37:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:37:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:37:08] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 11:37:08] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 11:37:08] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:37:08] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:37:08] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 11:37:08] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:37:08] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:37:08] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 11:37:08] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:37:08] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:37:08] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 11:37:08] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 11:37:08] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 11:37:08] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 11:37:08] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 11:37:08] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 11:37:08] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 11:37:08] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 11:37:08] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 11:37:08] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 11:37:08] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 11:37:08] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 11:37:08] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 11:37:08] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 11:37:08] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 11:37:21] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:37:21] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:37:21] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 11:37:21] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:37:21] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/
[2013-07-08 11:37:25] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:37:25] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T103725Z!1373279845-7236-12!http://localhost:8080/!jcb98!pwd!!36000!!2!JLNwTy.9Mn4dctmvUcZCUNU9zlupwaa0NZ1FdfRmEqM79RsmAiUgDreOCBbahOo1PciUS9oLw-MSbTmJ.NiFbdJV3QxbqnwKibK4COYXtthW8Mk-XT7zhBlzzUMeVIr.EjyBL.6DFkxZFvGtbrVBm47pslEgvpHryi7EzrqBu4M_
[2013-07-08 11:37:25] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T103721Z, fail: 
[2013-07-08 11:37:25] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:37:25] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 11:37:25] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T103725Z Last: 1373279845230 Life: 36000 ID: 1373279845-7236-12 Principal: RavenPrincipal--jcb98 AAuth: pwd SSO:  Params: 
[2013-07-08 11:37:25] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:37:25] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:37:25] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T103721Z, fail: 
[2013-07-08 11:37:25] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T103725Z Last: 1373279845230 Life: 36000 ID: 1373279845-7236-12 Principal: RavenPrincipal--jcb98 AAuth: pwd SSO:  Params: 
[2013-07-08 11:37:25] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 11:37:25] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 11:37:25] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 11:37:25] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 11:37:25] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 11:37:25] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 11:37:25] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: aaa98, using strategy: org.hibernate.id.Assigned
[2013-07-08 11:37:25] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: bbb12, using strategy: org.hibernate.id.Assigned
[2013-07-08 11:37:25] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONSETS
[2013-07-08 11:37:25] [DEBUG] SQL:104 - select max(id) from QUESTIONSETS
[2013-07-08 11:37:25] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 11:37:25] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:37:25] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONS
[2013-07-08 11:37:25] [DEBUG] SQL:104 - select max(id) from QUESTIONS
[2013-07-08 11:37:25] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 11:37:25] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:37:25] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 2, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:37:25] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 3, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:37:25] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 11:37:25] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 11:37:25] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 11:37:25] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2013-07-08 11:37:25] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 11:37:25] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 11:37:25] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [power n k], that calculates k-th power of n., id=3, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:37:25] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=1, name=Foundations of Computer Science example sheet, owner=org.example.models.User#aaa98}
[2013-07-08 11:37:25] [DEBUG] EntityPrinter:121 - org.example.models.User{id=bbb12, name=Bob}
[2013-07-08 11:37:25] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 11:37:25] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [square n], that calculates square of n., id=1, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:37:25] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [factorial n], that calculates factorial of n., id=2, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:37:25] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 11:37:25] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 11:37:25] [DEBUG] SQL:104 - insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 11:37:25] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:37:25] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:37:25] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:37:25] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 11:37:25] [DEBUG] JdbcCoordinatorImpl:173 - HHH000420: Closing un-released batch
[2013-07-08 11:37:25] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 11:37:25] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 11:37:25] [DEBUG] RavenFilter:389 - RavenFilter running for: /favicon.ico
[2013-07-08 11:37:25] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:37:25] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 11:37:25] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:37:25] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/favicon.ico
[2013-07-08 11:37:29] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:37:29] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:37:29] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T103721Z, fail: 
[2013-07-08 11:37:29] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T103725Z Last: 1373279845230 Life: 36000 ID: 1373279845-7236-12 Principal: RavenPrincipal--jcb98 AAuth: pwd SSO:  Params: 
[2013-07-08 11:37:29] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 11:37:29] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 11:37:29] [DEBUG] RavenFilter:389 - RavenFilter running for: /style.css
[2013-07-08 11:37:29] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:37:29] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T103721Z, fail: 
[2013-07-08 11:37:29] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T103725Z Last: 1373279845230 Life: 36000 ID: 1373279845-7236-12 Principal: RavenPrincipal--jcb98 AAuth: pwd SSO:  Params: 
[2013-07-08 11:37:29] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 11:37:29] [DEBUG] SynchronousDispatcher:60 - PathInfo: /style.css
[2013-07-08 11:37:29] [DEBUG] RavenFilter:389 - RavenFilter running for: /favicon.ico
[2013-07-08 11:37:29] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:37:29] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 11:37:29] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:37:29] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/favicon.ico
[2013-07-08 11:38:46] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github_tests/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 11:38:46] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 11:38:46] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 11:38:46] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 11:38:46] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 11:38:46] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@e7c0d41
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@e7c0d41
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@e7c0d41
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@477baf4
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@50f8ae79
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@57044c5
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@4c68059
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@4c68059
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4c68059
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@db951f2
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@db951f2
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@db951f2
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@d6d46d7
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@d6d46d7
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@d6d46d7
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@1b0fb9bd
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@1b0fb9bd
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b0fb9bd
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@4b5a4a77
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@4b5a4a77
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4b5a4a77
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@54011d95
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@54011d95
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@54011d95
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@28722969
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@28722969
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@28722969
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4dc4e792
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4dc4e792
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b9fa8f7
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b9fa8f7
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@657a7adf
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@657a7adf
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@11767553
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6fc41e49
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@5c392fe8
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5c392fe8
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@531a700a
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@531a700a
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@5fb45ddc
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5fb45ddc
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@22c8ebd6
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@22c8ebd6
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@22c8ebd6
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@591bfcbe
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@5afc0f5
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5afc0f5
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5afc0f5
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@49b9a538
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@c1bb35b
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@c1bb35b
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@3f2f529b
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3f2f529b
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@37285252
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@37285252
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@1ac84361
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1ac84361
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2bf87baf
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2bf87baf
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@b04bce3
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3484fdbc
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@68487fb7
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@68487fb7
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@68487fb7
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@55e03a61
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@55e03a61
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@55e03a61
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@4e850e8c
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@15f7dbd8
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@15f7dbd8
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@15f7dbd8
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5ecfe500
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5ecfe500
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5ecfe500
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@6b91602
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@e2f75e5
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@3e29b849
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3e29b849
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e3a4822
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@28c4b5f
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28c4b5f
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@3b961a84
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3b961a84
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@c7f5bf9
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1286d597
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@28bd36fa
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@44f1b25e
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44f1b25e
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2d97d09f
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4a018e1b
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2c18b492
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@9f6f3dc
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3403f5a0
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6ff2f60d
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@37f808e6
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7d1050be
[2013-07-08 11:38:46] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 11:38:46] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 11:38:46] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 11:38:46] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 11:38:46] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 11:38:46] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 11:38:46] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 11:38:46] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 11:38:46] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 11:38:46] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 11:38:46] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 11:38:46] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 11:38:46] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 11:38:46] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 11:38:46] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 11:38:46] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 11:38:46] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 11:38:46] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 11:38:46] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 11:38:46] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 11:38:46] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 11:38:46] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 11:38:46] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github_tests/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 11:38:46] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 11:38:46] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 11:38:46] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 11:38:46] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 11:38:46] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 11:38:46] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 11:38:46] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 11:38:46] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 11:38:47] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 11:38:47] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 11:38:47] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 11:38:47] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 11:38:47] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 11:38:47] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 11:38:47] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:38:47] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:38:47] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:38:47] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:38:47] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 11:38:47] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:38:47] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 11:38:47] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 11:38:47] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:38:47] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:38:47] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 11:38:47] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:38:47] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 11:38:47] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 11:38:47] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:38:47] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:38:47] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 11:38:47] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:38:47] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 11:38:47] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 11:38:47] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:38:47] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 11:38:47] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:38:47] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 11:38:47] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:38:47] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 11:38:47] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:38:47] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:38:47] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:38:47] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:38:47] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:38:47] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:38:47] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:38:47] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:38:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:38:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:38:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 11:38:47] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 11:38:47] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 11:38:47] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 11:38:47] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 11:38:47] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github_tests/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 11:38:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:38:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:38:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:38:47] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3225753d
[2013-07-08 11:38:47] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 0630e8a2-4cd0-4c19-bb07-98aef32b95b1 (<unnamed>)
[2013-07-08 11:38:47] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 11:38:47] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 11:38:47] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:38:47] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:38:47] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:38:47] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:38:47] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:38:47] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:38:47] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:38:47] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:38:47] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:38:47] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:38:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:38:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:38:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:38:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:38:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:38:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:38:47] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:38:47] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:38:47] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:38:47] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:38:47] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:38:47] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:38:47] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:38:47] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:38:47] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:38:47] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:38:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:38:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:38:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:38:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:38:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:38:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:38:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:38:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:38:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:38:47] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 11:38:47] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 11:38:47] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:38:47] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:38:47] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 11:38:47] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:38:47] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:38:47] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 11:38:47] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:38:47] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:38:47] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 11:38:47] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 11:38:47] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 11:38:47] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 11:38:47] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 11:38:47] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 11:38:47] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 11:38:47] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 11:38:47] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 11:38:47] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 11:38:47] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 11:38:47] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 11:38:47] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 11:38:47] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 11:38:47] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 11:38:48] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:38:48] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:38:48] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 11:38:48] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:38:48] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/
[2013-07-08 11:38:50] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:38:50] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T103849Z!1373279928-7633-4!http://localhost:8080/!jcb98!!pwd!30623!!2!pf.sAKk-2m6NtFifzT9LhvrHYO984s6l.I2gR0yhi3GWMox3BNczf8gW7fJlMaIo2wKYzI36HblDwdTD26IiKlNdS6Y2BZuj.Zw6PJ0Rco.6xM2tcomMNeI0BhHEQQ0JH44Nixq1edKZ32SjoqVQrqe8EHIn-.ZZ2FxCT1jcNHo_
[2013-07-08 11:38:50] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T103848Z, fail: 
[2013-07-08 11:38:50] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:38:50] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 11:38:50] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T103849Z Last: 1373279930047 Life: 30623 ID: 1373279928-7633-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 11:38:50] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:38:50] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:38:50] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T103848Z, fail: 
[2013-07-08 11:38:50] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T103849Z Last: 1373279930047 Life: 30623 ID: 1373279928-7633-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 11:38:50] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 11:38:50] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 11:38:50] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 11:38:50] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 11:38:50] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 11:38:50] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 11:38:50] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: aaa98, using strategy: org.hibernate.id.Assigned
[2013-07-08 11:38:50] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: bbb12, using strategy: org.hibernate.id.Assigned
[2013-07-08 11:38:50] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONSETS
[2013-07-08 11:38:50] [DEBUG] SQL:104 - select max(id) from QUESTIONSETS
[2013-07-08 11:38:50] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 11:38:50] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:38:50] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONS
[2013-07-08 11:38:50] [DEBUG] SQL:104 - select max(id) from QUESTIONS
[2013-07-08 11:38:50] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 11:38:50] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:38:50] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 2, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:38:50] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 3, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:38:50] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 11:38:50] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 11:38:50] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 11:38:50] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2013-07-08 11:38:50] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 11:38:50] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 11:38:50] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [power n k], that calculates k-th power of n., id=3, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:38:50] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=1, name=Foundations of Computer Science example sheet, owner=org.example.models.User#aaa98}
[2013-07-08 11:38:50] [DEBUG] EntityPrinter:121 - org.example.models.User{id=bbb12, name=Bob}
[2013-07-08 11:38:50] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 11:38:50] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [square n], that calculates square of n., id=1, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:38:50] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [factorial n], that calculates factorial of n., id=2, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:38:50] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 11:38:50] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 11:38:50] [DEBUG] SQL:104 - insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 11:38:50] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:38:50] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:38:50] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:38:50] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 11:38:50] [DEBUG] JdbcCoordinatorImpl:173 - HHH000420: Closing un-released batch
[2013-07-08 11:38:50] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 11:38:50] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 11:39:10] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github_tests/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 11:39:10] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 11:39:10] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 11:39:10] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 11:39:10] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 11:39:10] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@7e266b44
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@7e266b44
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7e266b44
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4b90725e
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@225bcd91
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@10ba5a81
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@54eeabe8
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@54eeabe8
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@54eeabe8
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@7cd47880
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@7cd47880
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7cd47880
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@62e59e40
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@62e59e40
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@62e59e40
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@57044c5
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@57044c5
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57044c5
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@4c68059
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@4c68059
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4c68059
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@a211b37
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@a211b37
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@a211b37
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@6f3d5f21
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@6f3d5f21
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f3d5f21
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1a15cd9a
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1a15cd9a
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@f6a8823
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@f6a8823
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@216feee5
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@216feee5
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4b5a4a77
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1d91eb90
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@153d4c49
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@153d4c49
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@15364ee5
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15364ee5
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@111bda67
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@111bda67
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4c18fa85
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4c18fa85
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4c18fa85
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6fc41e49
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@5c392fe8
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5c392fe8
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5c392fe8
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5ec22978
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@32d35f5f
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@32d35f5f
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@c9021e3
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@c9021e3
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5fb45ddc
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5fb45ddc
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@2f87fafc
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f87fafc
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6a46f764
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6a46f764
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3c6e4ba6
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@55a517bd
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@1db5d2b2
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1db5d2b2
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@1db5d2b2
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4c6030f9
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4c6030f9
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4c6030f9
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@7a258c74
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@7696e4c
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7696e4c
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@7696e4c
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7c6743e2
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7c6743e2
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7c6743e2
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@79b2591c
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@b04bce3
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@15f7dbd8
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15f7dbd8
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1f98a654
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@7794566d
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7794566d
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@2d6acad2
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2d6acad2
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2501e081
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@455bfaf
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@72d8978c
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@4df2a9da
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4df2a9da
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@26a150e
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@28c4b5f
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@48a84b47
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@20e64795
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6e659812
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4fe2fe5d
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3fa9b4a4
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1e929ba3
[2013-07-08 11:39:11] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 11:39:11] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 11:39:11] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 11:39:11] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 11:39:11] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 11:39:11] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 11:39:11] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 11:39:11] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 11:39:11] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 11:39:11] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 11:39:11] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 11:39:11] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 11:39:11] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 11:39:11] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 11:39:11] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 11:39:11] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 11:39:11] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 11:39:11] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 11:39:11] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 11:39:11] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 11:39:11] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 11:39:11] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 11:39:11] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github_tests/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 11:39:11] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 11:39:11] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 11:39:11] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 11:39:11] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 11:39:11] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 11:39:11] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 11:39:11] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 11:39:11] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 11:39:11] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 11:39:11] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 11:39:11] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 11:39:11] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 11:39:11] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 11:39:11] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 11:39:11] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:39:11] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:39:11] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:39:11] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:39:11] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 11:39:11] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:39:11] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 11:39:11] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 11:39:11] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:39:11] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:39:11] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 11:39:11] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:39:11] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 11:39:11] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 11:39:11] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:39:11] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:39:11] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 11:39:11] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:39:11] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 11:39:11] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 11:39:11] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:39:11] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 11:39:11] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:39:11] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 11:39:11] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:39:11] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 11:39:11] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:39:11] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:39:11] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:39:11] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:39:11] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:39:11] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:39:11] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:39:11] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:39:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:39:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:39:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 11:39:11] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 11:39:11] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 11:39:11] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 11:39:11] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 11:39:11] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github_tests/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:39:11] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7c230be4
[2013-07-08 11:39:11] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: ce50314a-a2cf-4806-8870-67857cae16bc (<unnamed>)
[2013-07-08 11:39:11] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 11:39:11] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 11:39:11] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:39:11] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:39:11] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:39:11] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:39:11] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:39:11] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:39:11] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:39:11] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:39:11] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:39:11] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:39:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:39:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:39:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:39:11] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:39:11] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:39:11] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:39:11] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:39:11] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:39:11] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:39:11] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:39:11] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:39:11] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:39:11] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:39:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:39:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:39:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:39:11] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 11:39:11] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 11:39:11] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:39:11] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:39:11] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 11:39:11] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:39:11] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:39:11] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 11:39:11] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:39:11] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:39:11] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 11:39:11] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 11:39:11] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 11:39:11] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 11:39:11] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 11:39:11] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 11:39:11] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 11:39:11] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 11:39:11] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 11:39:11] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 11:39:11] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 11:39:11] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 11:39:11] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 11:39:11] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 11:39:11] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 11:39:11] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:39:11] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:39:11] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 11:39:11] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:39:11] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/
[2013-07-08 11:39:14] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:39:14] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T103914Z!1373279951-8004-4!http://localhost:8080/!jcb98!!pwd!30600!!2!gM1-X9a6NPnK1Dwh0VzO2hrXvd8BTBx3oOGP4nB63Mo2u6qa.D22IaaSTMEdu7iMGMEtX0hkL2QwkhBqC4fkTlgpJNTsBNHqt1UkFNSoQ.OC1IYWYYB9ki.a3vswg7p.01TSjT5gwjvL4n9u6bafmzg9R6VlOEo2DiIRkxuyHYQ_
[2013-07-08 11:39:14] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T103911Z, fail: 
[2013-07-08 11:39:14] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:39:14] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 11:39:14] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T103914Z Last: 1373279954673 Life: 30600 ID: 1373279951-8004-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 11:39:14] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:39:14] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:39:14] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T103911Z, fail: 
[2013-07-08 11:39:14] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T103914Z Last: 1373279954673 Life: 30600 ID: 1373279951-8004-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 11:39:14] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 11:39:14] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 11:39:14] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 11:39:14] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 11:39:14] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 11:39:14] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 11:39:14] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: aaa98, using strategy: org.hibernate.id.Assigned
[2013-07-08 11:39:14] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: bbb12, using strategy: org.hibernate.id.Assigned
[2013-07-08 11:39:14] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONSETS
[2013-07-08 11:39:14] [DEBUG] SQL:104 - select max(id) from QUESTIONSETS
[2013-07-08 11:39:14] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 11:39:14] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:39:14] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONS
[2013-07-08 11:39:14] [DEBUG] SQL:104 - select max(id) from QUESTIONS
[2013-07-08 11:39:14] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 11:39:14] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:39:14] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 2, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:39:14] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 3, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:39:14] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 11:39:14] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 11:39:14] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 11:39:14] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2013-07-08 11:39:14] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 11:39:14] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 11:39:14] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [power n k], that calculates k-th power of n., id=3, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:39:14] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=1, name=Foundations of Computer Science example sheet, owner=org.example.models.User#aaa98}
[2013-07-08 11:39:14] [DEBUG] EntityPrinter:121 - org.example.models.User{id=bbb12, name=Bob}
[2013-07-08 11:39:14] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 11:39:14] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [square n], that calculates square of n., id=1, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:39:14] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [factorial n], that calculates factorial of n., id=2, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:39:14] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 11:39:14] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 11:39:14] [DEBUG] SQL:104 - insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 11:39:14] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:39:14] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:39:14] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:39:14] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 11:39:14] [DEBUG] JdbcCoordinatorImpl:173 - HHH000420: Closing un-released batch
[2013-07-08 11:39:14] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 11:39:14] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 11:41:26] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:41:26] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:41:26] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T103911Z, fail: 
[2013-07-08 11:41:26] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T103914Z Last: 1373279954673 Life: 30600 ID: 1373279951-8004-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 11:41:26] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 11:41:26] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 11:41:29] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:41:29] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:41:29] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T103911Z, fail: 
[2013-07-08 11:41:29] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T103914Z Last: 1373279954673 Life: 30600 ID: 1373279951-8004-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 11:41:29] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 11:41:29] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 11:43:48] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github_tests/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 11:43:48] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 11:43:48] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 11:43:48] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 11:43:48] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 11:43:48] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@5d0e2c9
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@5d0e2c9
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5d0e2c9
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@48834af6
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6a3de2df
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2e0ca6ae
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@2569a1c5
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@2569a1c5
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2569a1c5
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@4f5264db
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@4f5264db
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4f5264db
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@3f9f76a5
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@3f9f76a5
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3f9f76a5
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@71e852be
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@71e852be
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@71e852be
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@762d80ae
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@762d80ae
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@762d80ae
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@225bcd91
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@225bcd91
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@225bcd91
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@31f9b804
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@31f9b804
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@31f9b804
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cd47880
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cd47880
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@12e29f36
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@12e29f36
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@62f04dae
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@62f04dae
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6406f3ea
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5da0b94d
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@7686b376
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7686b376
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@4c68059
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4c68059
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@a211b37
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@a211b37
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2630a895
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2630a895
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2630a895
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a15cd9a
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@f6a8823
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@f6a8823
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@f6a8823
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@256b352c
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@5e53bbfa
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5e53bbfa
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@1e4276fd
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e4276fd
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@54011d95
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@54011d95
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@39ce9085
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@39ce9085
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@c387202
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@c387202
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3a3f4a21
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6f0e0eb5
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@4c18fa85
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4c18fa85
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@4c18fa85
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7810a519
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7810a519
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7810a519
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@34a083f2
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@2e7857a5
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2e7857a5
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@2e7857a5
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68f51766
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68f51766
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68f51766
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@6cb1cb25
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@c65fb1
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@6e9c2192
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6e9c2192
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3f2f529b
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@b04bce3
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b04bce3
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@4e850e8c
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4e850e8c
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3ea763a
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@43824d2c
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@22c393a1
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@7aaf8b32
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7aaf8b32
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@50baa573
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@dc44a6d
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@51f2412a
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7794566d
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2bb64b70
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4d12bc7b
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@91456c5
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@164ca42b
[2013-07-08 11:43:48] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 11:43:48] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 11:43:48] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 11:43:48] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 11:43:48] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 11:43:48] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 11:43:48] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 11:43:48] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 11:43:48] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 11:43:48] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 11:43:48] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 11:43:48] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 11:43:48] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 11:43:48] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 11:43:48] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 11:43:48] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 11:43:48] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 11:43:48] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 11:43:48] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 11:43:48] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 11:43:48] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 11:43:48] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 11:43:48] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github_tests/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 11:43:48] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 11:43:48] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 11:43:48] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 11:43:48] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 11:43:48] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 11:43:48] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 11:43:48] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 11:43:48] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 11:43:48] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 11:43:48] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 11:43:48] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 11:43:48] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 11:43:48] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 11:43:48] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 11:43:48] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:43:48] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:43:48] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:43:48] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:43:48] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 11:43:48] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:43:48] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 11:43:48] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 11:43:48] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:43:48] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:43:48] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 11:43:48] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:43:48] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 11:43:48] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 11:43:48] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:43:48] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:43:48] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 11:43:48] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:43:48] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 11:43:48] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 11:43:48] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:43:48] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 11:43:48] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:43:48] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 11:43:48] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:43:48] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 11:43:48] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:43:48] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:43:48] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:43:48] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:43:48] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:43:48] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:43:48] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:43:48] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:43:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:43:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:43:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 11:43:48] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 11:43:48] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 11:43:48] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 11:43:48] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 11:43:48] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github_tests/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:43:48] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@dbe996d
[2013-07-08 11:43:48] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 79ad0d67-9516-4b44-afe7-7321287faec0 (<unnamed>)
[2013-07-08 11:43:48] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 11:43:48] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 11:43:48] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:43:48] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:43:48] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:43:48] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:43:48] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:43:48] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:43:48] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:43:48] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:43:48] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:43:48] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:43:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:43:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:43:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:43:48] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:43:48] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:43:48] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:43:48] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:43:48] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:43:48] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:43:48] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:43:48] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:43:48] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:43:48] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:43:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:43:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:43:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:43:48] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 11:43:48] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 11:43:48] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:43:48] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:43:48] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 11:43:48] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:43:48] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:43:48] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 11:43:48] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:43:48] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:43:48] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 11:43:48] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 11:43:48] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 11:43:48] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 11:43:48] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 11:43:48] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 11:43:48] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 11:43:48] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 11:43:48] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 11:43:48] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 11:43:48] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 11:43:48] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 11:43:48] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 11:43:48] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 11:43:48] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 11:43:50] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:43:50] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:43:50] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 11:43:50] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:43:50] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/
[2013-07-08 11:43:51] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:43:51] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T104351Z!1373280230-7808-4!http://localhost:8080/!jcb98!!pwd!35615!!2!Yqys7ouRZhy08gs2CishM2a7zPzTxu1DyVFTEqsCwW8DnoallEp75dYaUuRPqfbQT-6Yyp7Gyb9nJl0gWbxMjXj42uyTUUZIh-4TPXyzykOZUL-eP5atGOJzzq0xNS91DZMH9ZbM.ZpjAWNk7WT620Rmr-yev1eRJFQ0BT0QZKc_
[2013-07-08 11:43:51] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T104350Z, fail: 
[2013-07-08 11:43:51] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:43:51] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 11:43:51] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T104351Z Last: 1373280231846 Life: 35615 ID: 1373280230-7808-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 11:43:51] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:43:51] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:43:51] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T104350Z, fail: 
[2013-07-08 11:43:51] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T104351Z Last: 1373280231846 Life: 35615 ID: 1373280230-7808-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 11:43:51] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 11:43:51] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 11:43:51] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 11:43:51] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 11:43:51] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 11:43:51] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 11:43:51] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: aaa98, using strategy: org.hibernate.id.Assigned
[2013-07-08 11:43:51] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: bbb12, using strategy: org.hibernate.id.Assigned
[2013-07-08 11:43:51] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONSETS
[2013-07-08 11:43:51] [DEBUG] SQL:104 - select max(id) from QUESTIONSETS
[2013-07-08 11:43:51] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 11:43:51] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:43:51] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONS
[2013-07-08 11:43:51] [DEBUG] SQL:104 - select max(id) from QUESTIONS
[2013-07-08 11:43:51] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 11:43:51] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:43:51] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 2, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:43:51] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 3, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:43:51] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 11:43:51] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 11:43:51] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 11:43:51] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2013-07-08 11:43:51] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 11:43:51] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 11:43:51] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [power n k], that calculates k-th power of n., id=3, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:43:51] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=1, name=Foundations of Computer Science example sheet, owner=org.example.models.User#aaa98}
[2013-07-08 11:43:51] [DEBUG] EntityPrinter:121 - org.example.models.User{id=bbb12, name=Bob}
[2013-07-08 11:43:51] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 11:43:51] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [square n], that calculates square of n., id=1, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:43:51] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [factorial n], that calculates factorial of n., id=2, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:43:51] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 11:43:51] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 11:43:51] [DEBUG] SQL:104 - insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 11:43:51] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:43:51] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:43:51] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:43:51] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 11:43:51] [DEBUG] JdbcCoordinatorImpl:173 - HHH000420: Closing un-released batch
[2013-07-08 11:43:51] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 11:43:51] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 11:43:52] [DEBUG] RavenFilter:389 - RavenFilter running for: /favicon.ico
[2013-07-08 11:43:52] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:43:52] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 11:43:52] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:43:52] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/favicon.ico
[2013-07-08 11:45:19] [DEBUG] RavenFilter:389 - RavenFilter running for: /set/
[2013-07-08 11:45:19] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:45:19] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T104350Z, fail: 
[2013-07-08 11:45:19] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T104351Z Last: 1373280231846 Life: 35615 ID: 1373280230-7808-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 11:45:19] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 11:45:19] [DEBUG] SynchronousDispatcher:60 - PathInfo: /set/
[2013-07-08 11:45:19] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 11:45:19] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 11:45:19] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 11:45:19] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 11:45:19] [DEBUG] QueryTranslatorImpl:265 - parse() - HQL: from org.example.models.QuestionSet
[2013-07-08 11:45:19] [DEBUG] QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'org'
                |  |  \-[IDENT] Node: 'example'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'QuestionSet'

[2013-07-08 11:45:19] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 11:45:19] [DEBUG] HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
[2013-07-08 11:45:19] [DEBUG] FromElement:157 - FromClause{level=1} : org.example.models.QuestionSet (<no alias>) -> questionse0_
[2013-07-08 11:45:19] [DEBUG] HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
[2013-07-08 11:45:19] [DEBUG] HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} QUESTIONSETS questionse0_ ) )
[2013-07-08 11:45:19] [DEBUG] HqlSqlWalker:869 - Derived SELECT clause created.
[2013-07-08 11:45:19] [DEBUG] JoinProcessor:177 - Using FROM fragment [QUESTIONSETS questionse0_]
[2013-07-08 11:45:19] [DEBUG] HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
[2013-07-08 11:45:19] [DEBUG] QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (QUESTIONSETS)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'questionse0_.id as id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=QUESTIONSETS,tableAlias=questionse0_,origin=null,columns={,className=org.example.models.QuestionSet}}}
    |  \-[SQL_TOKEN] SqlFragment: 'questionse0_.name as name2_1_, questionse0_.owner_id as owner3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[questionse0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'QUESTIONSETS questionse0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=QUESTIONSETS,tableAlias=questionse0_,origin=null,columns={,className=org.example.models.QuestionSet}}

[2013-07-08 11:45:19] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 11:45:19] [DEBUG] QueryTranslatorImpl:235 - HQL: from org.example.models.QuestionSet
[2013-07-08 11:45:19] [DEBUG] QueryTranslatorImpl:236 - SQL: select questionse0_.id as id1_1_, questionse0_.name as name2_1_, questionse0_.owner_id as owner3_1_ from QUESTIONSETS questionse0_
[2013-07-08 11:45:19] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 11:45:19] [DEBUG] SQL:104 - select questionse0_.id as id1_1_, questionse0_.name as name2_1_, questionse0_.owner_id as owner3_1_ from QUESTIONSETS questionse0_
[2013-07-08 11:45:19] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 11:45:19] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.QuestionSet#1]
[2013-07-08 11:45:19] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.QuestionSet#1]
[2013-07-08 11:45:19] [DEBUG] Loader:2105 - Loading entity: [org.example.models.User#aaa98]
[2013-07-08 11:45:19] [DEBUG] SQL:104 - select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:45:19] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 11:45:19] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#aaa98]
[2013-07-08 11:45:19] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#aaa98]
[2013-07-08 11:45:19] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#aaa98]
[2013-07-08 11:45:19] [DEBUG] Loader:2129 - Done entity load
[2013-07-08 11:45:19] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.QuestionSet#1]
[2013-07-08 11:45:19] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 11:45:19] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 11:45:19] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 11:45:19] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2013-07-08 11:45:19] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 11:45:19] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 11:45:19] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 11:45:19] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=1, name=Foundations of Computer Science example sheet, owner=org.example.models.User#aaa98}
[2013-07-08 11:45:19] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 11:45:19] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 11:45:19] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 11:45:19] [DEBUG] RavenFilter:389 - RavenFilter running for: /favicon.ico
[2013-07-08 11:45:19] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:45:19] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 11:45:19] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:45:19] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/favicon.ico
[2013-07-08 11:45:21] [DEBUG] RavenFilter:389 - RavenFilter running for: /favicon.ico
[2013-07-08 11:45:21] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:45:21] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 11:45:21] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:45:21] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/favicon.ico
