[2013-07-08 11:10:57] [ERROR] RavenFilter:327 - Unable to load certificate file: /home/jcb98/github_tests/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
java.io.FileNotFoundException: /home/jcb98/github_tests/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt (No such file or directory)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.<init>(FileInputStream.java:137)
	at java.io.FileInputStream.<init>(FileInputStream.java:96)
	at uk.ac.cam.ucs.webauth.RavenFilter.getKeyStore(RavenFilter.java:315)
	at uk.ac.cam.ucs.webauth.RavenFilter.init(RavenFilter.java:273)
	at org.eclipse.jetty.servlet.FilterHolder.doStart(FilterHolder.java:97)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:739)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:244)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1132)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:577)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:491)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:160)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at org.eclipse.jetty.server.handler.HandlerCollection$1.run(HandlerCollection.java:200)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:450)
	at java.lang.Thread.run(Thread.java:679)
[2013-07-08 11:12:29] [ERROR] RavenFilter:327 - Unable to load certificate file: /home/jcb98/github_tests/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
java.io.FileNotFoundException: /home/jcb98/github_tests/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt (No such file or directory)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.<init>(FileInputStream.java:137)
	at java.io.FileInputStream.<init>(FileInputStream.java:96)
	at uk.ac.cam.ucs.webauth.RavenFilter.getKeyStore(RavenFilter.java:315)
	at uk.ac.cam.ucs.webauth.RavenFilter.init(RavenFilter.java:273)
	at org.eclipse.jetty.servlet.FilterHolder.doStart(FilterHolder.java:97)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:739)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:244)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1132)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:577)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:491)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:160)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
	at org.eclipse.jetty.server.handler.HandlerCollection$1.run(HandlerCollection.java:200)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:450)
	at java.lang.Thread.run(Thread.java:679)
[2013-07-08 11:14:59] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 11:14:59] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 11:14:59] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 11:14:59] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 11:14:59] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 11:14:59] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 11:14:59] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 11:14:59] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 11:14:59] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 11:14:59] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 11:14:59] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 11:14:59] [INFO ] DriverManagerConnectionProviderImpl:156 - HHH000046: Connection properties: {user=sa, password=****}
[2013-07-08 11:14:59] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 11:14:59] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 11:14:59] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 11:14:59] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 11:14:59] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 11:14:59] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:14:59] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 11:14:59] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:14:59] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 11:14:59] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:14:59] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 11:14:59] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 11:14:59] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 11:23:19] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 11:23:19] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 11:23:19] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 11:23:19] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 11:23:19] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 11:23:19] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 11:23:19] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 11:23:19] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 11:23:19] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 11:23:19] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 11:23:19] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 11:23:19] [INFO ] DriverManagerConnectionProviderImpl:156 - HHH000046: Connection properties: {user=sa, password=****}
[2013-07-08 11:23:19] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 11:23:19] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 11:23:19] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 11:23:19] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 11:23:19] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 11:23:19] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:23:19] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 11:23:19] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:23:19] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 11:23:19] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:23:19] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 11:23:19] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 11:23:19] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 11:24:53] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 11:24:53] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 11:24:53] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 11:24:53] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 11:24:53] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 11:24:53] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 11:24:53] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 11:24:53] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 11:24:53] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 11:24:53] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 11:24:53] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 11:24:53] [INFO ] DriverManagerConnectionProviderImpl:156 - HHH000046: Connection properties: {user=sa, password=****}
[2013-07-08 11:24:53] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 11:24:54] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 11:24:54] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 11:24:54] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 11:24:54] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 11:24:54] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:24:54] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 11:24:54] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:24:54] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 11:24:54] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:24:54] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 11:24:54] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 11:24:54] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 11:28:21] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 11:28:21] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 11:28:21] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 11:28:21] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 11:28:21] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 11:28:21] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 11:28:21] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 11:28:21] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 11:28:21] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 11:28:21] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 11:28:21] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 11:28:21] [INFO ] DriverManagerConnectionProviderImpl:156 - HHH000046: Connection properties: {user=sa, password=****}
[2013-07-08 11:28:21] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 11:28:21] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 11:28:21] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 11:28:21] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 11:28:21] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 11:28:21] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:28:21] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 11:28:21] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:28:21] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 11:28:21] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:28:21] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 11:28:21] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 11:28:21] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 11:30:00] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 11:30:00] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 11:30:00] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 11:30:00] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 11:30:00] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 11:30:00] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 11:30:00] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 11:30:00] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 11:30:00] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 11:30:00] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 11:30:00] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 11:30:00] [INFO ] DriverManagerConnectionProviderImpl:156 - HHH000046: Connection properties: {user=sa, password=****}
[2013-07-08 11:30:00] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 11:30:00] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 11:30:00] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 11:30:00] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 11:30:00] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 11:30:00] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:30:00] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 11:30:00] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:30:00] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 11:30:00] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:30:00] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 11:30:00] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 11:30:00] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 11:33:09] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github_tests/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 11:33:09] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 11:33:09] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 11:33:09] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 11:33:09] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 11:33:09] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@22b90a6e
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@22b90a6e
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@22b90a6e
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@10ba5a81
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61335b86
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@12e29f36
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@724a2dd4
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@724a2dd4
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@724a2dd4
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@5092eb76
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@5092eb76
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5092eb76
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@db951f2
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@db951f2
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@db951f2
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@381bd13
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@381bd13
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@381bd13
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@448be1c9
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@448be1c9
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@448be1c9
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@d6d46d7
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@d6d46d7
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@d6d46d7
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@256b352c
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@256b352c
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@256b352c
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1e4276fd
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1e4276fd
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@54011d95
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@54011d95
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@39ce9085
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@39ce9085
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23f2bc83
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@c387202
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@111bda67
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@111bda67
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@7be758ca
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7be758ca
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@34a083f2
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@34a083f2
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1d30b5e2
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1d30b5e2
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1d30b5e2
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@c9021e3
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@5fb45ddc
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5fb45ddc
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5fb45ddc
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@388eed76
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@22c8ebd6
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@22c8ebd6
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@6b064b80
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6b064b80
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3c6e4ba6
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3c6e4ba6
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@55a517bd
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@55a517bd
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4c6030f9
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4c6030f9
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3bd85e85
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3834a1c8
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@51bfa303
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@51bfa303
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@51bfa303
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@71e13a2c
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@71e13a2c
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@71e13a2c
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@468034b6
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@976484e
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@976484e
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@976484e
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@74bffc3a
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@74bffc3a
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@74bffc3a
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@59e14a78
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@db2b10a
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@7aaf8b32
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7aaf8b32
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@50baa573
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@b9deddb
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b9deddb
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@114c02d4
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@114c02d4
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@20b124fa
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@766d4f30
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@48a84b47
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@4d8ef117
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4d8ef117
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@699dd97b
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7a315068
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3b961a84
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7ba6eeab
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@c7f5bf9
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7d6f3ed7
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1286d597
[2013-07-08 11:33:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5230b601
[2013-07-08 11:33:09] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 11:33:09] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 11:33:09] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 11:33:09] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 11:33:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 11:33:09] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 11:33:09] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 11:33:09] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 11:33:09] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 11:33:09] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 11:33:09] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 11:33:09] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 11:33:09] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 11:33:09] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 11:33:09] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 11:33:09] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 11:33:09] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 11:33:09] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 11:33:09] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 11:33:09] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 11:33:09] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 11:33:09] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 11:33:09] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 11:33:09] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github_tests/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 11:33:09] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 11:33:10] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 11:33:10] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 11:33:10] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 11:33:10] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 11:33:10] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 11:33:10] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 11:33:10] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 11:33:10] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 11:33:10] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 11:33:10] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 11:33:10] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 11:33:10] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 11:33:10] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 11:33:10] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:33:10] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:33:10] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:33:10] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:33:10] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 11:33:10] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:33:10] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 11:33:10] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 11:33:10] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:33:10] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:33:10] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 11:33:10] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:33:10] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 11:33:10] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 11:33:10] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:33:10] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:33:10] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 11:33:10] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:33:10] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:33:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 11:33:10] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 11:33:10] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 11:33:10] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:33:10] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 11:33:10] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:33:10] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 11:33:10] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:33:10] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 11:33:10] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:33:10] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:33:10] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:33:10] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:33:10] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:33:10] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:33:10] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:33:10] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:33:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:33:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:33:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 11:33:10] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 11:33:10] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 11:33:10] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 11:33:10] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 11:33:10] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 11:33:10] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github_tests/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 11:33:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:33:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:33:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 11:33:10] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:33:10] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:33:10] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@70d1c9b5
[2013-07-08 11:33:10] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 48e4f95f-8e4a-459b-8de1-302c034d5ee5 (<unnamed>)
[2013-07-08 11:33:10] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 11:33:10] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 11:33:10] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:33:10] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:33:10] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:33:10] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:33:10] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:33:10] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:33:10] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:33:10] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:33:10] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:33:10] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:33:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:33:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:33:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:33:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:33:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:33:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:33:10] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:33:10] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:33:10] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:33:10] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:33:10] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:33:10] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:33:10] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:33:10] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:33:10] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:33:10] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:33:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:33:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:33:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:33:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:33:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:33:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:33:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:33:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:33:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:33:10] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 11:33:10] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 11:33:10] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:33:10] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:33:10] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 11:33:10] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:33:10] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:33:10] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 11:33:10] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:33:10] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:33:10] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 11:33:10] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 11:33:10] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 11:33:10] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 11:33:10] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 11:33:10] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 11:33:10] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 11:33:10] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 11:33:10] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 11:33:10] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 11:33:10] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 11:33:10] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 11:33:10] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 11:33:10] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 11:33:10] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 11:33:16] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 11:33:16] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 11:33:16] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 11:33:16] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 11:33:16] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 11:33:16] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: aaa98, using strategy: org.hibernate.id.Assigned
[2013-07-08 11:33:16] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: bbb12, using strategy: org.hibernate.id.Assigned
[2013-07-08 11:33:16] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONSETS
[2013-07-08 11:33:16] [DEBUG] SQL:104 - select max(id) from QUESTIONSETS
[2013-07-08 11:33:16] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 11:33:16] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:33:16] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONS
[2013-07-08 11:33:16] [DEBUG] SQL:104 - select max(id) from QUESTIONS
[2013-07-08 11:33:16] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 11:33:16] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:33:16] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 2, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:33:16] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 3, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:33:16] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 11:33:16] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 11:33:16] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 11:33:17] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2013-07-08 11:33:17] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 11:33:17] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 11:33:17] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [power n k], that calculates k-th power of n., id=3, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:33:17] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=1, name=Foundations of Computer Science example sheet, owner=org.example.models.User#aaa98}
[2013-07-08 11:33:17] [DEBUG] EntityPrinter:121 - org.example.models.User{id=bbb12, name=Bob}
[2013-07-08 11:33:17] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 11:33:17] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [square n], that calculates square of n., id=1, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:33:17] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [factorial n], that calculates factorial of n., id=2, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:33:17] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 11:33:17] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 11:33:17] [DEBUG] SQL:104 - insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 11:33:17] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:33:17] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:33:17] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:33:17] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 11:33:17] [DEBUG] JdbcCoordinatorImpl:173 - HHH000420: Closing un-released batch
[2013-07-08 11:33:17] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 11:33:17] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 11:33:17] [DEBUG] SynchronousDispatcher:60 - PathInfo: /favicon.ico
[2013-07-08 11:34:23] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 11:34:28] [DEBUG] RavenFilter:389 - RavenFilter running for: /auth
[2013-07-08 11:34:28] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:34:28] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 11:34:28] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:34:28] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/auth
[2013-07-08 11:34:31] [DEBUG] RavenFilter:389 - RavenFilter running for: /auth
[2013-07-08 11:34:31] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T103431Z!1373279668-7869-0!http://localhost:8080/auth!jcb98!!pwd!35754!!2!jaR3O3ZrM1XyHWEaF-vhLKd.9uj0OTx7hyMeNRqFKADcafzKYTdSfs5rR2patWvEQWogMpK8XUsuGEQSVkOBBZzj0H3l5t55TevjJK9Aqe6AC3G93rrSlcrUoRuY9G2Xi3Mi1IluHidYm6pjn3xV8Cu77yKr3zFZNeYq4QDgsgg_
[2013-07-08 11:34:31] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/auth, desc: , aauth: , iact: , msg: , params: , date: 20130708T103428Z, fail: 
[2013-07-08 11:34:31] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:34:31] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 11:34:31] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T103431Z Last: 1373279671638 Life: 35754 ID: 1373279668-7869-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 11:34:31] [DEBUG] RavenFilter:389 - RavenFilter running for: /auth
[2013-07-08 11:34:31] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:34:31] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/auth, desc: , aauth: , iact: , msg: , params: , date: 20130708T103428Z, fail: 
[2013-07-08 11:34:31] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T103431Z Last: 1373279671638 Life: 35754 ID: 1373279668-7869-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 11:34:31] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 11:34:31] [DEBUG] SynchronousDispatcher:60 - PathInfo: /favicon.ico
[2013-07-08 11:37:07] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github_tests/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 11:37:07] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 11:37:07] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 11:37:07] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 11:37:07] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 11:37:07] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@717757ad
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@717757ad
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@717757ad
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3f78e13f
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@71e852be
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7844a013
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@10fd0a62
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@10fd0a62
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@10fd0a62
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@225bcd91
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@225bcd91
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@225bcd91
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@12e29f36
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@12e29f36
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@12e29f36
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@62f04dae
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@62f04dae
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@62f04dae
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@5092eb76
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@5092eb76
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5092eb76
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@57044c5
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@57044c5
[2013-07-08 11:37:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@57044c5
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@6b6c14c0
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@6b6c14c0
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6b6c14c0
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@a211b37
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@a211b37
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7051630a
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7051630a
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@448be1c9
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@448be1c9
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@10bfb545
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@145d424
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@256b352c
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@256b352c
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@1e4276fd
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e4276fd
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@6b5b5783
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6b5b5783
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@15364ee5
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15364ee5
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15364ee5
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@111bda67
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@3e7c609
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3e7c609
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3e7c609
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4c18fa85
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@7810a519
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7810a519
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@34a083f2
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@34a083f2
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2e7857a5
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2e7857a5
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@68f51766
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@68f51766
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@c65fb1
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@c65fb1
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3a7e479a
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@86ecec5
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@4e0bd5df
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4e0bd5df
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@4e0bd5df
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@591bfcbe
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@591bfcbe
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@591bfcbe
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@5afc0f5
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@3b0e2558
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3b0e2558
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@3b0e2558
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6e9c2192
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6e9c2192
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6e9c2192
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@3bd85e85
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@3834a1c8
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@74bffc3a
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@74bffc3a
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6fb8fcdd
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@6b91602
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6b91602
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@4d12bc7b
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4d12bc7b
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@164ca42b
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4a393167
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@627b5c
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@455bfaf
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@455bfaf
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2f031310
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@72d8978c
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@69c5a33b
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2e5facbd
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@b45c414
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@114c02d4
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@154db52b
[2013-07-08 11:37:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@20b124fa
[2013-07-08 11:37:08] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 11:37:08] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 11:37:08] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 11:37:08] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 11:37:08] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 11:37:08] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 11:37:08] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 11:37:08] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 11:37:08] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 11:37:08] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 11:37:08] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 11:37:08] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 11:37:08] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 11:37:08] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 11:37:08] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 11:37:08] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 11:37:08] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 11:37:08] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 11:37:08] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 11:37:08] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 11:37:08] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 11:37:08] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 11:37:08] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github_tests/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 11:37:08] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 11:37:08] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 11:37:08] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 11:37:08] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 11:37:08] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 11:37:08] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 11:37:08] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 11:37:08] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 11:37:08] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 11:37:08] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 11:37:08] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 11:37:08] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 11:37:08] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 11:37:08] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 11:37:08] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:37:08] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:37:08] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:37:08] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:37:08] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 11:37:08] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:37:08] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 11:37:08] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 11:37:08] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:37:08] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:37:08] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 11:37:08] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:37:08] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 11:37:08] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 11:37:08] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:37:08] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:37:08] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 11:37:08] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:37:08] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:37:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 11:37:08] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 11:37:08] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 11:37:08] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:37:08] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 11:37:08] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:37:08] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 11:37:08] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:37:08] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 11:37:08] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:37:08] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:37:08] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:37:08] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:37:08] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:37:08] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:37:08] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:37:08] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:37:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:37:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:37:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 11:37:08] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 11:37:08] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 11:37:08] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 11:37:08] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 11:37:08] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 11:37:08] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github_tests/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 11:37:08] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:37:08] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:37:08] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7bfcb845
[2013-07-08 11:37:08] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 095f74a0-19ba-4ce0-9122-f257cb174fc5 (<unnamed>)
[2013-07-08 11:37:08] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 11:37:08] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 11:37:08] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:37:08] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:37:08] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:37:08] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:37:08] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:37:08] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:37:08] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:37:08] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:37:08] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:37:08] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:37:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:37:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:37:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:37:08] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:37:08] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:37:08] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:37:08] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:37:08] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:37:08] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:37:08] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:37:08] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:37:08] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:37:08] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:37:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:37:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:37:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:37:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:37:08] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 11:37:08] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 11:37:08] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:37:08] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:37:08] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 11:37:08] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:37:08] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:37:08] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 11:37:08] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:37:08] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:37:08] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 11:37:08] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 11:37:08] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 11:37:08] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 11:37:08] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 11:37:08] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 11:37:08] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 11:37:08] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 11:37:08] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 11:37:08] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 11:37:08] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 11:37:08] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 11:37:08] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 11:37:08] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 11:37:08] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 11:37:21] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:37:21] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:37:21] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 11:37:21] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:37:21] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/
[2013-07-08 11:37:25] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:37:25] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T103725Z!1373279845-7236-12!http://localhost:8080/!jcb98!pwd!!36000!!2!JLNwTy.9Mn4dctmvUcZCUNU9zlupwaa0NZ1FdfRmEqM79RsmAiUgDreOCBbahOo1PciUS9oLw-MSbTmJ.NiFbdJV3QxbqnwKibK4COYXtthW8Mk-XT7zhBlzzUMeVIr.EjyBL.6DFkxZFvGtbrVBm47pslEgvpHryi7EzrqBu4M_
[2013-07-08 11:37:25] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T103721Z, fail: 
[2013-07-08 11:37:25] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:37:25] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 11:37:25] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T103725Z Last: 1373279845230 Life: 36000 ID: 1373279845-7236-12 Principal: RavenPrincipal--jcb98 AAuth: pwd SSO:  Params: 
[2013-07-08 11:37:25] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:37:25] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:37:25] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T103721Z, fail: 
[2013-07-08 11:37:25] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T103725Z Last: 1373279845230 Life: 36000 ID: 1373279845-7236-12 Principal: RavenPrincipal--jcb98 AAuth: pwd SSO:  Params: 
[2013-07-08 11:37:25] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 11:37:25] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 11:37:25] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 11:37:25] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 11:37:25] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 11:37:25] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 11:37:25] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: aaa98, using strategy: org.hibernate.id.Assigned
[2013-07-08 11:37:25] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: bbb12, using strategy: org.hibernate.id.Assigned
[2013-07-08 11:37:25] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONSETS
[2013-07-08 11:37:25] [DEBUG] SQL:104 - select max(id) from QUESTIONSETS
[2013-07-08 11:37:25] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 11:37:25] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:37:25] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONS
[2013-07-08 11:37:25] [DEBUG] SQL:104 - select max(id) from QUESTIONS
[2013-07-08 11:37:25] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 11:37:25] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:37:25] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 2, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:37:25] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 3, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:37:25] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 11:37:25] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 11:37:25] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 11:37:25] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2013-07-08 11:37:25] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 11:37:25] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 11:37:25] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [power n k], that calculates k-th power of n., id=3, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:37:25] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=1, name=Foundations of Computer Science example sheet, owner=org.example.models.User#aaa98}
[2013-07-08 11:37:25] [DEBUG] EntityPrinter:121 - org.example.models.User{id=bbb12, name=Bob}
[2013-07-08 11:37:25] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 11:37:25] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [square n], that calculates square of n., id=1, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:37:25] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [factorial n], that calculates factorial of n., id=2, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:37:25] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 11:37:25] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 11:37:25] [DEBUG] SQL:104 - insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 11:37:25] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:37:25] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:37:25] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:37:25] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 11:37:25] [DEBUG] JdbcCoordinatorImpl:173 - HHH000420: Closing un-released batch
[2013-07-08 11:37:25] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 11:37:25] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 11:37:25] [DEBUG] RavenFilter:389 - RavenFilter running for: /favicon.ico
[2013-07-08 11:37:25] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:37:25] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 11:37:25] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:37:25] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/favicon.ico
[2013-07-08 11:37:29] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:37:29] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:37:29] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T103721Z, fail: 
[2013-07-08 11:37:29] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T103725Z Last: 1373279845230 Life: 36000 ID: 1373279845-7236-12 Principal: RavenPrincipal--jcb98 AAuth: pwd SSO:  Params: 
[2013-07-08 11:37:29] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 11:37:29] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 11:37:29] [DEBUG] RavenFilter:389 - RavenFilter running for: /style.css
[2013-07-08 11:37:29] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:37:29] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T103721Z, fail: 
[2013-07-08 11:37:29] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T103725Z Last: 1373279845230 Life: 36000 ID: 1373279845-7236-12 Principal: RavenPrincipal--jcb98 AAuth: pwd SSO:  Params: 
[2013-07-08 11:37:29] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 11:37:29] [DEBUG] SynchronousDispatcher:60 - PathInfo: /style.css
[2013-07-08 11:37:29] [DEBUG] RavenFilter:389 - RavenFilter running for: /favicon.ico
[2013-07-08 11:37:29] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:37:29] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 11:37:29] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:37:29] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/favicon.ico
[2013-07-08 11:38:46] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github_tests/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 11:38:46] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 11:38:46] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 11:38:46] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 11:38:46] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 11:38:46] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@e7c0d41
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@e7c0d41
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@e7c0d41
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@477baf4
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@50f8ae79
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@57044c5
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@4c68059
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@4c68059
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4c68059
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@db951f2
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@db951f2
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@db951f2
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@d6d46d7
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@d6d46d7
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@d6d46d7
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@1b0fb9bd
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@1b0fb9bd
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b0fb9bd
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@4b5a4a77
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@4b5a4a77
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4b5a4a77
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@54011d95
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@54011d95
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@54011d95
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@28722969
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@28722969
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@28722969
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4dc4e792
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4dc4e792
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b9fa8f7
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b9fa8f7
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@657a7adf
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@657a7adf
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@11767553
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6fc41e49
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@5c392fe8
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5c392fe8
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@531a700a
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@531a700a
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@5fb45ddc
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5fb45ddc
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@22c8ebd6
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@22c8ebd6
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@22c8ebd6
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@591bfcbe
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@5afc0f5
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5afc0f5
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5afc0f5
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@49b9a538
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@c1bb35b
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@c1bb35b
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@3f2f529b
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3f2f529b
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@37285252
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@37285252
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@1ac84361
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1ac84361
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2bf87baf
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2bf87baf
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@b04bce3
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3484fdbc
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@68487fb7
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@68487fb7
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@68487fb7
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@55e03a61
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@55e03a61
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@55e03a61
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@4e850e8c
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@15f7dbd8
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@15f7dbd8
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@15f7dbd8
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5ecfe500
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5ecfe500
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5ecfe500
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@6b91602
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@e2f75e5
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@3e29b849
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3e29b849
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e3a4822
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@28c4b5f
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28c4b5f
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@3b961a84
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3b961a84
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@c7f5bf9
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1286d597
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@28bd36fa
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@44f1b25e
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44f1b25e
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2d97d09f
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4a018e1b
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2c18b492
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@9f6f3dc
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3403f5a0
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6ff2f60d
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@37f808e6
[2013-07-08 11:38:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7d1050be
[2013-07-08 11:38:46] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 11:38:46] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 11:38:46] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 11:38:46] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 11:38:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 11:38:46] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 11:38:46] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 11:38:46] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 11:38:46] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 11:38:46] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 11:38:46] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 11:38:46] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 11:38:46] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 11:38:46] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 11:38:46] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 11:38:46] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 11:38:46] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 11:38:46] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 11:38:46] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 11:38:46] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 11:38:46] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 11:38:46] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 11:38:46] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 11:38:46] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github_tests/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 11:38:46] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 11:38:46] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 11:38:46] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 11:38:46] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 11:38:46] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 11:38:46] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 11:38:46] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 11:38:46] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 11:38:47] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 11:38:47] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 11:38:47] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 11:38:47] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 11:38:47] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 11:38:47] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 11:38:47] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:38:47] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:38:47] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:38:47] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:38:47] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 11:38:47] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:38:47] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 11:38:47] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 11:38:47] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:38:47] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:38:47] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 11:38:47] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:38:47] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 11:38:47] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 11:38:47] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:38:47] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:38:47] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 11:38:47] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:38:47] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:38:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 11:38:47] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 11:38:47] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 11:38:47] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:38:47] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 11:38:47] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:38:47] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 11:38:47] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:38:47] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 11:38:47] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:38:47] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:38:47] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:38:47] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:38:47] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:38:47] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:38:47] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:38:47] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:38:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:38:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:38:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 11:38:47] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 11:38:47] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 11:38:47] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 11:38:47] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 11:38:47] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 11:38:47] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github_tests/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 11:38:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:38:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:38:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 11:38:47] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:38:47] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:38:47] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3225753d
[2013-07-08 11:38:47] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 0630e8a2-4cd0-4c19-bb07-98aef32b95b1 (<unnamed>)
[2013-07-08 11:38:47] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 11:38:47] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 11:38:47] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:38:47] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:38:47] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:38:47] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:38:47] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:38:47] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:38:47] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:38:47] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:38:47] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:38:47] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:38:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:38:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:38:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:38:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:38:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:38:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:38:47] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:38:47] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:38:47] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:38:47] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:38:47] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:38:47] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:38:47] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:38:47] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:38:47] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:38:47] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:38:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:38:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:38:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:38:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:38:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:38:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:38:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:38:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:38:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:38:47] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 11:38:47] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 11:38:47] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:38:47] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:38:47] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 11:38:47] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:38:47] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:38:47] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 11:38:47] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:38:47] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:38:47] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 11:38:47] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 11:38:47] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 11:38:47] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 11:38:47] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 11:38:47] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 11:38:47] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 11:38:47] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 11:38:47] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 11:38:47] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 11:38:47] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 11:38:47] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 11:38:47] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 11:38:47] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 11:38:47] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 11:38:48] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:38:48] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:38:48] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 11:38:48] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:38:48] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/
[2013-07-08 11:38:50] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:38:50] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T103849Z!1373279928-7633-4!http://localhost:8080/!jcb98!!pwd!30623!!2!pf.sAKk-2m6NtFifzT9LhvrHYO984s6l.I2gR0yhi3GWMox3BNczf8gW7fJlMaIo2wKYzI36HblDwdTD26IiKlNdS6Y2BZuj.Zw6PJ0Rco.6xM2tcomMNeI0BhHEQQ0JH44Nixq1edKZ32SjoqVQrqe8EHIn-.ZZ2FxCT1jcNHo_
[2013-07-08 11:38:50] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T103848Z, fail: 
[2013-07-08 11:38:50] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:38:50] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 11:38:50] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T103849Z Last: 1373279930047 Life: 30623 ID: 1373279928-7633-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 11:38:50] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:38:50] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:38:50] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T103848Z, fail: 
[2013-07-08 11:38:50] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T103849Z Last: 1373279930047 Life: 30623 ID: 1373279928-7633-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 11:38:50] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 11:38:50] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 11:38:50] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 11:38:50] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 11:38:50] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 11:38:50] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 11:38:50] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: aaa98, using strategy: org.hibernate.id.Assigned
[2013-07-08 11:38:50] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: bbb12, using strategy: org.hibernate.id.Assigned
[2013-07-08 11:38:50] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONSETS
[2013-07-08 11:38:50] [DEBUG] SQL:104 - select max(id) from QUESTIONSETS
[2013-07-08 11:38:50] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 11:38:50] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:38:50] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONS
[2013-07-08 11:38:50] [DEBUG] SQL:104 - select max(id) from QUESTIONS
[2013-07-08 11:38:50] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 11:38:50] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:38:50] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 2, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:38:50] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 3, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:38:50] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 11:38:50] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 11:38:50] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 11:38:50] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2013-07-08 11:38:50] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 11:38:50] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 11:38:50] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [power n k], that calculates k-th power of n., id=3, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:38:50] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=1, name=Foundations of Computer Science example sheet, owner=org.example.models.User#aaa98}
[2013-07-08 11:38:50] [DEBUG] EntityPrinter:121 - org.example.models.User{id=bbb12, name=Bob}
[2013-07-08 11:38:50] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 11:38:50] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [square n], that calculates square of n., id=1, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:38:50] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [factorial n], that calculates factorial of n., id=2, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:38:50] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 11:38:50] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 11:38:50] [DEBUG] SQL:104 - insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 11:38:50] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:38:50] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:38:50] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:38:50] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 11:38:50] [DEBUG] JdbcCoordinatorImpl:173 - HHH000420: Closing un-released batch
[2013-07-08 11:38:50] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 11:38:50] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 11:39:10] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github_tests/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 11:39:10] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 11:39:10] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 11:39:10] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 11:39:10] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 11:39:10] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@7e266b44
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@7e266b44
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7e266b44
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4b90725e
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@225bcd91
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@10ba5a81
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@54eeabe8
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@54eeabe8
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@54eeabe8
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@7cd47880
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@7cd47880
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7cd47880
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@62e59e40
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@62e59e40
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@62e59e40
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@57044c5
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@57044c5
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57044c5
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@4c68059
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@4c68059
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4c68059
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@a211b37
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@a211b37
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@a211b37
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@6f3d5f21
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@6f3d5f21
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f3d5f21
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1a15cd9a
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1a15cd9a
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@f6a8823
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@f6a8823
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@216feee5
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@216feee5
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4b5a4a77
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1d91eb90
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@153d4c49
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@153d4c49
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@15364ee5
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15364ee5
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@111bda67
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@111bda67
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4c18fa85
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4c18fa85
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4c18fa85
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6fc41e49
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@5c392fe8
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5c392fe8
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5c392fe8
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5ec22978
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@32d35f5f
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@32d35f5f
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@c9021e3
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@c9021e3
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5fb45ddc
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5fb45ddc
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@2f87fafc
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f87fafc
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6a46f764
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6a46f764
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3c6e4ba6
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@55a517bd
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@1db5d2b2
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1db5d2b2
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@1db5d2b2
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4c6030f9
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4c6030f9
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4c6030f9
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@7a258c74
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@7696e4c
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7696e4c
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@7696e4c
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7c6743e2
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7c6743e2
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7c6743e2
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@79b2591c
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@b04bce3
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@15f7dbd8
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15f7dbd8
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1f98a654
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@7794566d
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7794566d
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@2d6acad2
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2d6acad2
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2501e081
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@455bfaf
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@72d8978c
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@4df2a9da
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4df2a9da
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@26a150e
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@28c4b5f
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@48a84b47
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@20e64795
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6e659812
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4fe2fe5d
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3fa9b4a4
[2013-07-08 11:39:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1e929ba3
[2013-07-08 11:39:11] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 11:39:11] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 11:39:11] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 11:39:11] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 11:39:11] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 11:39:11] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 11:39:11] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 11:39:11] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 11:39:11] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 11:39:11] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 11:39:11] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 11:39:11] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 11:39:11] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 11:39:11] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 11:39:11] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 11:39:11] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 11:39:11] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 11:39:11] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 11:39:11] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 11:39:11] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 11:39:11] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 11:39:11] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 11:39:11] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github_tests/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 11:39:11] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 11:39:11] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 11:39:11] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 11:39:11] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 11:39:11] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 11:39:11] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 11:39:11] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 11:39:11] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 11:39:11] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 11:39:11] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 11:39:11] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 11:39:11] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 11:39:11] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 11:39:11] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 11:39:11] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:39:11] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:39:11] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:39:11] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:39:11] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 11:39:11] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:39:11] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 11:39:11] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 11:39:11] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:39:11] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:39:11] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 11:39:11] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:39:11] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 11:39:11] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 11:39:11] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:39:11] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:39:11] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 11:39:11] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:39:11] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:39:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 11:39:11] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 11:39:11] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 11:39:11] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:39:11] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 11:39:11] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:39:11] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 11:39:11] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:39:11] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 11:39:11] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:39:11] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:39:11] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:39:11] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:39:11] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:39:11] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:39:11] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:39:11] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:39:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:39:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:39:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 11:39:11] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 11:39:11] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 11:39:11] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 11:39:11] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 11:39:11] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 11:39:11] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github_tests/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 11:39:11] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:39:11] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:39:11] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7c230be4
[2013-07-08 11:39:11] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: ce50314a-a2cf-4806-8870-67857cae16bc (<unnamed>)
[2013-07-08 11:39:11] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 11:39:11] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 11:39:11] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:39:11] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:39:11] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:39:11] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:39:11] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:39:11] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:39:11] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:39:11] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:39:11] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:39:11] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:39:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:39:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:39:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:39:11] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:39:11] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:39:11] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:39:11] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:39:11] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:39:11] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:39:11] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:39:11] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:39:11] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:39:11] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:39:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:39:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:39:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:39:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:39:11] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 11:39:11] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 11:39:11] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:39:11] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:39:11] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 11:39:11] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:39:11] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:39:11] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 11:39:11] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:39:11] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:39:11] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 11:39:11] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 11:39:11] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 11:39:11] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 11:39:11] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 11:39:11] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 11:39:11] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 11:39:11] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 11:39:11] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 11:39:11] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 11:39:11] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 11:39:11] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 11:39:11] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 11:39:11] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 11:39:11] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 11:39:11] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:39:11] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:39:11] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 11:39:11] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:39:11] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/
[2013-07-08 11:39:14] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:39:14] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T103914Z!1373279951-8004-4!http://localhost:8080/!jcb98!!pwd!30600!!2!gM1-X9a6NPnK1Dwh0VzO2hrXvd8BTBx3oOGP4nB63Mo2u6qa.D22IaaSTMEdu7iMGMEtX0hkL2QwkhBqC4fkTlgpJNTsBNHqt1UkFNSoQ.OC1IYWYYB9ki.a3vswg7p.01TSjT5gwjvL4n9u6bafmzg9R6VlOEo2DiIRkxuyHYQ_
[2013-07-08 11:39:14] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T103911Z, fail: 
[2013-07-08 11:39:14] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:39:14] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 11:39:14] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T103914Z Last: 1373279954673 Life: 30600 ID: 1373279951-8004-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 11:39:14] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:39:14] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:39:14] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T103911Z, fail: 
[2013-07-08 11:39:14] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T103914Z Last: 1373279954673 Life: 30600 ID: 1373279951-8004-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 11:39:14] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 11:39:14] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 11:39:14] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 11:39:14] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 11:39:14] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 11:39:14] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 11:39:14] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: aaa98, using strategy: org.hibernate.id.Assigned
[2013-07-08 11:39:14] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: bbb12, using strategy: org.hibernate.id.Assigned
[2013-07-08 11:39:14] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONSETS
[2013-07-08 11:39:14] [DEBUG] SQL:104 - select max(id) from QUESTIONSETS
[2013-07-08 11:39:14] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 11:39:14] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:39:14] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONS
[2013-07-08 11:39:14] [DEBUG] SQL:104 - select max(id) from QUESTIONS
[2013-07-08 11:39:14] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 11:39:14] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:39:14] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 2, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:39:14] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 3, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:39:14] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 11:39:14] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 11:39:14] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 11:39:14] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2013-07-08 11:39:14] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 11:39:14] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 11:39:14] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [power n k], that calculates k-th power of n., id=3, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:39:14] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=1, name=Foundations of Computer Science example sheet, owner=org.example.models.User#aaa98}
[2013-07-08 11:39:14] [DEBUG] EntityPrinter:121 - org.example.models.User{id=bbb12, name=Bob}
[2013-07-08 11:39:14] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 11:39:14] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [square n], that calculates square of n., id=1, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:39:14] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [factorial n], that calculates factorial of n., id=2, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:39:14] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 11:39:14] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 11:39:14] [DEBUG] SQL:104 - insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 11:39:14] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:39:14] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:39:14] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:39:14] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 11:39:14] [DEBUG] JdbcCoordinatorImpl:173 - HHH000420: Closing un-released batch
[2013-07-08 11:39:14] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 11:39:14] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 11:41:26] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:41:26] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:41:26] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T103911Z, fail: 
[2013-07-08 11:41:26] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T103914Z Last: 1373279954673 Life: 30600 ID: 1373279951-8004-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 11:41:26] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 11:41:26] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 11:41:29] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:41:29] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:41:29] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T103911Z, fail: 
[2013-07-08 11:41:29] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T103914Z Last: 1373279954673 Life: 30600 ID: 1373279951-8004-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 11:41:29] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 11:41:29] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 11:43:48] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github_tests/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 11:43:48] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 11:43:48] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 11:43:48] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 11:43:48] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 11:43:48] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@5d0e2c9
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@5d0e2c9
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5d0e2c9
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@48834af6
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6a3de2df
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2e0ca6ae
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@2569a1c5
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@2569a1c5
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2569a1c5
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@4f5264db
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@4f5264db
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4f5264db
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@3f9f76a5
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@3f9f76a5
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3f9f76a5
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@71e852be
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@71e852be
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@71e852be
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@762d80ae
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@762d80ae
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@762d80ae
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@225bcd91
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@225bcd91
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@225bcd91
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@31f9b804
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@31f9b804
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@31f9b804
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cd47880
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cd47880
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@12e29f36
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@12e29f36
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@62f04dae
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@62f04dae
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6406f3ea
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5da0b94d
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@7686b376
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7686b376
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@4c68059
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4c68059
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@a211b37
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@a211b37
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2630a895
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2630a895
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2630a895
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a15cd9a
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@f6a8823
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@f6a8823
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@f6a8823
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@256b352c
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@5e53bbfa
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5e53bbfa
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@1e4276fd
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e4276fd
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@54011d95
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@54011d95
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@39ce9085
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@39ce9085
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@c387202
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@c387202
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3a3f4a21
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6f0e0eb5
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@4c18fa85
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4c18fa85
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@4c18fa85
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7810a519
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7810a519
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7810a519
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@34a083f2
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@2e7857a5
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2e7857a5
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@2e7857a5
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68f51766
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68f51766
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68f51766
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@6cb1cb25
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@c65fb1
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@6e9c2192
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6e9c2192
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3f2f529b
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@b04bce3
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b04bce3
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@4e850e8c
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4e850e8c
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3ea763a
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@43824d2c
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@22c393a1
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@7aaf8b32
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7aaf8b32
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@50baa573
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@dc44a6d
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@51f2412a
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7794566d
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2bb64b70
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4d12bc7b
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@91456c5
[2013-07-08 11:43:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@164ca42b
[2013-07-08 11:43:48] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 11:43:48] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 11:43:48] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 11:43:48] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 11:43:48] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 11:43:48] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 11:43:48] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 11:43:48] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 11:43:48] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 11:43:48] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 11:43:48] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 11:43:48] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 11:43:48] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 11:43:48] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 11:43:48] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 11:43:48] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 11:43:48] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 11:43:48] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 11:43:48] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 11:43:48] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 11:43:48] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 11:43:48] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 11:43:48] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github_tests/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 11:43:48] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 11:43:48] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 11:43:48] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 11:43:48] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 11:43:48] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 11:43:48] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 11:43:48] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 11:43:48] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 11:43:48] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 11:43:48] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 11:43:48] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 11:43:48] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 11:43:48] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 11:43:48] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 11:43:48] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:43:48] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:43:48] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:43:48] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:43:48] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 11:43:48] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:43:48] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 11:43:48] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 11:43:48] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:43:48] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:43:48] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 11:43:48] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:43:48] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 11:43:48] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 11:43:48] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 11:43:48] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 11:43:48] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 11:43:48] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 11:43:48] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 11:43:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 11:43:48] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 11:43:48] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 11:43:48] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:43:48] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 11:43:48] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:43:48] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 11:43:48] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 11:43:48] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 11:43:48] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:43:48] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:43:48] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:43:48] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:43:48] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:43:48] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:43:48] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:43:48] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:43:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:43:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:43:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 11:43:48] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 11:43:48] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 11:43:48] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 11:43:48] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 11:43:48] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 11:43:48] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github_tests/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 11:43:48] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:43:48] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:43:48] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@dbe996d
[2013-07-08 11:43:48] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 79ad0d67-9516-4b44-afe7-7321287faec0 (<unnamed>)
[2013-07-08 11:43:48] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 11:43:48] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 11:43:48] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:43:48] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:43:48] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:43:48] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:43:48] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:43:48] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:43:48] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:43:48] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:43:48] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:43:48] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:43:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:43:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:43:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:43:48] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 11:43:48] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 11:43:48] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 11:43:48] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 11:43:48] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 11:43:48] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 11:43:48] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 11:43:48] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 11:43:48] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 11:43:48] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 11:43:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:43:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 11:43:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:43:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 11:43:48] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 11:43:48] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 11:43:48] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:43:48] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 11:43:48] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 11:43:48] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:43:48] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 11:43:48] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 11:43:48] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:43:48] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 11:43:48] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 11:43:48] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 11:43:48] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 11:43:48] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 11:43:48] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 11:43:48] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 11:43:48] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 11:43:48] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 11:43:48] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 11:43:48] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 11:43:48] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 11:43:48] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 11:43:48] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 11:43:48] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 11:43:48] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 11:43:50] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:43:50] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:43:50] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 11:43:50] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:43:50] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/
[2013-07-08 11:43:51] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:43:51] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T104351Z!1373280230-7808-4!http://localhost:8080/!jcb98!!pwd!35615!!2!Yqys7ouRZhy08gs2CishM2a7zPzTxu1DyVFTEqsCwW8DnoallEp75dYaUuRPqfbQT-6Yyp7Gyb9nJl0gWbxMjXj42uyTUUZIh-4TPXyzykOZUL-eP5atGOJzzq0xNS91DZMH9ZbM.ZpjAWNk7WT620Rmr-yev1eRJFQ0BT0QZKc_
[2013-07-08 11:43:51] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T104350Z, fail: 
[2013-07-08 11:43:51] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:43:51] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 11:43:51] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T104351Z Last: 1373280231846 Life: 35615 ID: 1373280230-7808-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 11:43:51] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 11:43:51] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:43:51] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T104350Z, fail: 
[2013-07-08 11:43:51] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T104351Z Last: 1373280231846 Life: 35615 ID: 1373280230-7808-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 11:43:51] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 11:43:51] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 11:43:51] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 11:43:51] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 11:43:51] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 11:43:51] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 11:43:51] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: aaa98, using strategy: org.hibernate.id.Assigned
[2013-07-08 11:43:51] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: bbb12, using strategy: org.hibernate.id.Assigned
[2013-07-08 11:43:51] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONSETS
[2013-07-08 11:43:51] [DEBUG] SQL:104 - select max(id) from QUESTIONSETS
[2013-07-08 11:43:51] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 11:43:51] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:43:51] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONS
[2013-07-08 11:43:51] [DEBUG] SQL:104 - select max(id) from QUESTIONS
[2013-07-08 11:43:51] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 11:43:51] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:43:51] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 2, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:43:51] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 3, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 11:43:51] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 11:43:51] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 11:43:51] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 11:43:51] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2013-07-08 11:43:51] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 11:43:51] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 11:43:51] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [power n k], that calculates k-th power of n., id=3, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:43:51] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=1, name=Foundations of Computer Science example sheet, owner=org.example.models.User#aaa98}
[2013-07-08 11:43:51] [DEBUG] EntityPrinter:121 - org.example.models.User{id=bbb12, name=Bob}
[2013-07-08 11:43:51] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 11:43:51] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [square n], that calculates square of n., id=1, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:43:51] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [factorial n], that calculates factorial of n., id=2, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 11:43:51] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 11:43:51] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 11:43:51] [DEBUG] SQL:104 - insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 11:43:51] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:43:51] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:43:51] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 11:43:51] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 11:43:51] [DEBUG] JdbcCoordinatorImpl:173 - HHH000420: Closing un-released batch
[2013-07-08 11:43:51] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 11:43:51] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 11:43:52] [DEBUG] RavenFilter:389 - RavenFilter running for: /favicon.ico
[2013-07-08 11:43:52] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:43:52] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 11:43:52] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:43:52] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/favicon.ico
[2013-07-08 11:45:19] [DEBUG] RavenFilter:389 - RavenFilter running for: /set/
[2013-07-08 11:45:19] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:45:19] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T104350Z, fail: 
[2013-07-08 11:45:19] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T104351Z Last: 1373280231846 Life: 35615 ID: 1373280230-7808-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 11:45:19] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 11:45:19] [DEBUG] SynchronousDispatcher:60 - PathInfo: /set/
[2013-07-08 11:45:19] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 11:45:19] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 11:45:19] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 11:45:19] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 11:45:19] [DEBUG] QueryTranslatorImpl:265 - parse() - HQL: from org.example.models.QuestionSet
[2013-07-08 11:45:19] [DEBUG] QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'org'
                |  |  \-[IDENT] Node: 'example'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'QuestionSet'

[2013-07-08 11:45:19] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 11:45:19] [DEBUG] HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
[2013-07-08 11:45:19] [DEBUG] FromElement:157 - FromClause{level=1} : org.example.models.QuestionSet (<no alias>) -> questionse0_
[2013-07-08 11:45:19] [DEBUG] HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
[2013-07-08 11:45:19] [DEBUG] HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} QUESTIONSETS questionse0_ ) )
[2013-07-08 11:45:19] [DEBUG] HqlSqlWalker:869 - Derived SELECT clause created.
[2013-07-08 11:45:19] [DEBUG] JoinProcessor:177 - Using FROM fragment [QUESTIONSETS questionse0_]
[2013-07-08 11:45:19] [DEBUG] HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
[2013-07-08 11:45:19] [DEBUG] QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (QUESTIONSETS)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'questionse0_.id as id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=QUESTIONSETS,tableAlias=questionse0_,origin=null,columns={,className=org.example.models.QuestionSet}}}
    |  \-[SQL_TOKEN] SqlFragment: 'questionse0_.name as name2_1_, questionse0_.owner_id as owner3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[questionse0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'QUESTIONSETS questionse0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=QUESTIONSETS,tableAlias=questionse0_,origin=null,columns={,className=org.example.models.QuestionSet}}

[2013-07-08 11:45:19] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 11:45:19] [DEBUG] QueryTranslatorImpl:235 - HQL: from org.example.models.QuestionSet
[2013-07-08 11:45:19] [DEBUG] QueryTranslatorImpl:236 - SQL: select questionse0_.id as id1_1_, questionse0_.name as name2_1_, questionse0_.owner_id as owner3_1_ from QUESTIONSETS questionse0_
[2013-07-08 11:45:19] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 11:45:19] [DEBUG] SQL:104 - select questionse0_.id as id1_1_, questionse0_.name as name2_1_, questionse0_.owner_id as owner3_1_ from QUESTIONSETS questionse0_
[2013-07-08 11:45:19] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 11:45:19] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.QuestionSet#1]
[2013-07-08 11:45:19] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.QuestionSet#1]
[2013-07-08 11:45:19] [DEBUG] Loader:2105 - Loading entity: [org.example.models.User#aaa98]
[2013-07-08 11:45:19] [DEBUG] SQL:104 - select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 11:45:19] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 11:45:19] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#aaa98]
[2013-07-08 11:45:19] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#aaa98]
[2013-07-08 11:45:19] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#aaa98]
[2013-07-08 11:45:19] [DEBUG] Loader:2129 - Done entity load
[2013-07-08 11:45:19] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.QuestionSet#1]
[2013-07-08 11:45:19] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 11:45:19] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 11:45:19] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 11:45:19] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2013-07-08 11:45:19] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 11:45:19] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 11:45:19] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 11:45:19] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=1, name=Foundations of Computer Science example sheet, owner=org.example.models.User#aaa98}
[2013-07-08 11:45:19] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 11:45:19] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 11:45:19] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 11:45:19] [DEBUG] RavenFilter:389 - RavenFilter running for: /favicon.ico
[2013-07-08 11:45:19] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:45:19] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 11:45:19] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:45:19] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/favicon.ico
[2013-07-08 11:45:21] [DEBUG] RavenFilter:389 - RavenFilter running for: /favicon.ico
[2013-07-08 11:45:21] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 11:45:21] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 11:45:21] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 11:45:21] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/favicon.ico
[2013-07-08 16:02:48] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 16:02:48] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 16:02:48] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 16:02:48] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 16:02:48] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 16:02:48] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@d174031
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@d174031
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@d174031
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4c18e99
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@c4c7e10
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4b90725e
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@255b5c1f
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@255b5c1f
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@255b5c1f
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@22b90a6e
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@22b90a6e
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@22b90a6e
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@72bdec44
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@72bdec44
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@72bdec44
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@190a0d51
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@190a0d51
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@190a0d51
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@477baf4
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@477baf4
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@477baf4
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@7686b376
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@7686b376
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7686b376
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@174da86b
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@174da86b
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@174da86b
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b2ede8
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b2ede8
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3aa42c31
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3aa42c31
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@2630a895
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2630a895
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@fe14de0
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@d6d46d7
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@1b0fb9bd
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1b0fb9bd
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@14cef147
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@14cef147
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@153d4c49
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@153d4c49
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@23f2bc83
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@23f2bc83
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@23f2bc83
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3a3f4a21
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@6f0e0eb5
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6f0e0eb5
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6f0e0eb5
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@657a7adf
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@11767553
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@11767553
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@6fc41e49
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6fc41e49
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5c392fe8
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5c392fe8
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@1d30b5e2
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1d30b5e2
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4aa0c486
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4aa0c486
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fb45ddc
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2f87fafc
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@34f34071
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@34f34071
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@34f34071
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6a46f764
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6a46f764
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6a46f764
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@6d289e48
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@49b9a538
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@49b9a538
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@49b9a538
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@c1bb35b
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@c1bb35b
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@c1bb35b
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@3f2f529b
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@37285252
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@72e5c94
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@72e5c94
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@68487fb7
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@561140db
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@561140db
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@2bb64b70
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2bb64b70
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@91456c5
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1ae0e7d
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@1ae637f0
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@1e3a4822
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1e3a4822
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@199b7c62
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2f031310
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@72d8978c
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@69c5a33b
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e5facbd
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@b45c414
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@114c02d4
[2013-07-08 16:02:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@154db52b
[2013-07-08 16:02:48] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 16:02:48] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 16:02:48] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 16:02:48] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 16:02:49] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 16:02:49] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 16:02:49] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 16:02:49] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 16:02:49] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 16:02:49] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 16:02:49] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 16:02:49] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 16:02:49] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 16:02:49] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 16:02:49] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 16:02:49] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 16:02:49] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 16:02:49] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 16:02:49] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 16:02:49] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 16:02:49] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 16:02:49] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 16:02:49] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 16:02:49] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 16:02:49] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 16:02:49] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 16:02:49] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 16:02:49] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 16:02:49] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 16:02:49] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 16:02:49] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 16:02:49] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 16:02:49] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:02:49] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:02:49] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 16:02:49] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 16:02:49] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 16:02:49] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:02:49] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:02:49] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 16:02:49] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:02:49] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:02:49] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 16:02:49] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 16:02:49] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:02:49] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:02:49] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:02:49] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:02:49] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:02:49] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 16:02:49] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 16:02:49] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 16:02:49] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 16:02:49] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 16:02:49] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 16:02:49] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:02:49] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 16:02:49] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 16:02:49] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 16:02:49] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:02:49] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:02:49] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 16:02:49] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 16:02:49] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:02:49] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:02:49] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:02:49] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:02:49] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:02:49] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:02:49] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:02:49] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:02:49] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:02:49] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 16:02:49] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 16:02:49] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 16:02:49] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:02:49] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:02:49] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 16:02:49] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 16:02:49] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:02:49] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:02:49] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:02:49] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:02:49] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:02:49] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:02:49] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:02:49] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:02:49] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:02:49] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 16:02:49] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:02:49] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:02:49] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:02:49] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:02:49] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:02:49] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:02:49] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:02:49] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:02:49] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:02:49] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:02:49] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:02:49] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:02:49] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:02:49] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:02:49] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 16:02:49] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 16:02:49] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 16:02:49] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 16:02:49] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 16:02:49] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 16:02:49] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:02:49] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 16:02:49] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 16:02:49] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 16:02:49] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 16:02:49] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 16:02:49] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 16:02:49] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 16:02:49] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 16:02:49] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 16:02:49] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 16:02:49] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 16:02:49] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 16:02:49] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 16:02:49] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 16:02:49] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 16:02:49] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 16:02:49] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 16:02:49] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:02:49] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:02:49] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:02:49] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:02:49] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:02:49] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:02:49] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:02:49] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:02:49] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2d63c5bb
[2013-07-08 16:02:49] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: dac8b3ef-cb29-4f2c-8fc8-a0bc30e6f3d7 (<unnamed>)
[2013-07-08 16:02:49] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 16:02:49] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 16:02:49] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:02:49] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:02:49] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:02:49] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:02:49] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:02:49] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:02:49] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:02:49] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:02:49] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:02:49] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:02:49] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:02:49] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:02:49] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:02:49] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:02:49] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:02:49] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:02:49] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:02:49] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:02:49] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:02:49] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:02:49] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:02:49] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:02:49] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:02:49] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:02:49] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:02:49] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:02:49] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:02:49] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 16:02:49] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 16:02:49] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:02:49] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:02:49] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 16:02:49] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:02:49] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:02:49] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 16:02:49] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:02:49] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:02:49] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 16:02:49] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 16:02:49] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 16:02:49] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 16:02:49] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 16:02:49] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 16:02:49] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 16:02:49] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 16:02:49] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 16:02:49] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 16:02:49] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 16:02:49] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 16:02:49] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 16:02:49] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 16:02:49] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 16:02:55] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 16:02:55] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:02:55] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 16:02:55] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:02:55] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/
[2013-07-08 16:03:00] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 16:03:00] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T150300Z!1373295775-17407-2!http://localhost:8080/!jcb98!!pwd!14776!!2!ZYnAurK3mztpkqcr-ev1geR0T8ee0lWKcD2iZz5n5INikk.dtUaCxkyeViFS68PHLUc-1Rd-Gz0cNmDl6pOh9kdkzLK1uNyNKFigO8Td6uS7-846ogyz7Wfy4psnwTLwsl7pMxxzgWH3QZGrWQpsgiVI37IfMGzGf5ahpsUtskg_
[2013-07-08 16:03:00] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T150255Z, fail: 
[2013-07-08 16:03:00] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:03:00] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 16:03:00] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T150300Z Last: 1373295780173 Life: 14776 ID: 1373295775-17407-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:03:00] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 16:03:00] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:03:00] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T150255Z, fail: 
[2013-07-08 16:03:00] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T150300Z Last: 1373295780173 Life: 14776 ID: 1373295775-17407-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:03:00] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 16:03:00] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 16:03:00] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 16:03:00] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 16:03:00] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 16:03:00] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 16:03:00] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: aaa98, using strategy: org.hibernate.id.Assigned
[2013-07-08 16:03:00] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: bbb12, using strategy: org.hibernate.id.Assigned
[2013-07-08 16:03:00] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONSETS
[2013-07-08 16:03:00] [DEBUG] SQL:104 - select max(id) from QUESTIONSETS
[2013-07-08 16:03:00] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 16:03:00] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 16:03:00] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONS
[2013-07-08 16:03:00] [DEBUG] SQL:104 - select max(id) from QUESTIONS
[2013-07-08 16:03:00] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 16:03:00] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 16:03:00] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 2, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 16:03:00] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 3, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 16:03:00] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 16:03:00] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 16:03:00] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 16:03:00] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2013-07-08 16:03:00] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 16:03:00] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 16:03:00] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [power n k], that calculates k-th power of n., id=3, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 16:03:00] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=1, name=Foundations of Computer Science example sheet, owner=org.example.models.User#aaa98}
[2013-07-08 16:03:00] [DEBUG] EntityPrinter:121 - org.example.models.User{id=bbb12, name=Bob}
[2013-07-08 16:03:00] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 16:03:00] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [square n], that calculates square of n., id=1, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 16:03:00] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [factorial n], that calculates factorial of n., id=2, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 16:03:00] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 16:03:00] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 16:03:00] [DEBUG] SQL:104 - insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 16:03:00] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 16:03:00] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 16:03:00] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 16:03:00] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 16:03:00] [DEBUG] JdbcCoordinatorImpl:173 - HHH000420: Closing un-released batch
[2013-07-08 16:03:00] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 16:03:00] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 16:03:05] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:03:05] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:03:05] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T150255Z, fail: 
[2013-07-08 16:03:05] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T150300Z Last: 1373295780173 Life: 14776 ID: 1373295775-17407-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:03:05] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 16:03:05] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 16:04:49] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 16:04:49] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 16:04:49] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 16:04:49] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 16:04:49] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 16:04:49] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@4145582
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@4145582
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4145582
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1b2ede8
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7051630a
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2630a895
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@1a15cd9a
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@1a15cd9a
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1a15cd9a
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@f6a8823
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@f6a8823
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@f6a8823
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@6b5b5783
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@6b5b5783
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6b5b5783
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@5efcc13d
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@5efcc13d
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5efcc13d
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@4dc4e792
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@4dc4e792
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4dc4e792
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@3e7c609
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@3e7c609
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3e7c609
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@11767553
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@11767553
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@11767553
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5c392fe8
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5c392fe8
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1d30b5e2
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1d30b5e2
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@531a700a
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@531a700a
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4aa0c486
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3a7e479a
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@86ecec5
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@86ecec5
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@591bfcbe
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@591bfcbe
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@49b9a538
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@49b9a538
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4c6030f9
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4c6030f9
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4c6030f9
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3834a1c8
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@51bfa303
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@51bfa303
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@51bfa303
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5f99ea3c
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@2bf87baf
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2bf87baf
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@640ce0bb
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@640ce0bb
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@72e5c94
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@72e5c94
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@6fb8fcdd
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6fb8fcdd
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@17e319a
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@17e319a
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15f7dbd8
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5ecfe500
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@6b91602
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6b91602
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@6b91602
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@e2f75e5
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@e2f75e5
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@e2f75e5
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@1adbbe8b
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@51f2412a
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@51f2412a
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@51f2412a
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4d12bc7b
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4d12bc7b
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4d12bc7b
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@1ae0e7d
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@1ae637f0
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@26a150e
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@26a150e
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@48a84b47
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@7d6f3ed7
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7d6f3ed7
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@57f55cae
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@57f55cae
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4a018e1b
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@9f6f3dc
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@37f808e6
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@615724a0
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@615724a0
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@be389b8
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7669521
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5fc8ad52
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6feb139e
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@32552379
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@738bf6bf
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@69f4b0dc
[2013-07-08 16:04:49] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3f8771dc
[2013-07-08 16:04:49] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 16:04:49] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 16:04:49] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 16:04:49] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 16:04:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 16:04:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 16:04:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:04:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:04:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 16:04:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 16:04:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 16:04:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 16:04:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 16:04:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 16:04:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 16:04:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 16:04:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 16:04:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 16:04:49] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 16:04:49] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 16:04:49] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 16:04:49] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 16:04:49] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 16:04:49] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 16:04:49] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 16:04:49] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 16:04:49] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 16:04:49] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 16:04:49] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 16:04:49] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 16:04:49] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 16:04:49] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 16:04:49] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 16:04:49] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 16:04:49] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 16:04:49] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 16:04:49] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 16:04:49] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 16:04:49] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 16:04:49] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 16:04:49] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 16:04:49] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 16:04:49] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 16:04:49] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 16:04:49] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 16:04:49] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 16:04:49] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 16:04:49] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:04:49] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:04:49] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 16:04:49] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 16:04:49] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 16:04:50] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:04:50] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:04:50] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 16:04:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:04:50] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:04:50] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 16:04:50] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 16:04:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:04:50] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:04:50] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:04:50] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:04:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:04:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 16:04:50] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 16:04:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 16:04:50] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 16:04:50] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 16:04:50] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 16:04:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:04:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 16:04:50] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 16:04:50] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 16:04:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:04:50] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:04:50] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 16:04:50] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 16:04:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:04:50] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:04:50] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:04:50] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:04:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:04:50] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:04:50] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:04:50] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:04:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:04:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 16:04:50] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 16:04:50] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 16:04:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:04:50] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:04:50] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 16:04:50] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 16:04:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:04:50] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:04:50] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:04:50] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:04:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:04:50] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:04:50] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:04:50] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:04:50] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:04:50] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 16:04:50] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:04:50] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:04:50] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:04:50] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:04:50] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:04:50] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:04:50] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:04:50] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:04:50] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:04:50] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:04:50] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:04:50] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:04:50] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:04:50] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:04:50] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 16:04:50] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 16:04:50] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 16:04:50] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 16:04:50] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 16:04:50] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 16:04:50] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 16:04:50] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:04:50] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:04:50] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:04:50] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 16:04:50] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 16:04:50] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 16:04:50] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 16:04:50] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 16:04:50] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 16:04:50] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 16:04:50] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 16:04:50] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 16:04:50] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 16:04:50] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 16:04:50] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 16:04:50] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 16:04:50] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 16:04:50] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 16:04:50] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 16:04:50] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 16:04:50] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:04:50] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:04:50] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:04:50] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:04:50] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:04:50] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:04:50] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:04:50] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:04:50] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7c30cd64
[2013-07-08 16:04:50] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: b79cdca2-3b7a-4a84-8aff-12b9cddedb2a (<unnamed>)
[2013-07-08 16:04:50] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 16:04:50] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 16:04:50] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:04:50] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:04:50] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:04:50] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:04:50] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:04:50] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:04:50] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:04:50] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:04:50] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:04:50] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:04:50] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:04:50] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:04:50] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:04:50] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:04:50] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:04:50] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:04:50] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:04:50] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:04:50] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:04:50] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:04:50] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:04:50] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:04:50] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:04:50] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:04:50] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:04:50] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:04:50] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:04:50] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:04:50] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:04:50] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:04:50] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:04:50] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:04:50] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:04:50] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:04:50] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:04:50] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 16:04:50] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 16:04:50] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:04:50] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:04:50] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 16:04:50] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:04:50] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:04:50] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 16:04:50] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:04:50] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:04:50] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 16:04:50] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 16:04:50] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 16:04:50] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 16:04:50] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 16:04:50] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 16:04:50] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 16:04:50] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 16:04:50] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 16:04:50] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 16:04:50] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 16:04:50] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 16:04:50] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 16:04:50] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 16:04:50] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 16:04:50] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:04:50] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:04:50] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 16:04:50] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:04:50] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-08 16:04:52] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:04:52] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T150452Z!1373295890-17331-4!http://localhost:8080/ldap/jcb98!jcb98!!pwd!14661!!2!OIy5EEb-uxItKQW7VjElV2aTj8AYdWDd-9X07cJVetlzpjM0JR3lhrRwcqX.8qh-PmTQqZpelasJMER2MkjFoY0TQbTKulBlSRAThSrzWPi9VnzBMoXsFbNXRpkkG9QhLtX49X20EhV2uYKf17UQ2ZAqhSHHRD8ZAjh6uXapvDs_
[2013-07-08 16:04:52] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T150450Z, fail: 
[2013-07-08 16:04:52] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:04:52] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 16:04:52] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T150452Z Last: 1373295892870 Life: 14661 ID: 1373295890-17331-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:04:52] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:04:52] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:04:52] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T150450Z, fail: 
[2013-07-08 16:04:52] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T150452Z Last: 1373295892870 Life: 14661 ID: 1373295890-17331-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:04:52] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 16:04:52] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 16:05:43] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 16:05:43] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 16:05:43] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 16:05:43] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 16:05:43] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 16:05:43] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@22b90a6e
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@22b90a6e
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@22b90a6e
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@10ba5a81
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61335b86
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@12e29f36
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@724a2dd4
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@724a2dd4
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@724a2dd4
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@5092eb76
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@5092eb76
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5092eb76
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@db951f2
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@db951f2
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@db951f2
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@381bd13
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@381bd13
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@381bd13
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@448be1c9
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@448be1c9
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@448be1c9
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@d6d46d7
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@d6d46d7
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@d6d46d7
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@256b352c
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@256b352c
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@256b352c
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1e4276fd
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1e4276fd
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@54011d95
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@54011d95
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@39ce9085
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@39ce9085
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23f2bc83
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@c387202
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@111bda67
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@111bda67
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@7be758ca
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7be758ca
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@34a083f2
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@34a083f2
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1d30b5e2
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1d30b5e2
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1d30b5e2
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@c9021e3
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@5fb45ddc
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5fb45ddc
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5fb45ddc
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@388eed76
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@22c8ebd6
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@22c8ebd6
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@6b064b80
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6b064b80
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3c6e4ba6
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3c6e4ba6
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@55a517bd
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@55a517bd
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4c6030f9
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4c6030f9
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3bd85e85
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3834a1c8
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@51bfa303
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@51bfa303
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@51bfa303
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@71e13a2c
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@71e13a2c
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@71e13a2c
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@468034b6
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@976484e
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@976484e
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@976484e
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@74bffc3a
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@74bffc3a
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@74bffc3a
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@59e14a78
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@db2b10a
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@7aaf8b32
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7aaf8b32
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@50baa573
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@b9deddb
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b9deddb
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@114c02d4
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@114c02d4
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@20b124fa
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@766d4f30
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@48a84b47
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@4d8ef117
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4d8ef117
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@699dd97b
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7a315068
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3b961a84
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7ba6eeab
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@c7f5bf9
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7d6f3ed7
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1286d597
[2013-07-08 16:05:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5230b601
[2013-07-08 16:05:43] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 16:05:43] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 16:05:43] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 16:05:43] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 16:05:43] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 16:05:43] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 16:05:43] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 16:05:43] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 16:05:43] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 16:05:43] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 16:05:43] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 16:05:43] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 16:05:43] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 16:05:43] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 16:05:43] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 16:05:43] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 16:05:43] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 16:05:43] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 16:05:43] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 16:05:43] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 16:05:43] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 16:05:43] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 16:05:43] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 16:05:43] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 16:05:43] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 16:05:43] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 16:05:43] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 16:05:43] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 16:05:43] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 16:05:43] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 16:05:43] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 16:05:43] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 16:05:43] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:05:43] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:05:43] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 16:05:43] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 16:05:43] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 16:05:43] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:05:43] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:05:43] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 16:05:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:05:43] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:05:43] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 16:05:43] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 16:05:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:05:43] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:05:43] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:05:43] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:05:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:05:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 16:05:43] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 16:05:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 16:05:43] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 16:05:43] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 16:05:43] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 16:05:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:05:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 16:05:43] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 16:05:43] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 16:05:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:05:43] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:05:43] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 16:05:43] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 16:05:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:05:43] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:05:43] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:05:43] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:05:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:05:43] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:05:43] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:05:43] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:05:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:05:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 16:05:43] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 16:05:43] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 16:05:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:05:43] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:05:43] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 16:05:43] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 16:05:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:05:43] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:05:43] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:05:43] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:05:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:05:43] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:05:43] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:05:43] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:05:43] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:05:43] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 16:05:43] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:05:43] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:05:43] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:05:43] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:05:43] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:05:43] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:05:43] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:05:43] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:05:43] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:05:43] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:05:43] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:05:43] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:05:43] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:05:43] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:05:43] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 16:05:43] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 16:05:43] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 16:05:43] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 16:05:43] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 16:05:43] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 16:05:43] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:05:43] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 16:05:43] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 16:05:43] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 16:05:43] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 16:05:43] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 16:05:43] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 16:05:43] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 16:05:43] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 16:05:43] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 16:05:43] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 16:05:43] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 16:05:43] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 16:05:43] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 16:05:43] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 16:05:43] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 16:05:43] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 16:05:43] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 16:05:43] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:05:43] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:05:43] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:05:43] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:05:43] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:05:43] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:05:43] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:05:43] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:05:43] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4b721a26
[2013-07-08 16:05:43] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 48efb539-c7f1-45d2-a1da-b3725005e54d (<unnamed>)
[2013-07-08 16:05:43] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 16:05:43] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 16:05:43] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:05:43] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:05:43] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:05:43] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:05:43] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:05:43] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:05:43] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:05:43] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:05:43] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:05:43] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:05:43] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:05:43] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:05:43] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:05:43] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:05:43] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:05:43] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:05:43] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:05:43] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:05:43] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:05:43] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:05:43] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:05:43] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:05:43] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:05:43] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:05:43] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:05:43] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:05:43] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:05:43] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 16:05:43] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 16:05:43] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:05:43] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:05:43] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 16:05:43] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:05:43] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:05:43] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 16:05:43] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:05:43] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:05:43] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 16:05:43] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 16:05:43] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 16:05:43] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 16:05:43] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 16:05:43] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 16:05:43] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 16:05:43] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 16:05:43] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 16:05:43] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 16:05:43] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 16:05:43] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 16:05:43] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 16:05:43] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 16:05:43] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 16:05:43] [WARN ] ResteasyDeployment:103 - Application.getClasses() returned unknown class type: org.example.controllers.LDAPController
[2013-07-08 16:05:44] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:05:44] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:05:44] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 16:05:44] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:05:44] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-08 16:05:45] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:05:45] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T150545Z!1373295944-16657-26!http://localhost:8080/ldap/jcb98!jcb98!!pwd!14607!!2!j.o6W7s.yuHF97T9ewkmlpcPUMoGtQDvLyHF-90XcKL4GdcpYkBrDGbNWqKtrW26psx4M6hkJSvH04rluT3SIgCiaLLJt8hu-VHD2oOLDQMRMkhMdEB5p3FAAsDvNd3ErAGjY1lX-1JvMqK8etfgQWn9XT.GFyIkS02pPTGJWw4_
[2013-07-08 16:05:45] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T150544Z, fail: 
[2013-07-08 16:05:45] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:05:45] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 16:05:45] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T150545Z Last: 1373295945945 Life: 14607 ID: 1373295944-16657-26 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:05:45] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:05:45] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:05:45] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T150544Z, fail: 
[2013-07-08 16:05:45] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T150545Z Last: 1373295945945 Life: 14607 ID: 1373295944-16657-26 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:05:45] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 16:05:45] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 16:06:32] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 16:06:33] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 16:06:33] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 16:06:33] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 16:06:33] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 16:06:33] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@7cd47880
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@7cd47880
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7cd47880
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@12e29f36
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5da0b94d
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@50f8ae79
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@174da86b
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@174da86b
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@174da86b
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@4145582
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@4145582
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4145582
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@10bfb545
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@10bfb545
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@10bfb545
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@145d424
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@145d424
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@145d424
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@3bad0d89
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@3bad0d89
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3bad0d89
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@1d91eb90
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@1d91eb90
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1d91eb90
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@6b5b5783
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@6b5b5783
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6b5b5783
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2075a744
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2075a744
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3a3f4a21
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3a3f4a21
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@6f0e0eb5
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6f0e0eb5
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c18fa85
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7810a519
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@34a083f2
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@34a083f2
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@68f51766
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@68f51766
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@4aa0c486
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4aa0c486
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2f87fafc
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2f87fafc
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2f87fafc
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6b064b80
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@3c6e4ba6
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3c6e4ba6
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3c6e4ba6
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5afc0f5
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@3b0e2558
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3b0e2558
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@6e9c2192
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6e9c2192
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3bd85e85
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3bd85e85
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@3834a1c8
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3834a1c8
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@71e13a2c
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@71e13a2c
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2bf87baf
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@640ce0bb
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@72e5c94
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@72e5c94
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@72e5c94
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6fb8fcdd
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6fb8fcdd
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6fb8fcdd
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@7418e252
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@17e319a
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@17e319a
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@17e319a
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@43824d2c
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@43824d2c
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@43824d2c
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@22c393a1
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@6153e0c0
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@4a393167
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4a393167
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1ae637f0
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@b45c414
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b45c414
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@3fa9b4a4
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3fa9b4a4
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2b27fa03
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@637644c8
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@3b961a84
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@28bd36fa
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@28bd36fa
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@52ed3b53
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@54d1f0ad
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2310195c
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@75f0f8ff
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1f6b69d7
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@44f1b25e
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@57f55cae
[2013-07-08 16:06:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2d97d09f
[2013-07-08 16:06:33] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 16:06:33] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 16:06:33] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 16:06:33] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 16:06:33] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 16:06:33] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 16:06:33] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 16:06:33] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 16:06:33] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 16:06:33] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 16:06:33] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 16:06:33] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 16:06:33] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 16:06:33] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 16:06:33] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 16:06:33] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 16:06:33] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 16:06:33] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 16:06:33] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 16:06:33] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 16:06:33] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 16:06:33] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 16:06:33] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 16:06:33] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 16:06:33] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 16:06:33] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 16:06:33] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 16:06:33] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 16:06:33] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 16:06:33] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 16:06:33] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 16:06:33] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 16:06:33] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:06:33] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:06:33] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 16:06:33] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 16:06:33] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 16:06:33] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:06:33] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:06:33] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 16:06:33] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:06:33] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:06:33] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 16:06:33] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 16:06:33] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:06:33] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:06:33] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:06:33] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:06:33] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:06:33] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 16:06:33] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 16:06:33] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 16:06:33] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 16:06:33] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 16:06:33] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 16:06:33] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:06:33] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 16:06:33] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 16:06:33] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 16:06:33] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:06:33] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:06:33] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 16:06:33] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 16:06:33] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:06:33] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:06:33] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:06:33] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:06:33] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:06:33] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:06:33] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:06:33] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:06:33] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:06:33] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 16:06:33] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 16:06:33] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 16:06:33] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:06:33] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:06:33] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 16:06:33] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 16:06:33] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:06:33] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:06:33] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:06:33] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:06:33] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:06:33] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:06:33] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:06:33] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:06:33] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:06:33] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 16:06:33] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:06:33] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:06:33] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:06:33] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:06:33] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:06:33] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:06:33] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:06:33] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:06:33] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:06:33] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:06:33] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:06:33] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:06:33] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:06:33] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:06:33] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 16:06:33] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 16:06:33] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 16:06:33] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 16:06:33] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 16:06:33] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 16:06:33] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:06:33] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 16:06:33] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 16:06:33] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 16:06:33] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 16:06:33] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 16:06:33] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 16:06:33] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 16:06:33] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 16:06:33] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 16:06:33] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 16:06:33] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 16:06:33] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 16:06:33] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 16:06:33] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 16:06:33] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 16:06:33] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 16:06:33] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 16:06:33] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:06:33] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:06:33] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:06:33] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:06:33] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:06:33] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:06:33] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:06:33] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:06:33] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@59bd523d
[2013-07-08 16:06:33] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: f3224ab6-1810-4228-9938-c5bdb6b40be1 (<unnamed>)
[2013-07-08 16:06:33] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 16:06:33] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 16:06:33] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:06:33] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:06:33] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:06:33] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:06:33] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:06:33] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:06:33] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:06:33] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:06:33] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:06:33] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:06:33] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:06:33] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:06:33] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:06:33] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:06:33] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:06:33] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:06:33] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:06:33] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:06:33] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:06:33] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:06:33] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:06:33] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:06:33] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:06:33] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:06:33] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:06:33] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:06:33] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:06:33] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 16:06:33] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 16:06:33] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:06:33] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:06:33] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 16:06:33] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:06:33] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:06:33] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 16:06:33] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:06:33] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:06:33] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 16:06:33] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 16:06:33] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 16:06:33] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 16:06:33] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 16:06:33] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 16:06:33] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 16:06:33] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 16:06:33] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 16:06:33] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 16:06:33] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 16:06:33] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 16:06:33] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 16:06:33] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 16:06:33] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 16:06:36] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:06:36] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:06:36] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 16:06:36] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:06:36] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-08 16:06:38] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:06:38] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T150638Z!1373295996-17774-4!http://localhost:8080/ldap/jcb98!jcb98!!pwd!14555!!2!n7hbCNODh5zZhdX9Dej7BetTSZ.kg-UWnbJGTWLwXlLByEKATLvDEPKbxma5l7sxOFkEeBx52JzpTs-phdTm3xTWatYx6sh8uuc-ncUQAc7Cs0Y3U6elQzA1pyh7fGrFP3rybpOXhkJeMP1VJoxVHk02SVcsp51crxCAbKdWn6I_
[2013-07-08 16:06:38] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T150636Z, fail: 
[2013-07-08 16:06:38] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:06:38] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 16:06:38] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T150638Z Last: 1373295998185 Life: 14555 ID: 1373295996-17774-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:06:38] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:06:38] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:06:38] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T150636Z, fail: 
[2013-07-08 16:06:38] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T150638Z Last: 1373295998185 Life: 14555 ID: 1373295996-17774-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:06:38] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 16:06:38] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 16:06:38] [ERROR] LDAPController:42 - : [LDAP: error code 34 - invalid DN]
[2013-07-08 16:08:23] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 16:08:23] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 16:08:23] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 16:08:23] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 16:08:23] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 16:08:23] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a8bd3bb
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@3a8bd3bb
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3a8bd3bb
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@39b1ff47
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7cd47880
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@72bdec44
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@e7c0d41
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@e7c0d41
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@e7c0d41
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@477baf4
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@477baf4
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@477baf4
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@52f9cbe5
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@52f9cbe5
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@52f9cbe5
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@a211b37
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@a211b37
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@a211b37
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@2630a895
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@2630a895
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2630a895
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@1a15cd9a
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@1a15cd9a
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1a15cd9a
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@1b0fb9bd
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@1b0fb9bd
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b0fb9bd
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@14cef147
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@14cef147
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@57004a1a
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@57004a1a
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@6b5b5783
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6b5b5783
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5efcc13d
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2075a744
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@3a3f4a21
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3a3f4a21
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@4c18fa85
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4c18fa85
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@6fc41e49
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6fc41e49
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ec22978
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ec22978
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ec22978
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6cb1cb25
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@c65fb1
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@c65fb1
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@c65fb1
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3a7e479a
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@86ecec5
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@86ecec5
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@4e0bd5df
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e0bd5df
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@591bfcbe
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@591bfcbe
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@5afc0f5
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5afc0f5
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6e9c2192
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6e9c2192
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3f2f529b
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@37285252
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@1ac84361
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1ac84361
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@1ac84361
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5f99ea3c
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5f99ea3c
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5f99ea3c
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@2bf87baf
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@640ce0bb
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@640ce0bb
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@640ce0bb
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@72e5c94
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@72e5c94
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@72e5c94
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@6fb8fcdd
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@7418e252
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@4de514a9
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4de514a9
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1adbbe8b
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@1e3a4822
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1e3a4822
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@766d4f30
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@766d4f30
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28c4b5f
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@20e64795
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@3fa9b4a4
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@3b961a84
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3b961a84
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@c7f5bf9
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7d6f3ed7
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1286d597
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5230b601
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7bfd25ce
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@28bd36fa
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e646bfb
[2013-07-08 16:08:23] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@52ed3b53
[2013-07-08 16:08:23] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 16:08:23] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 16:08:23] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 16:08:23] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 16:08:23] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 16:08:23] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 16:08:23] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:08:23] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:08:23] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 16:08:23] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 16:08:23] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 16:08:23] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 16:08:23] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 16:08:23] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 16:08:23] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 16:08:23] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 16:08:23] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 16:08:23] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 16:08:23] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 16:08:23] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 16:08:23] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 16:08:23] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 16:08:23] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 16:08:23] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 16:08:23] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 16:08:23] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 16:08:23] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 16:08:23] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 16:08:23] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 16:08:23] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 16:08:23] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 16:08:23] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 16:08:23] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 16:08:23] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 16:08:23] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 16:08:23] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 16:08:23] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 16:08:23] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 16:08:23] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 16:08:23] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 16:08:23] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 16:08:23] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 16:08:23] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 16:08:23] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 16:08:23] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 16:08:23] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 16:08:24] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 16:08:24] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:08:24] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:08:24] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 16:08:24] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 16:08:24] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 16:08:24] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:08:24] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:08:24] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 16:08:24] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:08:24] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:08:24] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 16:08:24] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 16:08:24] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:08:24] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:08:24] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:08:24] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:08:24] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:08:24] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 16:08:24] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 16:08:24] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 16:08:24] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 16:08:24] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 16:08:24] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 16:08:24] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:08:24] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 16:08:24] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 16:08:24] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 16:08:24] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:08:24] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:08:24] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 16:08:24] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 16:08:24] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:08:24] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:08:24] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:08:24] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:08:24] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:08:24] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:08:24] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:08:24] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:08:24] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:08:24] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 16:08:24] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 16:08:24] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 16:08:24] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:08:24] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:08:24] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 16:08:24] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 16:08:24] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:08:24] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:08:24] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:08:24] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:08:24] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:08:24] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:08:24] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:08:24] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:08:24] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:08:24] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 16:08:24] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:08:24] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:08:24] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:08:24] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:08:24] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:08:24] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:08:24] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:08:24] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:08:24] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:08:24] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:08:24] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:08:24] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:08:24] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:08:24] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:08:24] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 16:08:24] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 16:08:24] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 16:08:24] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 16:08:24] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 16:08:24] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 16:08:24] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 16:08:24] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:08:24] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:08:24] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:08:24] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 16:08:24] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 16:08:24] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 16:08:24] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 16:08:24] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 16:08:24] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 16:08:24] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 16:08:24] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 16:08:24] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 16:08:24] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 16:08:24] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 16:08:24] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 16:08:24] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 16:08:24] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 16:08:24] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 16:08:24] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 16:08:24] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 16:08:24] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:08:24] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:08:24] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:08:24] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:08:24] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:08:24] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:08:24] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:08:24] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:08:24] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5d11c3f0
[2013-07-08 16:08:24] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 7c2ea565-6732-439e-ab9d-63d5a9e3a625 (<unnamed>)
[2013-07-08 16:08:24] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 16:08:24] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 16:08:24] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:08:24] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:08:24] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:08:24] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:08:24] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:08:24] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:08:24] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:08:24] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:08:24] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:08:24] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:08:24] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:08:24] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:08:24] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:08:24] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:08:24] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:08:24] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:08:24] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:08:24] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:08:24] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:08:24] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:08:24] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:08:24] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:08:24] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:08:24] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:08:24] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:08:24] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:08:24] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:08:24] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:08:24] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:08:24] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:08:24] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:08:24] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:08:24] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:08:24] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:08:24] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:08:24] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 16:08:24] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 16:08:24] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:08:24] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:08:24] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 16:08:24] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:08:24] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:08:24] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 16:08:24] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:08:24] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:08:24] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 16:08:24] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 16:08:24] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 16:08:24] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 16:08:24] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 16:08:24] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 16:08:24] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 16:08:24] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 16:08:24] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 16:08:24] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 16:08:24] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 16:08:24] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 16:08:24] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 16:08:24] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 16:08:24] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 16:08:28] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:08:28] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:08:28] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 16:08:28] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:08:28] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-08 16:08:30] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:08:30] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T150830Z!1373296108-17293-26!http://localhost:8080/ldap/jcb98!jcb98!!pwd!14443!!2!T4yi-sQilWM52quyfbvDaKxvYLq9kYouH0NV7z6LaZ0eDh1BYvA78upfocT8HrRUA53MiZdRPLlA6EkcQcoZ.I5x7.DDLyGstwwD8REAb4M3RsCs0xo0xne2ZdRKe3vvbpvKS1wRZHBgz7qTW4zeH56z7ozhuIKThmd6XxDLeFQ_
[2013-07-08 16:08:30] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T150828Z, fail: 
[2013-07-08 16:08:30] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:08:30] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 16:08:30] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T150830Z Last: 1373296110510 Life: 14443 ID: 1373296108-17293-26 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:08:30] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:08:30] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:08:30] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T150828Z, fail: 
[2013-07-08 16:08:30] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T150830Z Last: 1373296110510 Life: 14443 ID: 1373296108-17293-26 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:08:30] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 16:08:30] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 16:08:30] [ERROR] LDAPController:42 - : [LDAP: error code 34 - invalid DN]
[2013-07-08 16:09:59] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 16:09:59] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 16:09:59] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 16:09:59] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 16:09:59] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 16:09:59] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@7844a013
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@7844a013
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7844a013
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@762d80ae
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@31f9b804
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@39b1ff47
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@61335b86
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@61335b86
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@61335b86
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@5c429be9
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@5c429be9
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5c429be9
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@db2e44d
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@db2e44d
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@db2e44d
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@6b6c14c0
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@6b6c14c0
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6b6c14c0
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@1b2ede8
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@1b2ede8
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1b2ede8
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@6f3d5f21
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@6f3d5f21
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6f3d5f21
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@fe14de0
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@fe14de0
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@fe14de0
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b0fb9bd
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b0fb9bd
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3bad0d89
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3bad0d89
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@14cef147
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@14cef147
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@57004a1a
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6b5b5783
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@5efcc13d
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efcc13d
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@3a3f4a21
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3a3f4a21
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@657a7adf
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@657a7adf
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@cc749e4
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@cc749e4
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@cc749e4
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2e7857a5
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@68f51766
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@68f51766
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@68f51766
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@531a700a
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@4aa0c486
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4aa0c486
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@3a7e479a
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3a7e479a
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@86ecec5
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@86ecec5
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@4e0bd5df
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4e0bd5df
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5afc0f5
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5afc0f5
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@49b9a538
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@c1bb35b
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@3f2f529b
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3f2f529b
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@3f2f529b
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@37285252
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@37285252
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@37285252
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@1ac84361
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@5f99ea3c
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@5f99ea3c
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@5f99ea3c
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2bf87baf
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2bf87baf
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2bf87baf
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@640ce0bb
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@72e5c94
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@22c393a1
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@22c393a1
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b91602
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@164ca42b
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@164ca42b
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@455bfaf
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@455bfaf
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f031310
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@69c5a33b
[2013-07-08 16:09:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@114c02d4
[2013-07-08 16:10:00] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@48a84b47
[2013-07-08 16:10:00] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@48a84b47
[2013-07-08 16:10:00] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6e659812
[2013-07-08 16:10:00] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4fe2fe5d
[2013-07-08 16:10:00] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3fa9b4a4
[2013-07-08 16:10:00] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1e929ba3
[2013-07-08 16:10:00] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2b27fa03
[2013-07-08 16:10:00] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4d8ef117
[2013-07-08 16:10:00] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@637644c8
[2013-07-08 16:10:00] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@699dd97b
[2013-07-08 16:10:00] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 16:10:00] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 16:10:00] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 16:10:00] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 16:10:00] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 16:10:00] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 16:10:00] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 16:10:00] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 16:10:00] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 16:10:00] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 16:10:00] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 16:10:00] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 16:10:00] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 16:10:00] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 16:10:00] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 16:10:00] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 16:10:00] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 16:10:00] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 16:10:00] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 16:10:00] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 16:10:00] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 16:10:00] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 16:10:00] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 16:10:00] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 16:10:00] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 16:10:00] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 16:10:00] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 16:10:00] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 16:10:00] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 16:10:00] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 16:10:00] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 16:10:00] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 16:10:00] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:10:00] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:10:00] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 16:10:00] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 16:10:00] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 16:10:00] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:10:00] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:10:00] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 16:10:00] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:10:00] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:10:00] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 16:10:00] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 16:10:00] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:10:00] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:10:00] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:10:00] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:10:00] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:10:00] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 16:10:00] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 16:10:00] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 16:10:00] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 16:10:00] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 16:10:00] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 16:10:00] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:10:00] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 16:10:00] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 16:10:00] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 16:10:00] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:10:00] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:10:00] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 16:10:00] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 16:10:00] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:10:00] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:10:00] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:10:00] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:10:00] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:10:00] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:10:00] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:10:00] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:10:00] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:10:00] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 16:10:00] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 16:10:00] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 16:10:00] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:10:00] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:10:00] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 16:10:00] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 16:10:00] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:10:00] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:10:00] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:10:00] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:10:00] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:10:00] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:10:00] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:10:00] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:10:00] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:10:00] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 16:10:00] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:10:00] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:10:00] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:10:00] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:10:00] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:10:00] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:10:00] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:10:00] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:10:00] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:10:00] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:10:00] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:10:00] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:10:00] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:10:00] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:10:00] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 16:10:00] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 16:10:00] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 16:10:00] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 16:10:00] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 16:10:00] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 16:10:00] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:10:00] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 16:10:00] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 16:10:00] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 16:10:00] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 16:10:00] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 16:10:00] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 16:10:00] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 16:10:00] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 16:10:00] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 16:10:00] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 16:10:00] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 16:10:00] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 16:10:00] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 16:10:00] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 16:10:00] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 16:10:00] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 16:10:00] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 16:10:00] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:10:00] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:10:00] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:10:00] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:10:00] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:10:00] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:10:00] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:10:00] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:10:00] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@60e1e567
[2013-07-08 16:10:00] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 72d1daae-b7a5-4d37-9dc9-e57e7f29e4f2 (<unnamed>)
[2013-07-08 16:10:00] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 16:10:00] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 16:10:00] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:10:00] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:10:00] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:10:00] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:10:00] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:10:00] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:10:00] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:10:00] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:10:00] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:10:00] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:10:00] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:10:00] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:10:00] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:10:00] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:10:00] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:10:00] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:10:00] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:10:00] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:10:00] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:10:00] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:10:00] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:10:00] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:10:00] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:10:00] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:10:00] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:10:00] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:10:00] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:10:00] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 16:10:00] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 16:10:00] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:10:00] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:10:00] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 16:10:00] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:10:00] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:10:00] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 16:10:00] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:10:00] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:10:00] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 16:10:00] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 16:10:00] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 16:10:00] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 16:10:00] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 16:10:00] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 16:10:00] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 16:10:00] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 16:10:00] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 16:10:00] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 16:10:00] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 16:10:00] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 16:10:00] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 16:10:00] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 16:10:00] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 16:10:00] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:10:00] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:10:00] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 16:10:00] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:10:00] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-08 16:10:04] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:10:05] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T151004Z!1373296200-17778-8!http://localhost:8080/ldap/jcb98!jcb98!!pwd!14351!!2!prsdJCOc6CakVZs-Ufq3rY9gUwDrt6PT2oN9gcw0fByLe5TIzXvhTfjF2kqpiOPaRY1go6b2B83odlJ0h8f5qj1Un17bxjheON6mY7tl0F4qMAhmHJVNRl5HYh1U6rXN4wYdS6A9j8Gu3.pjVFl1P20mz7nlYApbHu8hcxmPwAs_
[2013-07-08 16:10:05] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T151000Z, fail: 
[2013-07-08 16:10:05] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:10:05] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 16:10:05] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T151004Z Last: 1373296205037 Life: 14351 ID: 1373296200-17778-8 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:10:05] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:10:05] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:10:05] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T151000Z, fail: 
[2013-07-08 16:10:05] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T151004Z Last: 1373296205037 Life: 14351 ID: 1373296200-17778-8 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:10:05] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 16:10:05] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 16:10:05] [ERROR] LDAPController:42 - [LDAP: error code 32 - No Such Object]
[2013-07-08 16:10:56] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 16:10:56] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 16:10:56] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 16:10:56] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 16:10:56] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 16:10:56] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@4c825cf3
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@4c825cf3
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4c825cf3
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3c789d63
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@48834af6
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@15c313da
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@40930120
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@40930120
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@40930120
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@85e57
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@85e57
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@85e57
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@66d7a9c9
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@66d7a9c9
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@66d7a9c9
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@1f4649ed
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@1f4649ed
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1f4649ed
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@4b90725e
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@4b90725e
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4b90725e
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@255b5c1f
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@255b5c1f
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@255b5c1f
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@225bcd91
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@225bcd91
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@225bcd91
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@39b1ff47
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@39b1ff47
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@46be6108
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@46be6108
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@72bdec44
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@72bdec44
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@190a0d51
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@724a2dd4
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@5092eb76
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5092eb76
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@db2e44d
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@db2e44d
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@4145582
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4145582
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@381bd13
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@381bd13
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@381bd13
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@448be1c9
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@10bfb545
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@10bfb545
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@10bfb545
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@d6d46d7
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@1b0fb9bd
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1b0fb9bd
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@3bad0d89
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3bad0d89
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@14cef147
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@14cef147
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@57004a1a
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@57004a1a
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5efcc13d
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5efcc13d
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15364ee5
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4dc4e792
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@3b9fa8f7
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3b9fa8f7
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@3b9fa8f7
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@657a7adf
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@657a7adf
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@657a7adf
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@11767553
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@6fc41e49
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6fc41e49
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@6fc41e49
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5c392fe8
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5c392fe8
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5c392fe8
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@1d30b5e2
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@531a700a
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@591bfcbe
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@591bfcbe
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6d289e48
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@7696e4c
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7696e4c
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@3484fdbc
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3484fdbc
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@74bffc3a
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6fb8fcdd
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@7418e252
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@1f98a654
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1f98a654
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@22c393a1
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@561140db
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6b91602
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6153e0c0
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@49c88f2b
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@e2f75e5
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4de514a9
[2013-07-08 16:10:57] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7aaf8b32
[2013-07-08 16:10:57] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 16:10:57] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 16:10:57] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 16:10:57] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 16:10:57] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 16:10:57] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 16:10:57] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 16:10:57] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 16:10:57] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 16:10:57] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 16:10:57] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 16:10:57] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 16:10:57] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 16:10:57] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 16:10:57] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 16:10:57] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 16:10:57] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 16:10:57] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 16:10:57] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 16:10:57] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 16:10:57] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 16:10:57] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 16:10:57] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 16:10:57] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 16:10:57] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 16:10:57] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 16:10:57] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 16:10:57] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 16:10:57] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 16:10:57] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 16:10:57] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 16:10:57] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 16:10:57] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:10:57] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:10:57] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 16:10:57] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 16:10:57] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 16:10:57] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:10:57] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:10:57] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 16:10:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:10:57] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:10:57] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 16:10:57] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 16:10:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:10:57] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:10:57] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:10:57] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:10:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:10:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 16:10:57] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 16:10:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 16:10:57] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 16:10:57] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 16:10:57] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 16:10:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:10:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 16:10:57] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 16:10:57] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 16:10:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:10:57] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:10:57] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 16:10:57] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 16:10:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:10:57] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:10:57] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:10:57] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:10:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:10:57] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:10:57] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:10:57] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:10:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:10:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 16:10:57] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 16:10:57] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 16:10:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:10:57] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:10:57] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 16:10:57] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 16:10:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:10:57] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:10:57] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:10:57] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:10:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:10:57] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:10:57] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:10:57] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:10:57] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:10:57] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 16:10:57] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:10:57] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:10:57] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:10:57] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:10:57] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:10:57] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:10:57] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:10:57] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:10:57] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:10:57] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:10:57] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:10:57] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:10:57] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:10:57] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:10:57] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 16:10:57] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 16:10:57] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 16:10:57] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 16:10:57] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 16:10:57] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 16:10:57] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:10:57] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 16:10:57] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 16:10:57] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 16:10:57] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 16:10:57] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 16:10:57] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 16:10:57] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 16:10:57] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 16:10:57] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 16:10:57] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 16:10:57] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 16:10:57] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 16:10:57] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 16:10:57] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 16:10:57] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 16:10:57] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 16:10:57] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 16:10:57] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:10:57] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:10:57] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:10:57] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:10:57] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:10:57] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:10:57] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:10:57] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:10:57] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@74d01311
[2013-07-08 16:10:57] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: fe9b24f8-9cb0-4563-ab60-4629e8eaf2e2 (<unnamed>)
[2013-07-08 16:10:57] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 16:10:57] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 16:10:57] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:10:57] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:10:57] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:10:57] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:10:57] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:10:57] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:10:57] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:10:57] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:10:57] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:10:57] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:10:57] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:10:57] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:10:57] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:10:57] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:10:57] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:10:57] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:10:57] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:10:57] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:10:57] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:10:57] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:10:57] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:10:57] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:10:57] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:10:57] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:10:57] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:10:57] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:10:57] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:10:57] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 16:10:57] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 16:10:57] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:10:57] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:10:57] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 16:10:57] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:10:57] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:10:57] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 16:10:57] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:10:57] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:10:57] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 16:10:57] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 16:10:57] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 16:10:57] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 16:10:57] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 16:10:57] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 16:10:57] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 16:10:57] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 16:10:57] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 16:10:57] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 16:10:57] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 16:10:57] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 16:10:57] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 16:10:57] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 16:10:57] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 16:11:04] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:11:04] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:11:04] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 16:11:04] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:11:04] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-08 16:11:06] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:11:06] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T151106Z!1373296264-17378-30!http://localhost:8080/ldap/jcb98!jcb98!!pwd!14287!!2!WIuTzUWhxJ.HX3lzUQGhNSXcu.USOXyypUopvgjjFRXA.YskfSc-xSCkWnTXZs6KHToEEjXCQ2sNnVJap4ti40Ne8PHeCal1L2Gx24fJ0Emwqzb5nCCTS.-EUEpMjOxfSakeATbp7cPekeGxNHftDiH8DkPt4bXXNX9fGMcV28s_
[2013-07-08 16:11:06] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T151104Z, fail: 
[2013-07-08 16:11:06] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:11:06] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 16:11:06] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T151106Z Last: 1373296266520 Life: 14287 ID: 1373296264-17378-30 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:11:06] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:11:06] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:11:06] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T151104Z, fail: 
[2013-07-08 16:11:06] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T151106Z Last: 1373296266520 Life: 14287 ID: 1373296264-17378-30 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:11:06] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 16:11:06] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 16:11:06] [ERROR] LDAPController:43 - [LDAP: error code 32 - No Such Object]
[2013-07-08 16:12:41] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 16:12:41] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 16:12:41] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 16:12:41] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 16:12:41] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 16:12:41] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e0ca6ae
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e0ca6ae
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e0ca6ae
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@11e3c2c6
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@717757ad
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4c18e99
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@390b755d
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@390b755d
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@390b755d
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@7e266b44
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@7e266b44
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7e266b44
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@3914fc36
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@3914fc36
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3914fc36
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@31f9b804
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@31f9b804
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@31f9b804
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@46be6108
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@46be6108
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@46be6108
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@5c429be9
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@5c429be9
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5c429be9
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@724a2dd4
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@724a2dd4
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@724a2dd4
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@50f8ae79
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@50f8ae79
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@db2e44d
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@db2e44d
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@6b6c14c0
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6b6c14c0
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@52f9cbe5
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@a211b37
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@7051630a
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7051630a
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@10bfb545
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@10bfb545
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@1b0fb9bd
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1b0fb9bd
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4b5a4a77
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4b5a4a77
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4b5a4a77
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@54011d95
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@39ce9085
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@39ce9085
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@39ce9085
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5efcc13d
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@2075a744
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2075a744
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@3a3f4a21
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3a3f4a21
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f0e0eb5
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f0e0eb5
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@4c18fa85
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4c18fa85
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@34a083f2
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@34a083f2
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c392fe8
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1d30b5e2
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@531a700a
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@531a700a
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@531a700a
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4aa0c486
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4aa0c486
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4aa0c486
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@3a7e479a
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@86ecec5
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@86ecec5
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@86ecec5
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4e0bd5df
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4e0bd5df
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4e0bd5df
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@591bfcbe
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@5afc0f5
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@51bfa303
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@51bfa303
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5f99ea3c
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@55e03a61
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@55e03a61
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@6b91602
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6b91602
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@49c88f2b
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4de514a9
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@50baa573
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@164ca42b
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@164ca42b
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a393167
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@70da8742
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1ae637f0
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@627b5c
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4190d536
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@b9deddb
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2d6acad2
[2013-07-08 16:12:41] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3e29b849
[2013-07-08 16:12:41] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 16:12:41] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 16:12:41] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 16:12:41] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 16:12:41] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 16:12:41] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 16:12:41] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 16:12:41] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 16:12:41] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 16:12:41] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 16:12:41] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 16:12:41] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 16:12:41] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 16:12:41] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 16:12:41] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 16:12:41] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 16:12:41] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 16:12:41] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 16:12:41] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 16:12:41] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 16:12:41] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 16:12:41] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 16:12:41] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 16:12:41] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 16:12:41] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 16:12:41] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 16:12:41] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 16:12:41] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 16:12:41] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 16:12:41] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 16:12:41] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 16:12:41] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 16:12:41] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:12:41] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:12:41] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 16:12:41] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 16:12:41] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 16:12:41] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:12:41] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:12:41] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 16:12:41] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:12:41] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:12:41] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 16:12:41] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 16:12:41] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:12:41] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:12:41] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:12:41] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:12:41] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:12:41] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 16:12:41] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 16:12:41] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 16:12:41] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 16:12:41] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 16:12:41] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 16:12:41] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:12:41] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 16:12:41] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 16:12:41] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 16:12:41] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:12:41] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:12:41] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 16:12:41] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 16:12:41] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:12:41] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:12:41] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:12:41] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:12:41] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:12:41] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:12:41] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:12:41] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:12:41] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:12:41] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 16:12:41] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 16:12:41] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 16:12:41] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:12:41] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:12:41] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 16:12:41] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 16:12:41] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:12:41] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:12:41] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:12:41] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:12:41] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:12:41] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:12:41] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:12:41] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:12:41] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:12:41] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 16:12:41] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:12:41] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:12:41] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:12:41] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:12:41] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:12:41] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:12:41] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:12:41] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:12:41] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:12:41] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:12:41] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:12:41] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:12:41] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:12:41] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:12:41] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 16:12:41] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 16:12:41] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 16:12:41] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 16:12:41] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 16:12:41] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 16:12:41] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:12:41] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 16:12:41] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 16:12:41] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 16:12:41] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 16:12:41] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 16:12:41] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 16:12:41] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 16:12:41] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 16:12:41] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 16:12:41] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 16:12:41] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 16:12:41] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 16:12:41] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 16:12:41] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 16:12:41] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 16:12:41] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 16:12:41] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 16:12:41] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:12:41] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:12:41] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:12:41] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:12:41] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:12:41] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:12:41] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:12:41] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:12:41] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@60da5686
[2013-07-08 16:12:41] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 9d699ba7-75b5-4ead-b054-57c5a79084df (<unnamed>)
[2013-07-08 16:12:41] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 16:12:41] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 16:12:41] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:12:41] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:12:41] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:12:41] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:12:41] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:12:41] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:12:41] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:12:41] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:12:41] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:12:41] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:12:41] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:12:41] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:12:41] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:12:41] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:12:41] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:12:41] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:12:41] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:12:41] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:12:41] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:12:41] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:12:41] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:12:41] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:12:41] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:12:41] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:12:41] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:12:41] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:12:41] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:12:41] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 16:12:41] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 16:12:41] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:12:41] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:12:41] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 16:12:41] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:12:41] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:12:41] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 16:12:41] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:12:41] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:12:41] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 16:12:41] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 16:12:41] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 16:12:41] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 16:12:41] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 16:12:41] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 16:12:41] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 16:12:41] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 16:12:41] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 16:12:41] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 16:12:41] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 16:12:41] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 16:12:41] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 16:12:41] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 16:12:41] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 16:12:43] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:12:43] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:12:43] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 16:12:43] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:12:43] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-08 16:12:45] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:12:45] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T151245Z!1373296364-18069-0!http://localhost:8080/ldap/jcb98!jcb98!!pwd!14187!!2!sxR5E78cm-cxa66tFACz3t1kabFOZMCpgkU76wRJBo1KGNMezVGxzNU.ywqqAKglTFoZgXRDl8ThEUCv5tWiimaRK9DwCsa63M4iWdwYQA7nLDTnsLMij.D0J3Wl7TVdqon3.8n7-nXUubNEbPfRNrHVCuo47Wm49jHIq-8WamM_
[2013-07-08 16:12:45] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T151243Z, fail: 
[2013-07-08 16:12:45] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:12:45] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 16:12:45] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T151245Z Last: 1373296365655 Life: 14187 ID: 1373296364-18069-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:12:45] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:12:45] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:12:45] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T151243Z, fail: 
[2013-07-08 16:12:45] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T151245Z Last: 1373296365655 Life: 14187 ID: 1373296364-18069-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:12:45] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 16:12:45] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 16:13:27] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 16:13:27] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 16:13:27] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 16:13:27] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 16:13:27] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 16:13:27] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@54b4b0a4
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@54b4b0a4
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@54b4b0a4
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3914fc36
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7cd47880
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@72bdec44
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@e7c0d41
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@e7c0d41
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@e7c0d41
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@477baf4
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@477baf4
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@477baf4
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@52f9cbe5
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@52f9cbe5
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@52f9cbe5
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@a211b37
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@a211b37
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@a211b37
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@2630a895
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@2630a895
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2630a895
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@1a15cd9a
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@1a15cd9a
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1a15cd9a
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@1b0fb9bd
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@1b0fb9bd
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b0fb9bd
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@14cef147
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@14cef147
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@57004a1a
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@57004a1a
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@6b5b5783
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6b5b5783
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5efcc13d
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2075a744
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@3a3f4a21
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3a3f4a21
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@4c18fa85
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4c18fa85
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@6fc41e49
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6fc41e49
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ec22978
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ec22978
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ec22978
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6cb1cb25
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@c65fb1
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@c65fb1
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@c65fb1
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3a7e479a
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@86ecec5
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@86ecec5
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@4e0bd5df
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e0bd5df
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@591bfcbe
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@591bfcbe
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@5afc0f5
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5afc0f5
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6e9c2192
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6e9c2192
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3f2f529b
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@37285252
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@1ac84361
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1ac84361
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@1ac84361
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5f99ea3c
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5f99ea3c
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5f99ea3c
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@2bf87baf
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@640ce0bb
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@640ce0bb
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@640ce0bb
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@72e5c94
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@72e5c94
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@72e5c94
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@6fb8fcdd
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@7418e252
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@4de514a9
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4de514a9
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1adbbe8b
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@4190d536
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4190d536
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@b45c414
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@b45c414
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@154db52b
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4df2a9da
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@28c4b5f
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@2b27fa03
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2b27fa03
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@637644c8
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@699dd97b
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7a315068
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3b961a84
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7ba6eeab
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@c7f5bf9
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7d6f3ed7
[2013-07-08 16:13:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1286d597
[2013-07-08 16:13:27] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 16:13:27] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 16:13:27] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 16:13:27] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 16:13:27] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 16:13:27] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 16:13:27] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 16:13:27] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 16:13:27] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 16:13:27] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 16:13:27] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 16:13:27] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 16:13:27] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 16:13:27] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 16:13:27] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 16:13:27] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 16:13:27] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 16:13:27] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 16:13:27] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 16:13:27] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 16:13:27] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 16:13:27] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 16:13:27] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 16:13:27] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 16:13:27] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 16:13:27] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 16:13:27] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 16:13:27] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 16:13:27] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 16:13:27] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 16:13:27] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 16:13:27] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 16:13:27] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:13:27] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:13:27] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 16:13:27] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 16:13:27] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 16:13:27] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:13:27] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:13:27] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 16:13:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:13:27] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:13:27] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 16:13:27] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 16:13:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:13:27] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:13:27] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:13:27] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:13:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:13:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 16:13:27] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 16:13:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 16:13:27] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 16:13:27] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 16:13:27] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 16:13:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:13:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 16:13:27] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 16:13:27] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 16:13:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:13:27] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:13:27] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 16:13:27] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 16:13:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:13:27] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:13:27] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:13:27] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:13:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:13:27] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:13:27] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:13:27] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:13:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:13:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 16:13:27] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 16:13:27] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 16:13:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:13:27] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:13:27] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 16:13:27] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 16:13:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:13:27] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:13:27] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:13:27] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:13:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:13:27] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:13:27] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:13:27] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:13:27] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:13:27] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 16:13:27] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:13:27] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:13:27] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:13:27] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:13:27] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:13:27] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:13:27] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:13:27] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:13:27] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:13:27] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:13:27] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:13:27] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:13:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:13:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:13:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 16:13:27] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 16:13:27] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 16:13:27] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 16:13:27] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 16:13:27] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 16:13:27] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:13:27] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 16:13:27] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 16:13:27] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 16:13:27] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 16:13:27] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 16:13:27] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 16:13:27] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 16:13:27] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 16:13:27] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 16:13:27] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 16:13:27] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 16:13:27] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 16:13:27] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 16:13:27] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 16:13:27] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 16:13:27] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 16:13:27] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 16:13:27] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:13:27] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:13:27] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:13:27] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:13:27] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:13:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:13:27] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:13:27] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:13:27] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@221a5d08
[2013-07-08 16:13:27] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 17eaac57-1e55-471d-be4f-ab6995cc27e8 (<unnamed>)
[2013-07-08 16:13:27] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 16:13:27] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 16:13:27] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:13:27] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:13:27] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:13:27] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:13:27] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:13:27] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:13:27] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:13:27] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:13:27] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:13:27] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:13:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:13:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:13:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:13:27] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:13:27] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:13:27] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:13:27] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:13:27] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:13:27] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:13:27] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:13:27] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:13:27] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:13:27] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:13:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:13:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:13:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:13:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:13:27] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 16:13:27] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 16:13:27] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:13:27] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:13:27] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 16:13:27] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:13:27] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:13:27] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 16:13:27] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:13:27] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:13:27] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 16:13:27] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 16:13:27] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 16:13:27] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 16:13:27] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 16:13:27] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 16:13:27] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 16:13:27] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 16:13:27] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 16:13:27] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 16:13:27] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 16:13:27] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 16:13:27] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 16:13:27] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 16:13:28] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 16:13:31] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:13:31] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:13:31] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 16:13:31] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:13:31] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-08 16:13:33] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:13:33] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T151333Z!1373296411-17391-2!http://localhost:8080/ldap/jcb98!jcb98!!pwd!14140!!2!kIZ02yM66shHB36CGGSWd.2dqM3yFMfWg4f-bLhZgo-lYVAOybZPgx8AcRcndKcoPcXXFGv-6qjZVxWJpoX7lQxNUD0xEcwGuIgPSyi9mqA5SB9Smaefv1ze8nHlhs1-mI29gFofcLRrOUO8.dfapoZkfmIzRLPGd9Q6xm8bSfU_
[2013-07-08 16:13:33] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T151331Z, fail: 
[2013-07-08 16:13:33] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:13:33] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 16:13:33] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T151333Z Last: 1373296413292 Life: 14140 ID: 1373296411-17391-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:13:33] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:13:33] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:13:33] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T151331Z, fail: 
[2013-07-08 16:13:33] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T151333Z Last: 1373296413292 Life: 14140 ID: 1373296411-17391-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:13:33] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 16:13:33] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 16:13:33] [ERROR] LDAPController:44 - [LDAP: error code 32 - No Such Object]
[2013-07-08 16:16:38] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 16:16:38] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 16:16:38] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 16:16:38] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 16:16:38] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 16:16:38] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@58cbffde
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@58cbffde
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@58cbffde
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3f9f76a5
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@255b5c1f
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@54b4b0a4
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@3a8bd3bb
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@3a8bd3bb
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3a8bd3bb
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@39b1ff47
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@39b1ff47
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@39b1ff47
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@6406f3ea
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@6406f3ea
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6406f3ea
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@5da0b94d
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@5da0b94d
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5da0b94d
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@db2e44d
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@db2e44d
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@db2e44d
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@4145582
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@4145582
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4145582
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@a211b37
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@a211b37
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@a211b37
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@448be1c9
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@448be1c9
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@10bfb545
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@10bfb545
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@145d424
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@145d424
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@256b352c
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5e53bbfa
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@1e4276fd
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1e4276fd
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@39ce9085
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@39ce9085
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@2075a744
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2075a744
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3b9fa8f7
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3b9fa8f7
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3b9fa8f7
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7be758ca
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@cc749e4
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@cc749e4
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@cc749e4
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@34a083f2
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@2e7857a5
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2e7857a5
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@68f51766
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@68f51766
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6cb1cb25
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6cb1cb25
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@c65fb1
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@c65fb1
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@22c8ebd6
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@22c8ebd6
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4e0bd5df
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@591bfcbe
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@5afc0f5
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5afc0f5
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@5afc0f5
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3b0e2558
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3b0e2558
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3b0e2558
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@6e9c2192
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@3bd85e85
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3bd85e85
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@3bd85e85
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3834a1c8
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3834a1c8
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3834a1c8
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@51bfa303
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@71e13a2c
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@db2b10a
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@db2b10a
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@17e319a
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@1adbbe8b
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1adbbe8b
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@1ae637f0
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1ae637f0
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4190d536
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2d6acad2
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@1e3a4822
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@b45c414
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@b45c414
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@154db52b
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@20b124fa
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4df2a9da
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@766d4f30
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@26a150e
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@28c4b5f
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@48a84b47
[2013-07-08 16:16:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@20e64795
[2013-07-08 16:16:38] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 16:16:38] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 16:16:38] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 16:16:38] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 16:16:38] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 16:16:38] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 16:16:38] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 16:16:38] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 16:16:38] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 16:16:38] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 16:16:38] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 16:16:38] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 16:16:38] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 16:16:38] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 16:16:38] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 16:16:38] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 16:16:38] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 16:16:38] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 16:16:38] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 16:16:38] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 16:16:38] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 16:16:38] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 16:16:38] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 16:16:38] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 16:16:38] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 16:16:38] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 16:16:38] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 16:16:38] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 16:16:38] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 16:16:38] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 16:16:38] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 16:16:38] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 16:16:38] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:16:38] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:16:38] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 16:16:38] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 16:16:38] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 16:16:38] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:16:38] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:16:38] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 16:16:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:16:38] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:16:38] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 16:16:38] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 16:16:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:16:38] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:16:38] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:16:38] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:16:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:16:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 16:16:38] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 16:16:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 16:16:38] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 16:16:38] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 16:16:38] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 16:16:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:16:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 16:16:38] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 16:16:38] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 16:16:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:16:38] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:16:38] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 16:16:38] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 16:16:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:16:38] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:16:38] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:16:38] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:16:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:16:38] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:16:38] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:16:38] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:16:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:16:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 16:16:38] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 16:16:38] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 16:16:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:16:38] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:16:38] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 16:16:38] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 16:16:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:16:38] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:16:38] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:16:38] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:16:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:16:38] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:16:38] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:16:38] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:16:38] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:16:38] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 16:16:38] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:16:38] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:16:38] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:16:38] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:16:38] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:16:38] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:16:38] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:16:38] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:16:38] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:16:38] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:16:38] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:16:38] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:16:38] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:16:38] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:16:38] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 16:16:38] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 16:16:38] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 16:16:38] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 16:16:38] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 16:16:38] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 16:16:38] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:16:38] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 16:16:38] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 16:16:38] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 16:16:38] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 16:16:38] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 16:16:38] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 16:16:38] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 16:16:38] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 16:16:38] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 16:16:38] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 16:16:38] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 16:16:38] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 16:16:38] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 16:16:38] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 16:16:38] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 16:16:38] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 16:16:38] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 16:16:38] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:16:38] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:16:38] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:16:38] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:16:38] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:16:38] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:16:38] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:16:38] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:16:38] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@b1ea3fc
[2013-07-08 16:16:38] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: bc8dedab-83b3-4742-9d7e-e6f15e46ab45 (<unnamed>)
[2013-07-08 16:16:38] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 16:16:38] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 16:16:38] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:16:38] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:16:38] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:16:38] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:16:38] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:16:38] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:16:38] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:16:38] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:16:38] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:16:38] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:16:38] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:16:38] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:16:38] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:16:38] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:16:38] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:16:38] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:16:38] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:16:38] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:16:38] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:16:38] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:16:38] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:16:38] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:16:38] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:16:38] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:16:38] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:16:38] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:16:38] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:16:38] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 16:16:38] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 16:16:38] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:16:38] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:16:38] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 16:16:38] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:16:38] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:16:38] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 16:16:38] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:16:38] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:16:38] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 16:16:38] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 16:16:38] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 16:16:38] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 16:16:38] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 16:16:38] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 16:16:38] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 16:16:38] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 16:16:38] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 16:16:38] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 16:16:38] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 16:16:38] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 16:16:38] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 16:16:38] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 16:16:38] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 16:16:40] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:16:40] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:16:40] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 16:16:40] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:16:40] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-08 16:16:42] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:16:42] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T151641Z!1373296600-17892-14!http://localhost:8080/ldap/jcb98!jcb98!!pwd!13951!!2!se5laOhjTvFi7-zXgjS-PPQzuPDZITMbMMQzTzQdk2Kh.2OMMqExB3.4k2eSqe-nodixn4QS9fKZmw4JoX4KWvK0iFbqQmKbzZg1UJfNqmjCg172komykNVNHA8s8CNs9PQUWuWsVM3ds9pE6nmdEiXQNMx6WL2xcuc7f6MT7Cc_
[2013-07-08 16:16:42] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T151640Z, fail: 
[2013-07-08 16:16:42] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:16:42] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 16:16:42] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T151641Z Last: 1373296602053 Life: 13951 ID: 1373296600-17892-14 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:16:42] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:16:42] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:16:42] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T151640Z, fail: 
[2013-07-08 16:16:42] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T151641Z Last: 1373296602053 Life: 13951 ID: 1373296600-17892-14 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:16:42] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 16:16:42] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 16:16:42] [ERROR] LDAPController:46 - [LDAP: error code 32 - No Such Object]
[2013-07-08 16:19:42] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 16:19:42] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 16:19:42] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 16:19:42] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 16:19:42] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 16:19:42] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@60eb9f0d
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@60eb9f0d
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@60eb9f0d
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@521d590d
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7e266b44
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@71e852be
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@762d80ae
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@762d80ae
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@762d80ae
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@54b4b0a4
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@54b4b0a4
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@54b4b0a4
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@61335b86
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@61335b86
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@61335b86
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@5c429be9
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@5c429be9
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5c429be9
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@6406f3ea
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@6406f3ea
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6406f3ea
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@50f8ae79
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@50f8ae79
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50f8ae79
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@5baa8241
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@5baa8241
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5baa8241
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@db951f2
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@db951f2
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@381bd13
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@381bd13
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@6f3d5f21
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6f3d5f21
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3b947647
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1a15cd9a
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@f6a8823
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@f6a8823
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@4b5a4a77
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4b5a4a77
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@54011d95
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@54011d95
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5efcc13d
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5efcc13d
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5efcc13d
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4dc4e792
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@3b9fa8f7
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3b9fa8f7
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3b9fa8f7
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e7c609
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@7be758ca
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7be758ca
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@cc749e4
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@cc749e4
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@16369fdc
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@16369fdc
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@5ec22978
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5ec22978
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@c9021e3
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@c9021e3
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c65fb1
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@388eed76
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@22c8ebd6
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@22c8ebd6
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@22c8ebd6
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6b064b80
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6b064b80
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6b064b80
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@3c6e4ba6
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@55a517bd
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@55a517bd
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@55a517bd
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1db5d2b2
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1db5d2b2
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1db5d2b2
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@4c6030f9
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@7a258c74
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@3484fdbc
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3484fdbc
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@74bffc3a
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@22c393a1
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@22c393a1
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@7794566d
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7794566d
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d12bc7b
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@164ca42b
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@70da8742
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@2501e081
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2501e081
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@455bfaf
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@199b7c62
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2f031310
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@72d8978c
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@69c5a33b
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2e5facbd
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@b45c414
[2013-07-08 16:19:42] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@114c02d4
[2013-07-08 16:19:42] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 16:19:42] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 16:19:42] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 16:19:42] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 16:19:42] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 16:19:42] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 16:19:42] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 16:19:42] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 16:19:42] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 16:19:42] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 16:19:42] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 16:19:42] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 16:19:42] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 16:19:42] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 16:19:42] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 16:19:42] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 16:19:42] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 16:19:42] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 16:19:42] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 16:19:42] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 16:19:42] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 16:19:42] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 16:19:42] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 16:19:42] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 16:19:42] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 16:19:42] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 16:19:42] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 16:19:42] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 16:19:42] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 16:19:42] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 16:19:42] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 16:19:42] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 16:19:42] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:19:42] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:19:42] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 16:19:42] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 16:19:42] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 16:19:42] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:19:42] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:19:42] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 16:19:42] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:19:42] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:19:42] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 16:19:42] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 16:19:42] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:19:42] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:19:42] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:19:42] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:19:42] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:19:42] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 16:19:42] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 16:19:42] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 16:19:42] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 16:19:42] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 16:19:42] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 16:19:42] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:19:42] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 16:19:42] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 16:19:42] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 16:19:42] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:19:42] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:19:42] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 16:19:42] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 16:19:42] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:19:42] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:19:42] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:19:42] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:19:42] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:19:42] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:19:42] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:19:42] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:19:42] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:19:42] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 16:19:42] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 16:19:42] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 16:19:42] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:19:42] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:19:42] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 16:19:42] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 16:19:42] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:19:42] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:19:42] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:19:42] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:19:42] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:19:42] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:19:42] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:19:42] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:19:42] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:19:42] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 16:19:42] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:19:42] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:19:42] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:19:42] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:19:42] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:19:42] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:19:42] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:19:42] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:19:42] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:19:42] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:19:42] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:19:42] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:19:42] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:19:42] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:19:42] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 16:19:42] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 16:19:42] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 16:19:42] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 16:19:42] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 16:19:42] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 16:19:42] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:19:42] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 16:19:42] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 16:19:42] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 16:19:42] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 16:19:42] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 16:19:42] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 16:19:42] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 16:19:42] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 16:19:42] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 16:19:42] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 16:19:42] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 16:19:42] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 16:19:42] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 16:19:42] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 16:19:42] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 16:19:42] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 16:19:42] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 16:19:42] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:19:42] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:19:42] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:19:42] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:19:42] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:19:42] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:19:42] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:19:42] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:19:42] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5fab9dac
[2013-07-08 16:19:42] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 6f757899-cf93-43af-8302-811cae1176dd (<unnamed>)
[2013-07-08 16:19:42] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 16:19:42] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 16:19:42] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:19:42] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:19:42] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:19:42] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:19:42] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:19:42] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:19:42] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:19:42] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:19:42] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:19:42] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:19:42] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:19:42] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:19:42] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:19:42] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:19:42] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:19:42] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:19:42] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:19:42] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:19:42] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:19:42] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:19:42] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:19:42] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:19:42] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:19:42] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:19:42] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:19:42] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:19:42] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:19:42] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 16:19:42] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 16:19:42] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:19:42] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:19:42] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 16:19:42] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:19:42] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:19:42] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 16:19:42] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:19:42] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:19:42] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 16:19:42] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 16:19:42] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 16:19:42] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 16:19:42] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 16:19:42] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 16:19:42] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 16:19:42] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 16:19:42] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 16:19:42] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 16:19:42] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 16:19:42] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 16:19:42] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 16:19:42] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 16:19:42] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 16:19:48] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:19:48] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:19:48] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 16:19:48] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:19:48] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-08 16:19:49] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:19:49] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T151949Z!1373296788-18214-8!http://localhost:8080/ldap/jcb98!jcb98!!pwd!13763!!2!t5Cd.LyqFh1tubK2wNfygoqctd52KrIhiBR1TvlqGmj.9KPt7XX7XBW582DT8BIv8-OEfyKASWAeiKlf.Ej42dk3uLY4qB5cqo7ygYCHy3mbaQ93eyI8BzkXrojFGLnz0RJZb2n4IFnqrXuh8NP44akLZhVrhP2zM8wQ43R1jtM_
[2013-07-08 16:19:49] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T151948Z, fail: 
[2013-07-08 16:19:49] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:19:49] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 16:19:49] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T151949Z Last: 1373296789867 Life: 13763 ID: 1373296788-18214-8 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:19:49] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:19:49] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:19:49] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T151948Z, fail: 
[2013-07-08 16:19:49] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T151949Z Last: 1373296789867 Life: 13763 ID: 1373296788-18214-8 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:19:49] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 16:19:49] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 16:19:50] [ERROR] LDAPController:46 - [LDAP: error code 32 - No Such Object]
[2013-07-08 16:21:08] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 16:21:08] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 16:21:08] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 16:21:08] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 16:21:08] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 16:21:08] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@15837e8
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@15837e8
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@15837e8
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@61335b86
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@477baf4
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5da0b94d
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@db2e44d
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@db2e44d
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@db2e44d
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@6b6c14c0
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@6b6c14c0
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6b6c14c0
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@3b947647
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@3b947647
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3b947647
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@1a15cd9a
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@1a15cd9a
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1a15cd9a
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@256b352c
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@256b352c
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@256b352c
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@14cef147
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@14cef147
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@14cef147
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@54011d95
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@54011d95
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@54011d95
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@23f2bc83
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@23f2bc83
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@c387202
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@c387202
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@111bda67
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@111bda67
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3e7c609
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7be758ca
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@cc749e4
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@cc749e4
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@5ec22978
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5ec22978
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@6cb1cb25
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6cb1cb25
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3a7e479a
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3a7e479a
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3a7e479a
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@34f34071
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@6a46f764
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6a46f764
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6a46f764
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3c6e4ba6
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@55a517bd
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@55a517bd
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@1db5d2b2
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1db5d2b2
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4c6030f9
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4c6030f9
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@7a258c74
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7a258c74
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7c6743e2
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7c6743e2
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71e13a2c
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@468034b6
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@976484e
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@976484e
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@976484e
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@74bffc3a
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@74bffc3a
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@74bffc3a
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@59e14a78
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@db2b10a
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@db2b10a
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@db2b10a
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3ea763a
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3ea763a
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3ea763a
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@1f98a654
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@561140db
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@164ca42b
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@164ca42b
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4a393167
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@69c5a33b
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69c5a33b
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@6e659812
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6e659812
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3fa9b4a4
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2b27fa03
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@699dd97b
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@5230b601
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5230b601
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@28bd36fa
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1e646bfb
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@52ed3b53
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@54d1f0ad
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2310195c
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@75f0f8ff
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1f6b69d7
[2013-07-08 16:21:08] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@44f1b25e
[2013-07-08 16:21:08] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 16:21:08] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 16:21:08] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 16:21:08] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 16:21:08] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 16:21:08] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 16:21:08] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 16:21:08] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 16:21:08] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 16:21:08] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 16:21:08] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 16:21:08] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 16:21:08] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 16:21:08] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 16:21:08] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 16:21:08] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 16:21:08] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 16:21:08] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 16:21:08] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 16:21:08] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 16:21:08] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 16:21:08] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 16:21:08] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 16:21:08] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 16:21:08] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 16:21:08] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 16:21:08] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 16:21:08] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 16:21:08] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 16:21:08] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 16:21:08] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 16:21:08] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 16:21:08] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:21:08] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:21:08] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 16:21:08] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 16:21:08] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 16:21:08] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:21:08] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:21:08] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 16:21:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:21:08] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:21:08] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 16:21:08] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 16:21:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:21:08] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:21:08] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:21:08] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:21:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:21:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 16:21:08] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 16:21:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 16:21:08] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 16:21:08] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 16:21:08] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 16:21:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:21:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 16:21:08] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 16:21:08] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 16:21:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:21:08] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:21:08] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 16:21:08] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 16:21:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:21:08] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:21:08] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:21:08] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:21:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:21:08] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:21:08] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:21:08] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:21:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:21:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 16:21:08] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 16:21:08] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 16:21:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:21:08] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:21:08] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 16:21:08] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 16:21:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:21:08] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:21:08] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:21:08] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:21:08] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:21:08] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:21:08] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:21:08] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:21:08] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:21:08] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 16:21:08] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:21:08] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:21:08] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:21:08] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:21:08] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:21:08] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:21:08] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:21:08] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:21:08] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:21:08] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:21:08] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:21:08] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:21:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:21:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:21:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 16:21:08] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 16:21:08] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 16:21:08] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 16:21:08] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 16:21:08] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 16:21:08] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:21:08] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 16:21:08] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 16:21:08] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 16:21:08] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 16:21:08] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 16:21:08] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 16:21:08] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 16:21:08] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 16:21:08] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 16:21:08] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 16:21:08] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 16:21:08] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 16:21:08] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 16:21:08] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 16:21:08] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 16:21:08] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 16:21:08] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 16:21:08] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:21:08] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:21:08] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:21:08] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:21:08] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:21:08] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:21:08] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:21:08] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:21:08] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@756a7c99
[2013-07-08 16:21:08] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 249a43f7-35d0-41c4-882b-03125575ab60 (<unnamed>)
[2013-07-08 16:21:08] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 16:21:08] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 16:21:08] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:21:08] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:21:08] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:21:08] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:21:08] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:21:08] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:21:08] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:21:08] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:21:08] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:21:08] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:21:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:21:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:21:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:21:08] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:21:08] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:21:08] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:21:08] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:21:08] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:21:08] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:21:08] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:21:08] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:21:08] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:21:08] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:21:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:21:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:21:08] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:21:08] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:21:08] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 16:21:08] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 16:21:08] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:21:08] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:21:08] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 16:21:08] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:21:08] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:21:08] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 16:21:08] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:21:08] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:21:08] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 16:21:08] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 16:21:08] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 16:21:08] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 16:21:08] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 16:21:08] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 16:21:08] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 16:21:08] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 16:21:08] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 16:21:08] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 16:21:08] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 16:21:08] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 16:21:08] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 16:21:08] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 16:21:08] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 16:21:14] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:21:14] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:21:14] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 16:21:14] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:21:14] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-08 16:21:15] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:21:15] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T152115Z!1373296874-18216-20!http://localhost:8080/ldap/jcb98!jcb98!!pwd!13677!!2!mRjUPtbgjVC2xUGEpwCvhaXhbcUPu8gAVeI3NURpIvwkeHVrXdn9GcuBSg8FWctYBSU51h2a2iaanDO7lRb4.YAfXURM.N1VUmYVvTmc-mBLjUpLOlI87aQmuLytox46AnyP0GIyu5NcjVc3lVrXLLl8HSH4Q2HNlSyZHqUP-vM_
[2013-07-08 16:21:15] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T152114Z, fail: 
[2013-07-08 16:21:15] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:21:15] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 16:21:15] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T152115Z Last: 1373296875858 Life: 13677 ID: 1373296874-18216-20 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:21:15] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:21:15] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:21:15] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T152114Z, fail: 
[2013-07-08 16:21:15] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T152115Z Last: 1373296875858 Life: 13677 ID: 1373296874-18216-20 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:21:15] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 16:21:15] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 16:21:16] [ERROR] LDAPController:46 - [LDAP: error code 32 - No Such Object]
[2013-07-08 16:24:56] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 16:24:56] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 16:24:56] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 16:24:56] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 16:24:56] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 16:24:56] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@7844a013
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@7844a013
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7844a013
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@762d80ae
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@31f9b804
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@39b1ff47
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@61335b86
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@61335b86
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@61335b86
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@5c429be9
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@5c429be9
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5c429be9
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@db2e44d
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@db2e44d
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@db2e44d
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@6b6c14c0
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@6b6c14c0
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6b6c14c0
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@1b2ede8
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@1b2ede8
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1b2ede8
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@6f3d5f21
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@6f3d5f21
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6f3d5f21
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@fe14de0
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@fe14de0
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@fe14de0
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b0fb9bd
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b0fb9bd
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3bad0d89
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3bad0d89
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@14cef147
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@14cef147
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@57004a1a
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6b5b5783
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@5efcc13d
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5efcc13d
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@3a3f4a21
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3a3f4a21
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@657a7adf
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@657a7adf
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@cc749e4
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@cc749e4
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@cc749e4
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2e7857a5
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@68f51766
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@68f51766
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@68f51766
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@531a700a
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@4aa0c486
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4aa0c486
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@3a7e479a
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3a7e479a
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@86ecec5
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@86ecec5
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@4e0bd5df
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4e0bd5df
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5afc0f5
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5afc0f5
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@49b9a538
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@c1bb35b
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@3f2f529b
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3f2f529b
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@3f2f529b
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@37285252
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@37285252
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@37285252
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@1ac84361
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@5f99ea3c
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@5f99ea3c
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@5f99ea3c
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2bf87baf
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2bf87baf
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2bf87baf
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@640ce0bb
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@72e5c94
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@22c393a1
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@22c393a1
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b91602
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@164ca42b
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@164ca42b
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@455bfaf
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@455bfaf
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f031310
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@69c5a33b
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@114c02d4
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@48a84b47
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@48a84b47
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6e659812
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4fe2fe5d
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3fa9b4a4
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1e929ba3
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2b27fa03
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4d8ef117
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@637644c8
[2013-07-08 16:24:56] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@699dd97b
[2013-07-08 16:24:56] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 16:24:56] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 16:24:56] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 16:24:56] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 16:24:56] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 16:24:56] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 16:24:56] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:24:56] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:24:56] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 16:24:56] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 16:24:56] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 16:24:56] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 16:24:56] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 16:24:56] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 16:24:56] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 16:24:56] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 16:24:56] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 16:24:56] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 16:24:56] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 16:24:56] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 16:24:56] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 16:24:56] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 16:24:56] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 16:24:56] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 16:24:56] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 16:24:56] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 16:24:56] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 16:24:56] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 16:24:56] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 16:24:56] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 16:24:56] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 16:24:56] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 16:24:56] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 16:24:56] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 16:24:56] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 16:24:56] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 16:24:56] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 16:24:56] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 16:24:56] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 16:24:56] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 16:24:56] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 16:24:56] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 16:24:56] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 16:24:56] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 16:24:56] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 16:24:56] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 16:24:56] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 16:24:56] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:24:56] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:24:56] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 16:24:56] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 16:24:56] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 16:24:56] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:24:56] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:24:56] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 16:24:56] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:24:56] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:24:56] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 16:24:56] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 16:24:56] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:24:56] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:24:56] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:24:56] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:24:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:24:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 16:24:57] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 16:24:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 16:24:57] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 16:24:57] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 16:24:57] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 16:24:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:24:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 16:24:57] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 16:24:57] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 16:24:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:24:57] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:24:57] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 16:24:57] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 16:24:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:24:57] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:24:57] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:24:57] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:24:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:24:57] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:24:57] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:24:57] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:24:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:24:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 16:24:57] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 16:24:57] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 16:24:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:24:57] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:24:57] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 16:24:57] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 16:24:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:24:57] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:24:57] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:24:57] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:24:57] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:24:57] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:24:57] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:24:57] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:24:57] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:24:57] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 16:24:57] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:24:57] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:24:57] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:24:57] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:24:57] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:24:57] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:24:57] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:24:57] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:24:57] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:24:57] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:24:57] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:24:57] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:24:57] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:24:57] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:24:57] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 16:24:57] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 16:24:57] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 16:24:57] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 16:24:57] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 16:24:57] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 16:24:57] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 16:24:57] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:24:57] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:24:57] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:24:57] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 16:24:57] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 16:24:57] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 16:24:57] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 16:24:57] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 16:24:57] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 16:24:57] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 16:24:57] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 16:24:57] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 16:24:57] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 16:24:57] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 16:24:57] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 16:24:57] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 16:24:57] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 16:24:57] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 16:24:57] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 16:24:57] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 16:24:57] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:24:57] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:24:57] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:24:57] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:24:57] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:24:57] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:24:57] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:24:57] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:24:57] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@60e1e567
[2013-07-08 16:24:57] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 22476758-bd17-4fe9-aeb5-c2704d46f9a1 (<unnamed>)
[2013-07-08 16:24:57] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 16:24:57] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 16:24:57] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:24:57] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:24:57] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:24:57] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:24:57] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:24:57] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:24:57] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:24:57] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:24:57] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:24:57] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:24:57] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:24:57] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:24:57] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:24:57] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:24:57] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:24:57] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:24:57] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:24:57] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:24:57] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:24:57] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:24:57] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:24:57] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:24:57] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:24:57] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:24:57] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:24:57] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:24:57] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:24:57] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:24:57] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:24:57] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:24:57] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:24:57] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:24:57] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:24:57] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:24:57] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:24:57] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 16:24:57] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 16:24:57] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:24:57] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:24:57] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 16:24:57] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:24:57] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:24:57] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 16:24:57] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:24:57] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:24:57] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 16:24:57] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 16:24:57] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 16:24:57] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 16:24:57] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 16:24:57] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 16:24:57] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 16:24:57] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 16:24:57] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 16:24:57] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 16:24:57] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 16:24:57] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 16:24:57] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 16:24:57] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 16:24:57] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 16:24:58] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:24:58] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T152458Z!1373297097-18416-2!http://localhost:8080/ldap/jcb98!jcb98!!pwd!13454!!2!haJcPHUCVm4PFneTgGgpfv46O7XELy3j4BgMqhiXmmUR.L0opKxtjmv5CNxWw5YiDQX1BAaPdaKRh0jIaULrM7Jee.GjQrjCan1NSXPTZjS-3SurLc-f5ELz3WrNggdHBAz.dcxHHstdpTXYKlL9qeWpYB5sYBjQC8TnOIj0ktM_
[2013-07-08 16:24:58] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 16:24:58] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:24:58] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 16:25:25] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:25:25] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:25:25] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 16:25:25] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:25:25] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-08 16:25:27] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:25:27] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T152527Z!1373297125-18454-8!http://localhost:8080/ldap/jcb98!jcb98!!pwd!13426!!2!RZGqAeaeFXESGPUzNwXwWOGhDwBChilmn7n4tJ.FDJyqaFOlwftASCSVXm.a6VgeDV64GnLsNQezEyOx5e5nWvRAb6ffmuSROSwfmdVQZllz1gy5UeSeyYKO2ZmiMrpVoe4y48zcM6FMIwOtuOVNxPSjZfkdeTaE3Z9Up.9jPco_
[2013-07-08 16:25:27] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T152525Z, fail: 
[2013-07-08 16:25:27] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:25:27] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 16:25:27] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T152527Z Last: 1373297127352 Life: 13426 ID: 1373297125-18454-8 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:25:27] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:25:27] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:25:27] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T152525Z, fail: 
[2013-07-08 16:25:27] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T152527Z Last: 1373297127352 Life: 13426 ID: 1373297125-18454-8 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:25:27] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 16:25:27] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 16:32:12] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 16:32:12] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 16:32:12] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 16:32:12] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 16:32:12] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 16:32:12] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@6a9effe0
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@6a9effe0
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6a9effe0
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6e61a414
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@12a4ed99
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1b72290f
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@71d0e17a
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@71d0e17a
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@71d0e17a
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@15c313da
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@15c313da
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@15c313da
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@2a5b8e8c
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@2a5b8e8c
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2a5b8e8c
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@717757ad
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@717757ad
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@717757ad
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@66d7a9c9
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@66d7a9c9
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@66d7a9c9
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@7e266b44
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@7e266b44
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e266b44
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@7844a013
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@7844a013
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7844a013
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@54b4b0a4
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@54b4b0a4
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3914fc36
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3914fc36
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@31f9b804
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@31f9b804
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@54eeabe8
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7cd47880
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@12e29f36
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@12e29f36
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@6406f3ea
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6406f3ea
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@50f8ae79
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@50f8ae79
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@174da86b
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@174da86b
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@174da86b
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@db951f2
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@381bd13
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@381bd13
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@381bd13
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7051630a
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@448be1c9
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@448be1c9
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@10bfb545
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@10bfb545
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@145d424
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@145d424
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@256b352c
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@256b352c
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1e4276fd
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1e4276fd
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@57004a1a
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6b5b5783
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@5efcc13d
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5efcc13d
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@5efcc13d
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2075a744
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2075a744
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2075a744
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@3a3f4a21
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@6f0e0eb5
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6f0e0eb5
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@6f0e0eb5
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4c18fa85
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4c18fa85
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4c18fa85
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@7810a519
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@34a083f2
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@388eed76
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@388eed76
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@86ecec5
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@c1bb35b
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@c1bb35b
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@5f99ea3c
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5f99ea3c
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@79b2591c
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@468034b6
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@976484e
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@55e03a61
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@55e03a61
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@db2b10a
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4e850e8c
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@17e319a
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3ea763a
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@15f7dbd8
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@43824d2c
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1f98a654
[2013-07-08 16:32:12] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5ecfe500
[2013-07-08 16:32:12] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 16:32:12] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 16:32:12] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 16:32:12] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 16:32:12] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 16:32:12] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 16:32:12] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 16:32:12] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 16:32:12] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 16:32:12] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 16:32:12] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 16:32:12] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 16:32:12] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 16:32:12] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 16:32:12] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 16:32:12] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 16:32:12] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 16:32:12] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 16:32:12] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 16:32:12] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 16:32:12] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 16:32:12] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 16:32:12] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 16:32:12] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 16:32:12] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 16:32:12] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 16:32:12] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 16:32:12] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 16:32:12] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 16:32:12] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 16:32:12] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 16:32:12] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 16:32:12] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:32:12] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:32:12] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 16:32:12] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 16:32:12] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 16:32:12] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:32:12] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:32:12] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 16:32:12] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:32:12] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:32:12] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 16:32:12] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 16:32:12] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:32:12] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:32:12] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:32:12] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:32:12] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:32:12] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 16:32:12] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 16:32:12] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 16:32:12] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 16:32:12] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 16:32:12] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 16:32:12] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:32:12] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 16:32:12] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 16:32:12] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 16:32:12] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:32:12] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:32:12] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 16:32:12] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 16:32:12] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:32:12] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:32:12] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:32:12] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:32:12] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:32:12] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:32:12] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:32:12] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:32:12] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:32:12] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 16:32:12] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 16:32:12] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 16:32:12] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:32:12] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:32:12] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 16:32:12] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 16:32:12] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:32:12] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:32:12] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:32:12] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:32:12] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:32:12] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:32:12] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:32:12] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:32:12] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:32:12] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 16:32:12] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:32:12] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:32:12] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:32:12] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:32:12] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:32:12] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:32:12] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:32:12] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:32:12] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:32:12] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:32:12] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:32:12] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:32:12] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:32:12] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:32:12] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 16:32:12] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 16:32:12] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 16:32:12] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 16:32:12] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 16:32:12] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 16:32:12] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:32:12] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 16:32:12] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 16:32:12] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 16:32:12] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 16:32:12] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 16:32:12] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 16:32:12] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 16:32:12] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 16:32:12] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 16:32:12] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 16:32:12] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 16:32:12] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 16:32:12] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 16:32:12] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 16:32:12] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 16:32:12] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 16:32:12] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 16:32:12] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:32:12] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:32:12] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:32:12] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:32:12] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:32:12] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:32:12] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:32:12] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:32:12] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@566d0085
[2013-07-08 16:32:12] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: bc68308b-76d9-4088-95de-0d017895675d (<unnamed>)
[2013-07-08 16:32:12] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 16:32:12] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 16:32:12] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:32:12] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:32:12] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:32:12] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:32:12] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:32:12] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:32:12] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:32:12] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:32:12] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:32:12] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:32:12] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:32:12] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:32:12] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:32:12] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:32:12] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:32:12] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:32:12] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:32:12] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:32:12] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:32:12] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:32:12] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:32:12] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:32:12] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:32:12] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:32:12] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:32:12] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:32:12] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:32:12] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 16:32:12] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 16:32:12] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:32:12] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:32:12] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 16:32:12] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:32:12] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:32:12] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 16:32:12] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:32:12] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:32:12] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 16:32:12] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 16:32:12] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 16:32:12] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 16:32:12] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 16:32:12] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 16:32:12] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 16:32:12] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 16:32:12] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 16:32:12] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 16:32:12] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 16:32:12] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 16:32:12] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 16:32:12] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 16:32:12] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 16:32:17] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:32:17] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:32:17] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 16:32:17] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:32:17] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-08 16:32:19] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:32:19] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T153219Z!1373297537-18451-10!http://localhost:8080/ldap/jcb98!jcb98!!pwd!13014!!2!swPV00HeK7tfIV5e.mdQs-TWa3dWg9FRzDzx.LvNxvQoeKai50TW3reXYLa1.tt8HkTNKEoLLrKtpaLgF.55HsiLXn4BABpz56jdmbuxeuzBh8L7B3TlLXfCzTMkQfaaf2SQkcRGPKV-Oiy8Bt.JFxbzXtm.DazqqRgQTYFPKdk_
[2013-07-08 16:32:19] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T153217Z, fail: 
[2013-07-08 16:32:19] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:32:19] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 16:32:19] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T153219Z Last: 1373297539482 Life: 13014 ID: 1373297537-18451-10 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:32:19] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:32:19] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:32:19] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T153217Z, fail: 
[2013-07-08 16:32:19] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T153219Z Last: 1373297539482 Life: 13014 ID: 1373297537-18451-10 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:32:19] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 16:32:19] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 16:32:19] [ERROR] LDAPController:64 - [LDAP: error code 32 - No Such Object]
[2013-07-08 16:32:19] [ERROR] LDAPController:71 - 
[2013-07-08 16:34:15] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 16:34:15] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 16:34:15] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 16:34:15] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 16:34:15] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 16:34:15] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@2f87fafc
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@2f87fafc
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2f87fafc
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@34f34071
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@49b9a538
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1db5d2b2
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@3bd85e85
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@3bd85e85
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3bd85e85
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@3834a1c8
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@3834a1c8
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3834a1c8
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@3484fdbc
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@3484fdbc
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3484fdbc
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@68487fb7
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@68487fb7
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@68487fb7
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@db2b10a
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@db2b10a
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@db2b10a
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@43824d2c
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@43824d2c
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@43824d2c
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@561140db
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@561140db
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@561140db
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7aaf8b32
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7aaf8b32
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@dc44a6d
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@dc44a6d
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@2bb64b70
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2bb64b70
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@164ca42b
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@70da8742
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@4190d536
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4190d536
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@455bfaf
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@455bfaf
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@2e5facbd
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2e5facbd
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4df2a9da
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4df2a9da
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4df2a9da
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@20e64795
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@3fa9b4a4
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3fa9b4a4
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3fa9b4a4
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2b27fa03
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@699dd97b
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@699dd97b
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@7ba6eeab
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7ba6eeab
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1286d597
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1286d597
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@28bd36fa
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@28bd36fa
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1f6b69d7
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1f6b69d7
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@57f55cae
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2c18b492
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@6ff2f60d
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6ff2f60d
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@6ff2f60d
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3a252a17
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3a252a17
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3a252a17
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@242870b7
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@2025b64d
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2025b64d
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@2025b64d
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5fc8ad52
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5fc8ad52
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5fc8ad52
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@738bf6bf
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@55444319
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@1ad997f9
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1ad997f9
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@30f49e8f
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@1d9d96b1
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1d9d96b1
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@73c28517
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@73c28517
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4cba8fce
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2081ca25
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@3ad8326d
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@1f48b272
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1f48b272
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3b474392
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@43a544a5
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@173dcf55
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5af6e15e
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@64610fa
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6204904d
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@199de181
[2013-07-08 16:34:15] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c3fe94a
[2013-07-08 16:34:16] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 16:34:16] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 16:34:16] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 16:34:16] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 16:34:16] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 16:34:16] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 16:34:16] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 16:34:16] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 16:34:16] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 16:34:16] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 16:34:16] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 16:34:16] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 16:34:16] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 16:34:16] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 16:34:16] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 16:34:16] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 16:34:16] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 16:34:16] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 16:34:16] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 16:34:16] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 16:34:16] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 16:34:16] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 16:34:16] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 16:34:16] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 16:34:16] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 16:34:16] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 16:34:16] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 16:34:16] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 16:34:16] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 16:34:16] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 16:34:16] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 16:34:16] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 16:34:16] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:34:16] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:34:16] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 16:34:16] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 16:34:16] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 16:34:16] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:34:16] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:34:16] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 16:34:16] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:34:16] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:34:16] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 16:34:16] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 16:34:16] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:34:16] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:34:16] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:34:16] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:34:16] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:34:16] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 16:34:16] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 16:34:16] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 16:34:16] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 16:34:16] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 16:34:16] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 16:34:16] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:34:16] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 16:34:16] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 16:34:16] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 16:34:16] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:34:16] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:34:16] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 16:34:16] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 16:34:16] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:34:16] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:34:16] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:34:16] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:34:16] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:34:16] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:34:16] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:34:16] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:34:16] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:34:16] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 16:34:16] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 16:34:16] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 16:34:16] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:34:16] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:34:16] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 16:34:16] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 16:34:16] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:34:16] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:34:16] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:34:16] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:34:16] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:34:16] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:34:16] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:34:16] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:34:16] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:34:16] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 16:34:16] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:34:16] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:34:16] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:34:16] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:34:16] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:34:16] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:34:16] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:34:16] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:34:16] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:34:16] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:34:16] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:34:16] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:34:16] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:34:16] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:34:16] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 16:34:16] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 16:34:16] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 16:34:16] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 16:34:16] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 16:34:16] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 16:34:16] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:34:16] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 16:34:16] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 16:34:16] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 16:34:16] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 16:34:16] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 16:34:16] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 16:34:16] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 16:34:16] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 16:34:16] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 16:34:16] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 16:34:16] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 16:34:16] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 16:34:16] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 16:34:16] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 16:34:16] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 16:34:16] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 16:34:16] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 16:34:16] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:34:16] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:34:16] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:34:16] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:34:16] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:34:16] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:34:16] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:34:16] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:34:16] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@56f9659d
[2013-07-08 16:34:16] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 3f2ad786-adf6-4a0b-ac17-0c6721486016 (<unnamed>)
[2013-07-08 16:34:16] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 16:34:16] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 16:34:16] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:34:16] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:34:16] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:34:16] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:34:16] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:34:16] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:34:16] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:34:16] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:34:16] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:34:16] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:34:16] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:34:16] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:34:16] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:34:16] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:34:16] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:34:16] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:34:16] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:34:16] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:34:16] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:34:16] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:34:16] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:34:16] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:34:16] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:34:16] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:34:16] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:34:16] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:34:16] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:34:16] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 16:34:16] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 16:34:16] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:34:16] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:34:16] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 16:34:16] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:34:16] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:34:16] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 16:34:16] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:34:16] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:34:16] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 16:34:16] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 16:34:16] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 16:34:16] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 16:34:16] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 16:34:16] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 16:34:16] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 16:34:16] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 16:34:16] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 16:34:16] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 16:34:16] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 16:34:16] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 16:34:16] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 16:34:16] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 16:34:16] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 16:34:20] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:34:20] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:34:20] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 16:34:20] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:34:20] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-08 16:34:22] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:34:22] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T153422Z!1373297660-16834-54!http://localhost:8080/ldap/jcb98!jcb98!!pwd!12891!!2!ejScHLT-2ru7r8gsF50CH61l81EsEaPjiQDK2-Kj8l1Z07AZuN8UMm0Lucc4ywHeIrRRyJQxHcssBd5L7MFPc2tHwhT22b5BokG17r8x73oJcCTe...r-JSMhtl5DbUa5.c2.zpgXKLH6MmnkaNdHwGoyC1doDR0IAZblRXr6x0_
[2013-07-08 16:34:22] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T153420Z, fail: 
[2013-07-08 16:34:22] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:34:22] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 16:34:22] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T153422Z Last: 1373297662196 Life: 12891 ID: 1373297660-16834-54 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:34:22] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:34:22] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:34:22] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T153420Z, fail: 
[2013-07-08 16:34:22] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T153422Z Last: 1373297662196 Life: 12891 ID: 1373297660-16834-54 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:34:22] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 16:34:22] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 16:34:22] [ERROR] LDAPController:48 - [LDAP: error code 32 - No Such Object]
[2013-07-08 16:36:47] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 16:36:47] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 16:36:47] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 16:36:47] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 16:36:47] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 16:36:47] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@5d0e2c9
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@5d0e2c9
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5d0e2c9
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@48834af6
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@11e3c2c6
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2569a1c5
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@60eb9f0d
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@60eb9f0d
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@60eb9f0d
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@521d590d
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@521d590d
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@521d590d
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@7844a013
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@7844a013
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7844a013
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@762d80ae
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@762d80ae
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@762d80ae
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@225bcd91
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@225bcd91
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@225bcd91
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@1a0283e
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@1a0283e
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1a0283e
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@46be6108
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@46be6108
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@46be6108
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@190a0d51
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@190a0d51
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@724a2dd4
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@724a2dd4
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@5092eb76
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@5092eb76
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@50f8ae79
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@db2e44d
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@6b6c14c0
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6b6c14c0
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@a211b37
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@a211b37
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@2630a895
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2630a895
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1a15cd9a
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1a15cd9a
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1a15cd9a
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@256b352c
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@5e53bbfa
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5e53bbfa
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5e53bbfa
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@14cef147
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@57004a1a
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@57004a1a
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@6b5b5783
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6b5b5783
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5efcc13d
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5efcc13d
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@2075a744
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2075a744
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6f0e0eb5
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6f0e0eb5
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@657a7adf
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@11767553
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@6fc41e49
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6fc41e49
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@6fc41e49
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5c392fe8
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5c392fe8
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5c392fe8
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@1d30b5e2
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@531a700a
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@531a700a
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@531a700a
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa0c486
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa0c486
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa0c486
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@3a7e479a
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@86ecec5
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@6e9c2192
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6e9c2192
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3f2f529b
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@b04bce3
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b04bce3
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@4e850e8c
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4e850e8c
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3ea763a
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@43824d2c
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@22c393a1
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@7aaf8b32
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7aaf8b32
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@50baa573
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@dc44a6d
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@51f2412a
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7794566d
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2bb64b70
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4d12bc7b
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@91456c5
[2013-07-08 16:36:47] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@164ca42b
[2013-07-08 16:36:47] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 16:36:47] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 16:36:47] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 16:36:47] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 16:36:47] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 16:36:47] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 16:36:47] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:36:47] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:36:47] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 16:36:47] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 16:36:47] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 16:36:47] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 16:36:47] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 16:36:47] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 16:36:47] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 16:36:47] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 16:36:47] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 16:36:47] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 16:36:47] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 16:36:47] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 16:36:47] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 16:36:47] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 16:36:47] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 16:36:47] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 16:36:47] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 16:36:47] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 16:36:47] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 16:36:47] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 16:36:47] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 16:36:47] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 16:36:47] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 16:36:47] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 16:36:47] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 16:36:47] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 16:36:47] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 16:36:47] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 16:36:47] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 16:36:47] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 16:36:47] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 16:36:47] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 16:36:47] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 16:36:47] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 16:36:47] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 16:36:47] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 16:36:47] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 16:36:48] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 16:36:48] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 16:36:48] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:36:48] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:36:48] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 16:36:48] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 16:36:48] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 16:36:48] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:36:48] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:36:48] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 16:36:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:36:48] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:36:48] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 16:36:48] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 16:36:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:36:48] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:36:48] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:36:48] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:36:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:36:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 16:36:48] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 16:36:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 16:36:48] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 16:36:48] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 16:36:48] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 16:36:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:36:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 16:36:48] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 16:36:48] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 16:36:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:36:48] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:36:48] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 16:36:48] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 16:36:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:36:48] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:36:48] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:36:48] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:36:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:36:48] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:36:48] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:36:48] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:36:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:36:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 16:36:48] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 16:36:48] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 16:36:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:36:48] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:36:48] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 16:36:48] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 16:36:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:36:48] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:36:48] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:36:48] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:36:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:36:48] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:36:48] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:36:48] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:36:48] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:36:48] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 16:36:48] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:36:48] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:36:48] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:36:48] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:36:48] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:36:48] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:36:48] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:36:48] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:36:48] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:36:48] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:36:48] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:36:48] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:36:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:36:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:36:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 16:36:48] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 16:36:48] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 16:36:48] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 16:36:48] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 16:36:48] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 16:36:48] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 16:36:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:36:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:36:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:36:48] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 16:36:48] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 16:36:48] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 16:36:48] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 16:36:48] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 16:36:48] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 16:36:48] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 16:36:48] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 16:36:48] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 16:36:48] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 16:36:48] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 16:36:48] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 16:36:48] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 16:36:48] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 16:36:48] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 16:36:48] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 16:36:48] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 16:36:48] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:36:48] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:36:48] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:36:48] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:36:48] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:36:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:36:48] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:36:48] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:36:48] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6471d768
[2013-07-08 16:36:48] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: f38a0c76-6e4d-4762-8c2a-17d92b51b0a7 (<unnamed>)
[2013-07-08 16:36:48] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 16:36:48] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 16:36:48] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:36:48] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:36:48] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:36:48] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:36:48] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:36:48] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:36:48] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:36:48] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:36:48] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:36:48] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:36:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:36:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:36:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:36:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:36:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:36:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:36:48] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:36:48] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:36:48] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:36:48] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:36:48] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:36:48] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:36:48] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:36:48] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:36:48] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:36:48] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:36:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:36:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:36:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:36:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:36:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:36:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:36:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:36:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:36:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:36:48] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 16:36:48] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 16:36:48] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:36:48] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:36:48] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 16:36:48] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:36:48] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:36:48] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 16:36:48] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:36:48] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:36:48] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 16:36:48] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 16:36:48] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 16:36:48] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 16:36:48] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 16:36:48] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 16:36:48] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 16:36:48] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 16:36:48] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 16:36:48] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 16:36:48] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 16:36:48] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 16:36:48] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 16:36:48] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 16:36:48] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 16:36:56] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:36:56] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:36:56] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 16:36:56] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:36:56] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-08 16:36:58] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:36:58] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T153658Z!1373297816-18494-26!http://localhost:8080/ldap/jcb98!jcb98!!pwd!12735!!2!Co8G4W3RsGt5XPeGDqULKHUIN.osX2SvbNGEHJn5.eyXtjikWLA3q6EpQHPHwR86kxbuZ0D0GIrZsia6Hpg4ENE2NZ7BJatxR7TMTyWCiMwjUGX8lYgkZ59wlvTlRD4OPgY70DsDSvj7O8j0AGO2y4HEjBtqQcuwmZkDoSvArbE_
[2013-07-08 16:36:58] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T153656Z, fail: 
[2013-07-08 16:36:58] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:36:58] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 16:36:58] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T153658Z Last: 1373297818384 Life: 12735 ID: 1373297816-18494-26 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:36:58] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:36:58] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:36:58] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T153656Z, fail: 
[2013-07-08 16:36:58] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T153658Z Last: 1373297818384 Life: 12735 ID: 1373297816-18494-26 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:36:58] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 16:36:58] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 16:38:07] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 16:38:07] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 16:38:07] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 16:38:07] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 16:38:07] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 16:38:07] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@6a3de2df
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@6a3de2df
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6a3de2df
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@40930120
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@60eb9f0d
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@717757ad
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@66d7a9c9
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@66d7a9c9
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@66d7a9c9
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@1f4649ed
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@1f4649ed
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f4649ed
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@22b90a6e
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@22b90a6e
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@22b90a6e
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@10ba5a81
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@10ba5a81
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@10ba5a81
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@54eeabe8
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@54eeabe8
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@54eeabe8
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@72bdec44
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@72bdec44
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@72bdec44
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@62f04dae
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@62f04dae
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@62f04dae
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5da0b94d
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5da0b94d
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7686b376
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7686b376
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@5baa8241
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@5baa8241
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c68059
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@db951f2
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@381bd13
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@381bd13
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@3b947647
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3b947647
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@145d424
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@145d424
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3bad0d89
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3bad0d89
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3bad0d89
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1d91eb90
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@153d4c49
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@153d4c49
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@153d4c49
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@39ce9085
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@23f2bc83
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@23f2bc83
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@c387202
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@c387202
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@111bda67
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@111bda67
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@3e7c609
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e7c609
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@cc749e4
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@cc749e4
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@34a083f2
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2e7857a5
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@68f51766
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@68f51766
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@68f51766
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6cb1cb25
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6cb1cb25
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6cb1cb25
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@c65fb1
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@388eed76
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@388eed76
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@388eed76
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22c8ebd6
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22c8ebd6
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22c8ebd6
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@6b064b80
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@3c6e4ba6
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@7696e4c
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7696e4c
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51bfa303
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@6fb8fcdd
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6fb8fcdd
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@22c393a1
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@22c393a1
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6b91602
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@49c88f2b
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@7aaf8b32
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@4d12bc7b
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4d12bc7b
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@164ca42b
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1ae0e7d
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a393167
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@70da8742
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1ae637f0
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@627b5c
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4190d536
[2013-07-08 16:38:07] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b9deddb
[2013-07-08 16:38:07] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 16:38:07] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 16:38:07] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 16:38:07] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 16:38:07] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 16:38:07] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 16:38:07] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 16:38:07] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 16:38:07] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 16:38:07] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 16:38:07] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 16:38:07] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 16:38:07] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 16:38:07] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 16:38:07] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 16:38:07] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 16:38:07] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 16:38:07] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 16:38:07] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 16:38:07] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 16:38:07] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 16:38:07] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 16:38:07] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 16:38:07] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 16:38:07] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 16:38:07] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 16:38:07] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 16:38:07] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 16:38:07] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 16:38:07] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 16:38:07] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 16:38:07] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 16:38:07] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:38:07] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:38:07] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 16:38:07] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 16:38:07] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 16:38:07] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:38:07] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:38:07] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 16:38:07] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:38:07] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:38:07] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 16:38:07] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 16:38:07] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:38:07] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:38:07] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:38:07] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:38:07] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:38:07] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 16:38:07] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 16:38:07] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 16:38:07] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 16:38:07] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 16:38:07] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 16:38:07] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:38:07] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 16:38:07] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 16:38:07] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 16:38:07] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:38:07] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:38:07] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 16:38:07] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 16:38:07] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:38:07] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:38:07] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:38:07] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:38:07] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:38:07] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:38:07] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:38:07] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:38:07] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:38:07] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 16:38:07] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 16:38:07] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 16:38:07] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:38:07] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:38:07] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 16:38:07] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 16:38:07] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:38:07] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:38:07] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:38:07] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:38:07] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:38:07] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:38:07] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:38:07] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:38:07] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:38:07] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 16:38:07] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:38:07] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:38:07] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:38:07] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:38:07] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:38:07] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:38:07] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:38:07] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:38:07] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:38:07] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:38:07] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:38:07] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:38:07] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:38:07] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:38:07] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 16:38:07] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 16:38:07] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 16:38:07] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 16:38:07] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 16:38:07] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 16:38:07] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:38:07] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 16:38:07] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 16:38:07] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 16:38:07] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 16:38:07] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 16:38:07] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 16:38:07] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 16:38:07] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 16:38:07] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 16:38:07] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 16:38:07] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 16:38:07] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 16:38:07] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 16:38:07] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 16:38:07] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 16:38:07] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 16:38:07] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 16:38:07] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:38:07] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:38:07] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:38:07] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:38:07] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:38:07] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:38:07] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:38:07] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:38:07] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4cf2f585
[2013-07-08 16:38:07] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 96f1f8c7-8a28-44de-94cf-51b83b67f1f6 (<unnamed>)
[2013-07-08 16:38:07] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 16:38:07] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 16:38:07] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:38:07] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:38:07] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:38:07] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:38:07] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:38:07] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:38:07] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:38:07] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:38:07] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:38:07] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:38:07] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:38:07] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:38:07] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:38:07] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:38:07] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:38:07] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:38:07] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:38:07] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:38:07] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:38:07] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:38:07] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:38:07] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:38:07] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:38:07] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:38:07] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:38:07] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:38:07] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:38:07] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 16:38:07] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 16:38:07] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:38:07] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:38:07] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 16:38:07] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:38:07] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:38:07] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 16:38:07] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:38:07] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:38:07] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 16:38:07] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 16:38:07] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 16:38:07] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 16:38:07] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 16:38:07] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 16:38:07] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 16:38:07] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 16:38:07] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 16:38:07] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 16:38:07] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 16:38:07] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 16:38:07] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 16:38:07] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 16:38:07] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 16:38:11] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:38:11] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:38:11] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 16:38:11] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:38:11] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-08 16:38:14] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:38:14] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T153814Z!1373297891-17293-48!http://localhost:8080/ldap/jcb98!jcb98!!pwd!12660!!2!VOL2glixbOM0XB-Y-Dznxe9HqyjXM.nw8acTRiSzljdKP-Ja2gj5SbEATfa0n5jbQ26ZqG2vI4HDHKd2ajPrMFouJZU-Ku6hU0TK6O0hCLtjyjjUvXgGdhM6DDtgA3d2UTnQwfn.i3zBw25bUfGdZ3owwllZS1MKY1Ue4.OnRv8_
[2013-07-08 16:38:14] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T153811Z, fail: 
[2013-07-08 16:38:14] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:38:14] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 16:38:14] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T153814Z Last: 1373297894668 Life: 12660 ID: 1373297891-17293-48 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:38:14] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:38:14] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:38:14] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T153811Z, fail: 
[2013-07-08 16:38:14] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T153814Z Last: 1373297894668 Life: 12660 ID: 1373297891-17293-48 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:38:14] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 16:38:14] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 16:42:30] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 16:42:30] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 16:42:30] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 16:42:30] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 16:42:30] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 16:42:30] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@66d7a9c9
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@66d7a9c9
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@66d7a9c9
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1f4649ed
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@71e852be
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7844a013
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@10fd0a62
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@10fd0a62
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@10fd0a62
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@225bcd91
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@225bcd91
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@225bcd91
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@12e29f36
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@12e29f36
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@12e29f36
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@62f04dae
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@62f04dae
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@62f04dae
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@5092eb76
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@5092eb76
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5092eb76
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@57044c5
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@57044c5
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@57044c5
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@6b6c14c0
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@6b6c14c0
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6b6c14c0
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@a211b37
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@a211b37
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7051630a
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7051630a
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@448be1c9
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@448be1c9
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@10bfb545
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@145d424
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@256b352c
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@256b352c
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@1e4276fd
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e4276fd
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@6b5b5783
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6b5b5783
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@15364ee5
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15364ee5
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15364ee5
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@111bda67
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@3e7c609
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3e7c609
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3e7c609
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4c18fa85
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@7810a519
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7810a519
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@34a083f2
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@34a083f2
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2e7857a5
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2e7857a5
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@68f51766
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@68f51766
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@c65fb1
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@c65fb1
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3a7e479a
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@86ecec5
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@4e0bd5df
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4e0bd5df
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@4e0bd5df
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@591bfcbe
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@591bfcbe
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@591bfcbe
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@5afc0f5
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@3b0e2558
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3b0e2558
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@3b0e2558
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6e9c2192
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6e9c2192
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6e9c2192
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@3bd85e85
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@3834a1c8
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@7418e252
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7418e252
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4e850e8c
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@7aaf8b32
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7aaf8b32
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@70da8742
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70da8742
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@627b5c
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b9deddb
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@2501e081
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@2e5facbd
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2e5facbd
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@114c02d4
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@154db52b
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@20b124fa
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4df2a9da
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@766d4f30
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@26a150e
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@28c4b5f
[2013-07-08 16:42:30] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@48a84b47
[2013-07-08 16:42:30] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 16:42:30] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 16:42:30] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 16:42:30] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 16:42:30] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 16:42:30] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 16:42:30] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 16:42:30] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 16:42:30] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 16:42:30] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 16:42:30] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 16:42:30] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 16:42:30] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 16:42:30] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 16:42:30] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 16:42:30] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 16:42:30] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 16:42:30] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 16:42:30] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 16:42:30] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 16:42:30] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 16:42:30] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 16:42:30] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 16:42:30] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 16:42:30] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 16:42:30] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 16:42:30] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 16:42:30] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 16:42:30] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 16:42:30] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 16:42:30] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 16:42:30] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 16:42:30] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:42:30] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:42:30] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 16:42:30] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 16:42:30] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 16:42:30] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:42:30] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:42:30] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 16:42:30] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:42:30] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:42:30] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 16:42:30] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 16:42:30] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:42:30] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:42:30] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:42:30] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:42:30] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:42:30] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 16:42:30] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 16:42:30] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 16:42:30] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 16:42:30] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 16:42:30] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 16:42:30] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:42:30] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 16:42:30] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 16:42:30] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 16:42:30] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:42:30] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:42:30] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 16:42:30] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 16:42:30] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:42:30] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:42:30] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:42:30] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:42:30] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:42:30] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:42:30] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:42:30] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:42:30] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:42:30] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 16:42:30] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 16:42:30] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 16:42:30] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:42:30] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:42:30] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 16:42:30] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 16:42:30] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:42:30] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:42:30] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:42:30] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:42:30] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:42:30] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:42:30] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:42:30] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:42:30] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:42:30] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 16:42:30] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:42:30] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:42:30] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:42:30] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:42:30] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:42:30] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:42:30] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:42:30] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:42:30] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:42:30] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:42:30] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:42:30] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:42:30] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:42:30] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:42:30] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 16:42:30] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 16:42:30] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 16:42:30] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 16:42:30] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 16:42:30] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 16:42:30] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:42:30] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 16:42:30] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 16:42:30] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 16:42:30] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 16:42:30] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 16:42:30] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 16:42:30] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 16:42:30] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 16:42:30] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 16:42:30] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 16:42:30] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 16:42:30] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 16:42:30] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 16:42:30] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 16:42:30] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 16:42:30] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 16:42:30] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 16:42:30] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:42:30] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:42:30] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:42:30] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:42:30] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:42:30] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:42:30] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:42:30] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:42:30] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3f1de914
[2013-07-08 16:42:30] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 0445bc48-75d7-4339-b882-a07087ab3589 (<unnamed>)
[2013-07-08 16:42:30] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 16:42:30] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 16:42:30] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:42:30] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:42:30] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:42:30] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:42:30] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:42:30] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:42:30] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:42:30] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:42:30] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:42:30] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:42:30] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:42:30] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:42:30] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:42:30] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:42:30] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:42:30] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:42:30] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:42:30] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:42:30] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:42:30] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:42:30] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:42:30] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:42:30] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:42:30] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:42:30] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:42:30] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:42:30] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:42:30] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 16:42:30] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 16:42:30] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:42:30] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:42:30] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 16:42:30] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:42:30] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:42:30] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 16:42:30] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:42:30] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:42:30] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 16:42:30] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 16:42:30] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 16:42:30] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 16:42:30] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 16:42:30] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 16:42:30] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 16:42:30] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 16:42:30] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 16:42:30] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 16:42:30] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 16:42:30] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 16:42:30] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 16:42:30] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 16:42:30] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 16:42:32] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:42:32] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:42:32] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 16:42:32] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:42:32] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-08 16:42:33] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:42:33] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T154233Z!1373298152-18820-10!http://localhost:8080/ldap/jcb98!jcb98!!pwd!12399!!2!tGV.2gDcta-WsZju.UVfYJHUc36ssQRu-MCDS98mahuH3i.ahtIuAwvk.fsnlmFrEl8r4V1XsJ1-BPGqA1CUv6Oggcu45VnPj5TD67JQIZ8qSG8NynsyCzXp1Yy2wY5QCZdtMheiK9lM-imYfpOgmfYh2ycLRZLTuNMP.p85Tz0_
[2013-07-08 16:42:33] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T154232Z, fail: 
[2013-07-08 16:42:33] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:42:33] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 16:42:34] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T154233Z Last: 1373298154003 Life: 12399 ID: 1373298152-18820-10 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:42:34] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:42:34] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:42:34] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T154232Z, fail: 
[2013-07-08 16:42:34] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T154233Z Last: 1373298154003 Life: 12399 ID: 1373298152-18820-10 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:42:34] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 16:42:34] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 16:43:37] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 16:43:37] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 16:43:37] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 16:43:37] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 16:43:37] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 16:43:37] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@190c0fa7
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@190c0fa7
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@190c0fa7
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@390b755d
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5492de02
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@255b5c1f
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@3914fc36
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@3914fc36
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3914fc36
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@31f9b804
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@31f9b804
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@31f9b804
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@e7c0d41
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@e7c0d41
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@e7c0d41
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@477baf4
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@477baf4
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@477baf4
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@7686b376
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@7686b376
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7686b376
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@6b6c14c0
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@6b6c14c0
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6b6c14c0
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@db951f2
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@db951f2
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@db951f2
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6f3d5f21
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6f3d5f21
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b947647
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b947647
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@1a15cd9a
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1a15cd9a
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@f6a8823
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@216feee5
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@4b5a4a77
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4b5a4a77
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@153d4c49
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@153d4c49
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@23f2bc83
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@23f2bc83
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3a3f4a21
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3a3f4a21
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3a3f4a21
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@657a7adf
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@11767553
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@11767553
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@11767553
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@cc749e4
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@16369fdc
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@16369fdc
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@5ec22978
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5ec22978
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@32d35f5f
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@32d35f5f
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@c9021e3
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@c9021e3
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2f87fafc
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2f87fafc
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@22c8ebd6
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6b064b80
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@3c6e4ba6
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3c6e4ba6
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@3c6e4ba6
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@55a517bd
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@55a517bd
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@55a517bd
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@1db5d2b2
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@4c6030f9
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4c6030f9
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@4c6030f9
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7a258c74
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7a258c74
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7a258c74
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@7696e4c
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@7c6743e2
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@55e03a61
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@55e03a61
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@db2b10a
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@4de514a9
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4de514a9
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@4a393167
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4a393167
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1ae637f0
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4190d536
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@3e29b849
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@69c5a33b
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@69c5a33b
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@b45c414
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@114c02d4
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@154db52b
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@20b124fa
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4df2a9da
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@766d4f30
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@26a150e
[2013-07-08 16:43:37] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@28c4b5f
[2013-07-08 16:43:37] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 16:43:37] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 16:43:37] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 16:43:37] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 16:43:37] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 16:43:37] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 16:43:37] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 16:43:37] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 16:43:37] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 16:43:37] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 16:43:37] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 16:43:37] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 16:43:37] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 16:43:37] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 16:43:37] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 16:43:37] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 16:43:37] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 16:43:37] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 16:43:37] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 16:43:37] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 16:43:37] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 16:43:37] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 16:43:37] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 16:43:37] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 16:43:37] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 16:43:37] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 16:43:37] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 16:43:37] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 16:43:37] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 16:43:37] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 16:43:37] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 16:43:37] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 16:43:37] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:43:37] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:43:37] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 16:43:37] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 16:43:37] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 16:43:37] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:43:37] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:43:37] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 16:43:37] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:43:37] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:43:37] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 16:43:37] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 16:43:37] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:43:37] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:43:37] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:43:37] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:43:37] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:43:37] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 16:43:37] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 16:43:37] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 16:43:37] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 16:43:37] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 16:43:37] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 16:43:37] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:43:37] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 16:43:37] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 16:43:37] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 16:43:37] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:43:37] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:43:37] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 16:43:37] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 16:43:37] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:43:37] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:43:37] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:43:37] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:43:37] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:43:37] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:43:37] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:43:37] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:43:37] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:43:37] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 16:43:37] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 16:43:37] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 16:43:37] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:43:37] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:43:37] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 16:43:37] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 16:43:37] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:43:37] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:43:37] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:43:37] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:43:37] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:43:37] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:43:37] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:43:37] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:43:37] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:43:37] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 16:43:37] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:43:37] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:43:37] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:43:37] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:43:37] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:43:37] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:43:37] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:43:37] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:43:37] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:43:37] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:43:37] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:43:37] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:43:37] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:43:37] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:43:37] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 16:43:37] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 16:43:37] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 16:43:37] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 16:43:37] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 16:43:37] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 16:43:37] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:43:37] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 16:43:37] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 16:43:37] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 16:43:37] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 16:43:37] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 16:43:37] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 16:43:37] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 16:43:37] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 16:43:37] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 16:43:37] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 16:43:37] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 16:43:37] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 16:43:37] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 16:43:37] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 16:43:37] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 16:43:37] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 16:43:37] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 16:43:37] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:43:37] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:43:37] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:43:37] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:43:37] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:43:37] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:43:37] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:43:37] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:43:37] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@50fc5408
[2013-07-08 16:43:37] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 891861a1-9fd9-4d72-964c-b2936c7e2b30 (<unnamed>)
[2013-07-08 16:43:37] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 16:43:37] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 16:43:37] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:43:37] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:43:37] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:43:37] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:43:37] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:43:37] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:43:37] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:43:37] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:43:37] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:43:37] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:43:37] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:43:37] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:43:37] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:43:37] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:43:37] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:43:37] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:43:37] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:43:37] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:43:37] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:43:37] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:43:37] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:43:37] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:43:37] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:43:37] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:43:37] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:43:37] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:43:37] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:43:37] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 16:43:37] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 16:43:37] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:43:37] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:43:37] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 16:43:37] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:43:37] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:43:37] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 16:43:37] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:43:37] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:43:37] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 16:43:37] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 16:43:37] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 16:43:37] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 16:43:37] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 16:43:37] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 16:43:37] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 16:43:37] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 16:43:37] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 16:43:37] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 16:43:37] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 16:43:37] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 16:43:37] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 16:43:37] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 16:43:37] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 16:43:38] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:43:38] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:43:38] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 16:43:38] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:43:38] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-08 16:43:39] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:43:39] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T154339Z!1373298218-18425-10!http://localhost:8080/ldap/jcb98!jcb98!!pwd!12333!!2!cgLlmjrQ1DGa3a1DB6ylwWcAuKbKXnRwLpFhApK85gVWY6ajvZwCzLJDj13ON1z.7gUBFeERfLXrQuJ6ER8vha7iuOsYMFAQtgm-4PSoKF1cIKdAxP-sERSzSonHqXX4Wshymkaxxi4sQMZCw1SD9enA1fNyxeNNJr6qE-18H-A_
[2013-07-08 16:43:39] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T154338Z, fail: 
[2013-07-08 16:43:39] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:43:39] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 16:43:39] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T154339Z Last: 1373298219890 Life: 12333 ID: 1373298218-18425-10 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:43:39] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:43:39] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:43:39] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T154338Z, fail: 
[2013-07-08 16:43:39] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T154339Z Last: 1373298219890 Life: 12333 ID: 1373298218-18425-10 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:43:39] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 16:43:39] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 16:45:44] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 16:45:44] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 16:45:44] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 16:45:44] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 16:45:44] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 16:45:44] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@3f78e13f
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@3f78e13f
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3f78e13f
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@58cbffde
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61697d14
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@762d80ae
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@225bcd91
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@225bcd91
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@225bcd91
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@3a8bd3bb
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@3a8bd3bb
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3a8bd3bb
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@62f04dae
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@62f04dae
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@62f04dae
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@6406f3ea
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@6406f3ea
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6406f3ea
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@50f8ae79
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@50f8ae79
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@50f8ae79
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@174da86b
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@174da86b
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@174da86b
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@52f9cbe5
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@52f9cbe5
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@52f9cbe5
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7051630a
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7051630a
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@448be1c9
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@448be1c9
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@10bfb545
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@10bfb545
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@145d424
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@256b352c
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@5e53bbfa
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5e53bbfa
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@54011d95
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@54011d95
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@5efcc13d
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5efcc13d
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4dc4e792
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4dc4e792
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4dc4e792
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e7c609
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@7be758ca
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7be758ca
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7be758ca
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7810a519
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@34a083f2
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@34a083f2
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@2e7857a5
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2e7857a5
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@68f51766
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@68f51766
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@6cb1cb25
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6cb1cb25
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@388eed76
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@388eed76
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@86ecec5
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4e0bd5df
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@591bfcbe
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@591bfcbe
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@591bfcbe
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5afc0f5
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5afc0f5
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5afc0f5
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@3b0e2558
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@6e9c2192
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6e9c2192
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@6e9c2192
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3bd85e85
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3bd85e85
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3bd85e85
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@3834a1c8
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@51bfa303
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@59e14a78
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59e14a78
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7418e252
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@e2f75e5
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@e2f75e5
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@1ae0e7d
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1ae0e7d
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70da8742
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@627b5c
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@2d6acad2
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@72d8978c
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@72d8978c
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2e5facbd
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@b45c414
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@114c02d4
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@154db52b
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@20b124fa
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4df2a9da
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@766d4f30
[2013-07-08 16:45:44] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@26a150e
[2013-07-08 16:45:44] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 16:45:44] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 16:45:44] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 16:45:44] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 16:45:44] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 16:45:44] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 16:45:44] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 16:45:44] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 16:45:44] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 16:45:44] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 16:45:44] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 16:45:44] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 16:45:44] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 16:45:44] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 16:45:44] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 16:45:44] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 16:45:44] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 16:45:44] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 16:45:44] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 16:45:44] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 16:45:44] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 16:45:44] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 16:45:44] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 16:45:44] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 16:45:44] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 16:45:44] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 16:45:44] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 16:45:44] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 16:45:44] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 16:45:44] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 16:45:44] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 16:45:44] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 16:45:44] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:45:44] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:45:44] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 16:45:44] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 16:45:44] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 16:45:44] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:45:44] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:45:44] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 16:45:44] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:45:44] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:45:44] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 16:45:44] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 16:45:44] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:45:44] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:45:44] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:45:44] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:45:44] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:45:44] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 16:45:44] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 16:45:44] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 16:45:44] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 16:45:44] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 16:45:44] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 16:45:44] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:45:44] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 16:45:44] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 16:45:44] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 16:45:44] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:45:44] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:45:44] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 16:45:44] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 16:45:44] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:45:44] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:45:44] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:45:44] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:45:44] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:45:44] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:45:44] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:45:44] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:45:44] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:45:44] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 16:45:44] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 16:45:44] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 16:45:44] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:45:44] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:45:44] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 16:45:44] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 16:45:44] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:45:44] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:45:44] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:45:44] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:45:44] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:45:44] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:45:44] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:45:44] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:45:44] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:45:44] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 16:45:44] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:45:44] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:45:44] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:45:44] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:45:44] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:45:44] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:45:44] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:45:44] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:45:44] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:45:44] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:45:44] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:45:44] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:45:44] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:45:44] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:45:44] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 16:45:44] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 16:45:44] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 16:45:44] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 16:45:44] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 16:45:44] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 16:45:44] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:45:44] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 16:45:44] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 16:45:44] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 16:45:44] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 16:45:44] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 16:45:44] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 16:45:44] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 16:45:44] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 16:45:44] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 16:45:44] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 16:45:44] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 16:45:44] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 16:45:44] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 16:45:44] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 16:45:44] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 16:45:44] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 16:45:44] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 16:45:44] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:45:44] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:45:44] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:45:44] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:45:44] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:45:44] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:45:44] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:45:44] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:45:44] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@53c059f6
[2013-07-08 16:45:44] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: fbce7b10-23b8-4c01-86c7-17c913eab787 (<unnamed>)
[2013-07-08 16:45:44] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 16:45:44] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 16:45:44] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:45:44] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:45:44] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:45:44] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:45:44] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:45:44] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:45:44] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:45:44] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:45:44] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:45:44] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:45:44] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:45:44] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:45:44] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:45:44] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:45:44] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:45:44] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:45:44] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:45:44] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:45:44] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:45:44] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:45:44] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:45:44] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:45:44] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:45:44] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:45:44] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:45:44] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:45:44] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:45:44] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 16:45:44] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 16:45:44] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:45:44] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:45:44] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 16:45:44] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:45:44] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:45:44] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 16:45:44] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:45:44] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:45:44] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 16:45:44] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 16:45:44] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 16:45:44] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 16:45:44] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 16:45:44] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 16:45:44] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 16:45:44] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 16:45:44] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 16:45:44] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 16:45:44] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 16:45:44] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 16:45:44] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 16:45:44] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 16:45:44] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 16:45:45] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:45:45] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:45:45] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 16:45:45] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:45:45] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-08 16:45:46] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:45:46] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T154546Z!1373298345-19006-4!http://localhost:8080/ldap/jcb98!jcb98!!pwd!12206!!2!SuhcM7H.wVyeYdi8N0FmLAJk7zvShY-.EcFVbsWI3cpkIKQOGGzUTbkKjTG-6RGFaYZB.7KuQF9IWU0U1bbJg2VSM9dqLIX-yiH80-0vrxkbtLk4pP-BnxjM1b-NAscdzqBs1PdiuzNkSi8Ublp3YyH376f2DNVKrGzcuSE8dNU_
[2013-07-08 16:45:46] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T154545Z, fail: 
[2013-07-08 16:45:46] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:45:46] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 16:45:46] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T154546Z Last: 1373298346549 Life: 12206 ID: 1373298345-19006-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:45:46] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:45:46] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:45:46] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T154545Z, fail: 
[2013-07-08 16:45:46] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T154546Z Last: 1373298346549 Life: 12206 ID: 1373298345-19006-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:45:46] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 16:45:46] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 16:46:09] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 16:46:09] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 16:46:09] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 16:46:09] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 16:46:09] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 16:46:09] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@3cf4921b
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@3cf4921b
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3cf4921b
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3cd5e270
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@38a92aaa
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7c7ba849
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@7862af46
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@7862af46
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7862af46
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@3f6a5d72
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@3f6a5d72
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3f6a5d72
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@3d95033
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@3d95033
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3d95033
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@3c74c144
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@3c74c144
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3c74c144
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@d054f93
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@d054f93
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@d054f93
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@36a75e9f
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@36a75e9f
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@36a75e9f
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@55611ed3
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@55611ed3
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@55611ed3
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@47c39412
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@47c39412
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@b5c44d6
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@b5c44d6
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@1d05a248
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1d05a248
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7a34cdfc
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2ca2e19e
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@6f539d49
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6f539d49
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@71594ba3
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@71594ba3
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@670064a4
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@670064a4
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@20688e91
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@20688e91
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@20688e91
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@12072edc
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@2875ca3e
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2875ca3e
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2875ca3e
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3bdbe135
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@2cf5006
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2cf5006
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@21e8614a
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@21e8614a
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@44dd20b6
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@44dd20b6
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@478dabf1
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@478dabf1
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7e6a60d5
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7e6a60d5
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6ec44aaf
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1d5c0c91
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@2d4e3d95
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2d4e3d95
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@2d4e3d95
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@710087
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@710087
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@710087
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@4cfa88fb
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@59fe1da2
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@59fe1da2
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@59fe1da2
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@371daf60
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@371daf60
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@371daf60
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@314382c6
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@7eda34f5
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@24f90b1a
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@24f90b1a
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@27905a42
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@7dc4cd9
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7dc4cd9
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@6d5998cb
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6d5998cb
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@360b0c5a
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5b8ad9a0
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@397577f9
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@543a586d
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@543a586d
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@492833ff
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e6dcfde
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6b6a3075
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@893886b
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@de12d33
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3a5e7663
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@fae7b85
[2013-07-08 16:46:09] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@82f60ce
[2013-07-08 16:46:09] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 16:46:09] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 16:46:09] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 16:46:09] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 16:46:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 16:46:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 16:46:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:46:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:46:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 16:46:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 16:46:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 16:46:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 16:46:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 16:46:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 16:46:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 16:46:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 16:46:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 16:46:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 16:46:09] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 16:46:09] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 16:46:09] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 16:46:09] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 16:46:09] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 16:46:09] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 16:46:09] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 16:46:09] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 16:46:09] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 16:46:09] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 16:46:09] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 16:46:09] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 16:46:09] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 16:46:09] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 16:46:09] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 16:46:09] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 16:46:09] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 16:46:09] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 16:46:09] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 16:46:09] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 16:46:09] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 16:46:09] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 16:46:09] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 16:46:09] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 16:46:09] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 16:46:09] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 16:46:09] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 16:46:09] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 16:46:10] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 16:46:10] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:46:10] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:46:10] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 16:46:10] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 16:46:10] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 16:46:10] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:46:10] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:46:10] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 16:46:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:46:10] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:46:10] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 16:46:10] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 16:46:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:46:10] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:46:10] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:46:10] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:46:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:46:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 16:46:10] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 16:46:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 16:46:10] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 16:46:10] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 16:46:10] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 16:46:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:46:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 16:46:10] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 16:46:10] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 16:46:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:46:10] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:46:10] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 16:46:10] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 16:46:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:46:10] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:46:10] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:46:10] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:46:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:46:10] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:46:10] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:46:10] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:46:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:46:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 16:46:10] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 16:46:10] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 16:46:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:46:10] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:46:10] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 16:46:10] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 16:46:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:46:10] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:46:10] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:46:10] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:46:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:46:10] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:46:10] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:46:10] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:46:10] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:46:10] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 16:46:10] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:46:10] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:46:10] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:46:10] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:46:10] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:46:10] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:46:10] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:46:10] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:46:10] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:46:10] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:46:10] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:46:10] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:46:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:46:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:46:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 16:46:10] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 16:46:10] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 16:46:10] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 16:46:10] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 16:46:10] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 16:46:10] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 16:46:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:46:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:46:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:46:10] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 16:46:10] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 16:46:10] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 16:46:10] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 16:46:10] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 16:46:10] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 16:46:10] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 16:46:10] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 16:46:10] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 16:46:10] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 16:46:10] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 16:46:10] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 16:46:10] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 16:46:10] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 16:46:10] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 16:46:10] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 16:46:10] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 16:46:10] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:46:10] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:46:10] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:46:10] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:46:10] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:46:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:46:10] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:46:10] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:46:10] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1a06f956
[2013-07-08 16:46:10] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: b6df927a-4104-456d-bd4e-d0f911524034 (<unnamed>)
[2013-07-08 16:46:10] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 16:46:10] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 16:46:10] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:46:10] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:46:10] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:46:10] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:46:10] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:46:10] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:46:10] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:46:10] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:46:10] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:46:10] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:46:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:46:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:46:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:46:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:46:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:46:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:46:10] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:46:10] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:46:10] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:46:10] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:46:10] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:46:10] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:46:10] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:46:10] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:46:10] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:46:10] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:46:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:46:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:46:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:46:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:46:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:46:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:46:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:46:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:46:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:46:10] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 16:46:10] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 16:46:10] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:46:10] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:46:10] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 16:46:10] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:46:10] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:46:10] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 16:46:10] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:46:10] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:46:10] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 16:46:10] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 16:46:10] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 16:46:10] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 16:46:10] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 16:46:10] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 16:46:10] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 16:46:10] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 16:46:10] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 16:46:10] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 16:46:10] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 16:46:10] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 16:46:10] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 16:46:10] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 16:46:10] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 16:46:11] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:46:11] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:46:11] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 16:46:11] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:46:11] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-08 16:46:12] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:46:12] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T154612Z!1373298371-17920-16!http://localhost:8080/ldap/jcb98!jcb98!!pwd!12180!!2!jpn.qMQXMtStqrthmKSs8XC6rSjiS.c1F3IIjVtk.fbmWOV.aU4qQ.x7geGS1rCHDdDsRU9xy.V4F912u9U2SpSzDEXPL.8LgsxZbq0NeQjoxRSV5GvuBe5RKxtC57SSRnuNmhb9cGgDHDCLKpPp-YS5cdjxExoVrSB0dodzXrQ_
[2013-07-08 16:46:12] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T154611Z, fail: 
[2013-07-08 16:46:12] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:46:12] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 16:46:12] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T154612Z Last: 1373298372630 Life: 12180 ID: 1373298371-17920-16 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:46:12] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:46:12] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:46:12] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T154611Z, fail: 
[2013-07-08 16:46:12] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T154612Z Last: 1373298372630 Life: 12180 ID: 1373298371-17920-16 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:46:12] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 16:46:12] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 16:56:58] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 16:56:58] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 16:56:58] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 16:56:58] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 16:56:58] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 16:56:58] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@255b5c1f
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@255b5c1f
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@255b5c1f
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@22b90a6e
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@15837e8
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7cd47880
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@190a0d51
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@190a0d51
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@190a0d51
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@724a2dd4
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@724a2dd4
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@724a2dd4
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@4c68059
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@4c68059
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4c68059
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@db951f2
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@db951f2
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@db951f2
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@7051630a
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@7051630a
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7051630a
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@fe14de0
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@fe14de0
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@fe14de0
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@145d424
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@145d424
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@145d424
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5e53bbfa
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5e53bbfa
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1e4276fd
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1e4276fd
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@54011d95
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@54011d95
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@39ce9085
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@23f2bc83
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@c387202
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@c387202
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@3e7c609
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3e7c609
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@7810a519
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7810a519
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5c392fe8
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5c392fe8
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5c392fe8
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@32d35f5f
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@c9021e3
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@c9021e3
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@c9021e3
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c65fb1
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@388eed76
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@388eed76
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@22c8ebd6
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@22c8ebd6
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6b064b80
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6b064b80
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@3c6e4ba6
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c6e4ba6
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1db5d2b2
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1db5d2b2
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6e9c2192
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3bd85e85
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@3834a1c8
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3834a1c8
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@3834a1c8
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@51bfa303
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@51bfa303
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@51bfa303
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@71e13a2c
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@468034b6
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@468034b6
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@468034b6
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@976484e
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@976484e
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@976484e
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@74bffc3a
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@59e14a78
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@49c88f2b
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@49c88f2b
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4de514a9
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@1ae637f0
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ae637f0
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@69c5a33b
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@69c5a33b
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@b45c414
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@154db52b
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@766d4f30
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@3fa9b4a4
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3fa9b4a4
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2b27fa03
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4d8ef117
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@637644c8
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@699dd97b
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7a315068
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3b961a84
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7ba6eeab
[2013-07-08 16:56:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@c7f5bf9
[2013-07-08 16:56:58] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 16:56:58] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 16:56:58] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 16:56:58] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 16:56:58] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 16:56:58] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 16:56:58] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 16:56:58] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 16:56:58] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 16:56:58] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 16:56:58] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 16:56:58] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 16:56:58] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 16:56:58] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 16:56:58] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 16:56:58] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 16:56:58] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 16:56:58] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 16:56:58] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 16:56:58] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 16:56:58] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 16:56:58] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 16:56:58] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 16:56:58] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 16:56:58] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 16:56:58] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 16:56:58] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 16:56:58] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 16:56:58] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 16:56:58] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 16:56:58] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 16:56:58] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 16:56:58] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:56:58] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 16:56:58] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 16:56:58] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 16:56:58] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 16:56:58] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:56:58] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:56:58] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 16:56:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:56:58] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:56:58] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 16:56:58] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 16:56:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:56:58] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:56:58] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:56:58] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:56:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:56:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 16:56:58] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 16:56:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 16:56:58] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 16:56:58] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 16:56:58] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 16:56:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:56:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 16:56:58] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 16:56:58] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 16:56:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:56:58] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:56:58] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 16:56:58] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 16:56:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:56:58] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:56:58] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:56:58] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:56:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:56:58] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:56:58] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:56:58] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:56:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 16:56:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 16:56:58] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 16:56:58] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 16:56:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 16:56:58] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 16:56:58] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 16:56:58] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 16:56:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 16:56:58] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 16:56:58] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 16:56:58] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 16:56:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 16:56:58] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 16:56:58] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 16:56:58] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 16:56:58] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:56:58] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 16:56:58] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:56:58] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:56:58] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 16:56:58] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 16:56:58] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:56:58] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:56:58] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:56:58] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:56:58] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:56:58] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:56:58] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:56:58] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:56:58] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:56:58] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:56:58] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 16:56:58] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 16:56:58] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 16:56:58] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 16:56:58] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 16:56:58] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 16:56:58] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:56:58] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 16:56:58] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 16:56:58] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 16:56:58] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 16:56:58] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 16:56:58] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 16:56:58] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 16:56:58] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 16:56:58] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 16:56:58] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 16:56:58] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 16:56:58] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 16:56:58] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 16:56:58] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 16:56:58] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 16:56:58] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 16:56:58] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 16:56:58] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:56:58] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:56:58] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:56:58] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:56:58] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:56:58] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:56:58] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:56:58] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 16:56:58] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2607c28c
[2013-07-08 16:56:58] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: feb8722f-3191-4db2-98e5-591b17de50fe (<unnamed>)
[2013-07-08 16:56:58] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 16:56:58] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 16:56:58] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:56:58] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:56:58] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:56:58] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:56:58] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:56:58] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:56:58] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:56:58] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:56:58] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:56:58] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:56:58] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:56:58] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:56:58] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:56:58] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 16:56:58] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 16:56:58] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 16:56:58] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 16:56:58] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 16:56:58] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 16:56:58] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 16:56:58] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 16:56:58] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 16:56:58] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 16:56:58] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:56:58] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 16:56:58] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:56:58] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 16:56:58] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 16:56:58] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 16:56:58] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:56:58] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 16:56:58] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 16:56:58] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:56:58] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 16:56:58] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 16:56:58] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:56:58] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 16:56:58] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 16:56:58] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 16:56:58] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 16:56:58] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 16:56:58] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 16:56:58] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 16:56:58] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 16:56:58] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 16:56:58] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 16:56:58] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 16:56:58] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 16:56:58] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 16:56:58] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 16:56:58] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 16:56:58] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 16:56:59] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:56:59] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:56:59] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 16:56:59] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:56:59] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-08 16:57:00] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:57:00] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T155700Z!1373299019-19445-4!http://localhost:8080/ldap/jcb98!jcb98!!pwd!11532!!2!a1SynbaLz212gFTnPYkr7Jqv0vdHRKyzAfrIn5M-Q8aF7Mfz9bf3c45uSYsZhQJ2BH4SyfD2OjsyqCzIs.ZCIUy8szwDmcg9YuNXuyqR.j2Gb7WeRtmxRLeG3.DD6pR75xTHIszIMcq.Ry6YMMkKIULUCVnkqRfOkvJhIbrW9lg_
[2013-07-08 16:57:00] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T155659Z, fail: 
[2013-07-08 16:57:00] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 16:57:00] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 16:57:00] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T155700Z Last: 1373299020692 Life: 11532 ID: 1373299019-19445-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:57:00] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 16:57:00] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 16:57:00] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T155659Z, fail: 
[2013-07-08 16:57:00] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T155700Z Last: 1373299020692 Life: 11532 ID: 1373299019-19445-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 16:57:00] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 16:57:00] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 17:15:59] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 17:15:59] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 17:15:59] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 17:15:59] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 17:15:59] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 17:15:59] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@3f78e13f
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@3f78e13f
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3f78e13f
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@58cbffde
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61697d14
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@762d80ae
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@225bcd91
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@225bcd91
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@225bcd91
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@3a8bd3bb
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@3a8bd3bb
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3a8bd3bb
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@62f04dae
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@62f04dae
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@62f04dae
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@6406f3ea
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@6406f3ea
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6406f3ea
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@50f8ae79
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@50f8ae79
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@50f8ae79
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@174da86b
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@174da86b
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@174da86b
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@52f9cbe5
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@52f9cbe5
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@52f9cbe5
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7051630a
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7051630a
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@448be1c9
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@448be1c9
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@10bfb545
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@10bfb545
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@145d424
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@256b352c
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@5e53bbfa
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5e53bbfa
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@54011d95
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@54011d95
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@5efcc13d
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5efcc13d
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4dc4e792
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4dc4e792
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4dc4e792
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e7c609
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@7be758ca
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7be758ca
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7be758ca
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7810a519
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@34a083f2
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@34a083f2
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@2e7857a5
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2e7857a5
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@68f51766
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@68f51766
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@6cb1cb25
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6cb1cb25
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@388eed76
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@388eed76
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@86ecec5
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4e0bd5df
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@591bfcbe
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@591bfcbe
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@591bfcbe
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5afc0f5
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5afc0f5
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5afc0f5
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@3b0e2558
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@6e9c2192
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6e9c2192
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@6e9c2192
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3bd85e85
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3bd85e85
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3bd85e85
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@3834a1c8
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@51bfa303
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@59e14a78
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59e14a78
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7418e252
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@e2f75e5
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@e2f75e5
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@1ae0e7d
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1ae0e7d
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70da8742
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@627b5c
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@2d6acad2
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@72d8978c
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@72d8978c
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2e5facbd
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@b45c414
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@114c02d4
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@154db52b
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@20b124fa
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4df2a9da
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@766d4f30
[2013-07-08 17:15:59] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@26a150e
[2013-07-08 17:15:59] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 17:15:59] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 17:15:59] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 17:15:59] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 17:15:59] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 17:15:59] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 17:15:59] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 17:15:59] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 17:15:59] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 17:15:59] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 17:15:59] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 17:15:59] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 17:15:59] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 17:15:59] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 17:15:59] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 17:15:59] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 17:15:59] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 17:15:59] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 17:15:59] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 17:15:59] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 17:15:59] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 17:15:59] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 17:15:59] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 17:15:59] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 17:15:59] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 17:15:59] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 17:15:59] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 17:15:59] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 17:15:59] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 17:15:59] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 17:15:59] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 17:15:59] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 17:15:59] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 17:15:59] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 17:15:59] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 17:15:59] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 17:15:59] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 17:15:59] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:15:59] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:15:59] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 17:15:59] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:15:59] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:15:59] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 17:15:59] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 17:15:59] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:15:59] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:15:59] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:15:59] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:15:59] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:15:59] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 17:15:59] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 17:15:59] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 17:15:59] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 17:15:59] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 17:15:59] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 17:15:59] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:15:59] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 17:15:59] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 17:15:59] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 17:15:59] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:15:59] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:15:59] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 17:15:59] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 17:15:59] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:15:59] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:15:59] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:15:59] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:15:59] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 17:15:59] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 17:15:59] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 17:15:59] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 17:15:59] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:15:59] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 17:15:59] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 17:15:59] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 17:15:59] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:15:59] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:15:59] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 17:15:59] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 17:15:59] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:15:59] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:15:59] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:15:59] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:15:59] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 17:15:59] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 17:15:59] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 17:15:59] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 17:15:59] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:15:59] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 17:15:59] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:15:59] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 17:15:59] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:15:59] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 17:15:59] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:15:59] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:15:59] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:15:59] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:15:59] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:15:59] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:15:59] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:15:59] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:15:59] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:15:59] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:15:59] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 17:15:59] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 17:15:59] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 17:15:59] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 17:15:59] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 17:15:59] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 17:15:59] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:15:59] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 17:15:59] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 17:15:59] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 17:15:59] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 17:15:59] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 17:15:59] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 17:15:59] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 17:15:59] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 17:15:59] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 17:15:59] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 17:15:59] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 17:15:59] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 17:15:59] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 17:15:59] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 17:15:59] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 17:15:59] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 17:15:59] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 17:15:59] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:15:59] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:15:59] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:15:59] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:15:59] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:15:59] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:15:59] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:15:59] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:15:59] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@53c059f6
[2013-07-08 17:15:59] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 5a66f875-259e-4664-b384-a9556d0e1f12 (<unnamed>)
[2013-07-08 17:15:59] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 17:15:59] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 17:15:59] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:15:59] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:15:59] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:15:59] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:15:59] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:15:59] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:15:59] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:15:59] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:15:59] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:15:59] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:15:59] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:15:59] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:15:59] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:15:59] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:15:59] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:15:59] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:15:59] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:15:59] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:15:59] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:15:59] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:15:59] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:15:59] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:15:59] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:15:59] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:15:59] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:15:59] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:15:59] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:15:59] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 17:15:59] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 17:15:59] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 17:15:59] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 17:15:59] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 17:15:59] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 17:15:59] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 17:15:59] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 17:15:59] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 17:15:59] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 17:15:59] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 17:15:59] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 17:15:59] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 17:15:59] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 17:15:59] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 17:15:59] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 17:15:59] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 17:15:59] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 17:15:59] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 17:15:59] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 17:15:59] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 17:15:59] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 17:15:59] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 17:15:59] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 17:15:59] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 17:16:03] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 17:16:03] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:16:03] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 17:16:03] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 17:16:03] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/
[2013-07-08 17:16:04] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 17:16:04] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T161604Z!1373300163-19979-14!http://localhost:8080/!jcb98!!pwd!10388!!2!gEPGgEmuFYqmsju5FOxrBnURsa1yBO1fPXdBv1H2wI.pP9fLL1jD035a2QCBmnX8ixd9lwEK8oiCfk.HiBvEqwfygUbZwoFUiDsLHmJZuNpXm9TlzBpO8WaUmF3KZdLB0Jj4bYLG8W8fhgMg5uwlGV5DZXJenB5ALVkVCIOc1LM_
[2013-07-08 17:16:04] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T161603Z, fail: 
[2013-07-08 17:16:04] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 17:16:04] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 17:16:04] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T161604Z Last: 1373300164969 Life: 10388 ID: 1373300163-19979-14 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:16:04] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 17:16:04] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:16:04] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T161603Z, fail: 
[2013-07-08 17:16:04] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T161604Z Last: 1373300164969 Life: 10388 ID: 1373300163-19979-14 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:16:04] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:16:04] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 17:16:05] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:16:05] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:16:05] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:16:05] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:16:05] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: aaa98, using strategy: org.hibernate.id.Assigned
[2013-07-08 17:16:05] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: bbb12, using strategy: org.hibernate.id.Assigned
[2013-07-08 17:16:05] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONSETS
[2013-07-08 17:16:05] [DEBUG] SQL:104 - select max(id) from QUESTIONSETS
[2013-07-08 17:16:05] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 17:16:05] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 17:16:05] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONS
[2013-07-08 17:16:05] [DEBUG] SQL:104 - select max(id) from QUESTIONS
[2013-07-08 17:16:05] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 17:16:05] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 17:16:05] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 2, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 17:16:05] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 3, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 17:16:05] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:16:05] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:16:05] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:16:05] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2013-07-08 17:16:05] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:16:05] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:16:05] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [power n k], that calculates k-th power of n., id=3, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:16:05] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=1, name=Foundations of Computer Science example sheet, owner=org.example.models.User#aaa98}
[2013-07-08 17:16:05] [DEBUG] EntityPrinter:121 - org.example.models.User{id=bbb12, name=Bob}
[2013-07-08 17:16:05] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:16:05] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [square n], that calculates square of n., id=1, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:16:05] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [factorial n], that calculates factorial of n., id=2, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:16:05] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 17:16:05] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 17:16:05] [DEBUG] SQL:104 - insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 17:16:05] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 17:16:05] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 17:16:05] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 17:16:05] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:16:05] [DEBUG] JdbcCoordinatorImpl:173 - HHH000420: Closing un-released batch
[2013-07-08 17:16:05] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:16:05] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:16:12] [DEBUG] RavenFilter:389 - RavenFilter running for: /user/
[2013-07-08 17:16:12] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:16:12] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T161603Z, fail: 
[2013-07-08 17:16:12] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T161604Z Last: 1373300164969 Life: 10388 ID: 1373300163-19979-14 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:16:12] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:16:12] [DEBUG] SynchronousDispatcher:60 - PathInfo: /user/
[2013-07-08 17:16:12] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:16:12] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:16:12] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:16:12] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:16:12] [DEBUG] QueryTranslatorImpl:265 - parse() - HQL: from org.example.models.User
[2013-07-08 17:16:12] [DEBUG] QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'org'
                |  |  \-[IDENT] Node: 'example'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'User'

[2013-07-08 17:16:12] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:16:12] [DEBUG] HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
[2013-07-08 17:16:12] [DEBUG] FromElement:157 - FromClause{level=1} : org.example.models.User (<no alias>) -> user0_
[2013-07-08 17:16:12] [DEBUG] HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
[2013-07-08 17:16:12] [DEBUG] HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} USERS user0_ ) )
[2013-07-08 17:16:12] [DEBUG] HqlSqlWalker:869 - Derived SELECT clause created.
[2013-07-08 17:16:12] [DEBUG] JoinProcessor:177 - Using FROM fragment [USERS user0_]
[2013-07-08 17:16:12] [DEBUG] HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
[2013-07-08 17:16:12] [DEBUG] QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (USERS)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.id as id1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=USERS,tableAlias=user0_,origin=null,columns={,className=org.example.models.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.name as name2_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'USERS user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=USERS,tableAlias=user0_,origin=null,columns={,className=org.example.models.User}}

[2013-07-08 17:16:12] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:16:12] [DEBUG] QueryTranslatorImpl:235 - HQL: from org.example.models.User
[2013-07-08 17:16:12] [DEBUG] QueryTranslatorImpl:236 - SQL: select user0_.id as id1_2_, user0_.name as name2_2_ from USERS user0_
[2013-07-08 17:16:12] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:16:12] [DEBUG] SQL:104 - select user0_.id as id1_2_, user0_.name as name2_2_ from USERS user0_
[2013-07-08 17:16:12] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:16:12] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#aaa98]
[2013-07-08 17:16:12] [DEBUG] Loader:941 - Result set row: 1
[2013-07-08 17:16:12] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#bbb12]
[2013-07-08 17:16:12] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#aaa98]
[2013-07-08 17:16:12] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#aaa98]
[2013-07-08 17:16:12] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#bbb12]
[2013-07-08 17:16:12] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#bbb12]
[2013-07-08 17:16:12] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:16:12] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:16:12] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:16:12] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2013-07-08 17:16:12] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:16:12] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:16:12] [DEBUG] EntityPrinter:121 - org.example.models.User{id=bbb12, name=Bob}
[2013-07-08 17:16:12] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:16:12] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:16:12] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:16:12] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:16:16] [DEBUG] RavenFilter:389 - RavenFilter running for: /user/aaa98
[2013-07-08 17:16:16] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:16:16] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T161603Z, fail: 
[2013-07-08 17:16:16] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T161604Z Last: 1373300164969 Life: 10388 ID: 1373300163-19979-14 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:16:16] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:16:16] [DEBUG] SynchronousDispatcher:60 - PathInfo: /user/aaa98
[2013-07-08 17:16:16] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:16:16] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:16:16] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:16:16] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:16:16] [DEBUG] QueryTranslatorImpl:265 - parse() - HQL: from org.example.models.User where id = ?
[2013-07-08 17:16:16] [DEBUG] QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[PARAM] Node: '?'

[2013-07-08 17:16:16] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:16:16] [DEBUG] HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
[2013-07-08 17:16:16] [DEBUG] FromElement:157 - FromClause{level=1} : org.example.models.User (<no alias>) -> user0_
[2013-07-08 17:16:16] [DEBUG] FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
[2013-07-08 17:16:16] [DEBUG] DotNode:599 - getDataType() : id -> org.hibernate.type.StringType@10bfb545
[2013-07-08 17:16:16] [DEBUG] FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> user0_.id
[2013-07-08 17:16:16] [WARN ] HqlSqlWalker:929 - [DEPRECATION] Encountered positional parameter near line 1, column 41.  Positional parameter are considered deprecated; use named parameters or JPA-style positional parameters instead.
[2013-07-08 17:16:16] [DEBUG] HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
[2013-07-08 17:16:16] [DEBUG] HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} USERS user0_ ) ( where ( = ( user0_.id {synthetic-alias} id ) ? ) ) )
[2013-07-08 17:16:16] [DEBUG] HqlSqlWalker:869 - Derived SELECT clause created.
[2013-07-08 17:16:16] [DEBUG] JoinProcessor:177 - Using FROM fragment [USERS user0_]
[2013-07-08 17:16:16] [DEBUG] HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
[2013-07-08 17:16:16] [DEBUG] QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (USERS)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.id as id1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=USERS,tableAlias=user0_,origin=null,columns={,className=org.example.models.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.name as name2_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'USERS user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=USERS,tableAlias=user0_,origin=null,columns={,className=org.example.models.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=user0_,className=org.example.models.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[PARAM] ParameterNode: '?' {ordinal=0, expectedType=org.hibernate.type.StringType@10bfb545}

[2013-07-08 17:16:16] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:16:16] [DEBUG] QueryTranslatorImpl:235 - HQL: from org.example.models.User where id = ?
[2013-07-08 17:16:16] [DEBUG] QueryTranslatorImpl:236 - SQL: select user0_.id as id1_2_, user0_.name as name2_2_ from USERS user0_ where user0_.id=?
[2013-07-08 17:16:16] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:16:16] [DEBUG] SQL:104 - select user0_.id as id1_2_, user0_.name as name2_2_ from USERS user0_ where user0_.id=?
[2013-07-08 17:16:16] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:16:16] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#aaa98]
[2013-07-08 17:16:16] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#aaa98]
[2013-07-08 17:16:16] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#aaa98]
[2013-07-08 17:16:16] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:16:16] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:16:16] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:16:16] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[2013-07-08 17:16:16] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:16:16] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:16:16] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:16:16] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:16:16] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:16:16] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:16:20] [DEBUG] RavenFilter:389 - RavenFilter running for: /user/aaa98/sets
[2013-07-08 17:16:20] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:16:20] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T161603Z, fail: 
[2013-07-08 17:16:20] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T161604Z Last: 1373300164969 Life: 10388 ID: 1373300163-19979-14 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:16:20] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:16:20] [DEBUG] SynchronousDispatcher:60 - PathInfo: /user/aaa98/sets
[2013-07-08 17:16:20] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:16:20] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:16:20] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:16:20] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:16:20] [DEBUG] SQL:104 - select user0_.id as id1_2_, user0_.name as name2_2_ from USERS user0_ where user0_.id=?
[2013-07-08 17:16:20] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:16:20] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#aaa98]
[2013-07-08 17:16:20] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#aaa98]
[2013-07-08 17:16:20] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#aaa98]
[2013-07-08 17:16:20] [DEBUG] QueryTranslatorImpl:265 - parse() - HQL: from org.example.models.QuestionSet where owner = ?
[2013-07-08 17:16:20] [DEBUG] QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'QuestionSet'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'owner'
          \-[PARAM] Node: '?'

[2013-07-08 17:16:20] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:16:20] [DEBUG] HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
[2013-07-08 17:16:20] [DEBUG] FromElement:157 - FromClause{level=1} : org.example.models.QuestionSet (<no alias>) -> questionse0_
[2013-07-08 17:16:20] [DEBUG] FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
[2013-07-08 17:16:20] [DEBUG] DotNode:599 - getDataType() : owner -> org.hibernate.type.ManyToOneType(org.example.models.User)
[2013-07-08 17:16:20] [DEBUG] DotNode:562 - dereferenceShortcut() : property owner in org.example.models.QuestionSet does not require a join.
[2013-07-08 17:16:20] [DEBUG] DotNode:588 - Terminal propertyPath = [owner]
[2013-07-08 17:16:20] [DEBUG] FromReferenceNode:74 - Resolved : {synthetic-alias}.owner -> questionse0_.owner_id
[2013-07-08 17:16:20] [WARN ] HqlSqlWalker:929 - [DEPRECATION] Encountered positional parameter near line 1, column 51.  Positional parameter are considered deprecated; use named parameters or JPA-style positional parameters instead.
[2013-07-08 17:16:20] [DEBUG] HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
[2013-07-08 17:16:20] [DEBUG] HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} QUESTIONSETS questionse0_ ) ( where ( = ( questionse0_.owner_id {synthetic-alias} owner ) ? ) ) )
[2013-07-08 17:16:20] [DEBUG] HqlSqlWalker:869 - Derived SELECT clause created.
[2013-07-08 17:16:20] [DEBUG] JoinProcessor:177 - Using FROM fragment [QUESTIONSETS questionse0_]
[2013-07-08 17:16:20] [DEBUG] HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
[2013-07-08 17:16:20] [DEBUG] QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (QUESTIONSETS)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'questionse0_.id as id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=QUESTIONSETS,tableAlias=questionse0_,origin=null,columns={,className=org.example.models.QuestionSet}}}
    |  \-[SQL_TOKEN] SqlFragment: 'questionse0_.name as name2_1_, questionse0_.owner_id as owner3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[questionse0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'QUESTIONSETS questionse0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=QUESTIONSETS,tableAlias=questionse0_,origin=null,columns={,className=org.example.models.QuestionSet}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'questionse0_.owner_id' {propertyName=owner,dereferenceType=0,propertyPath=owner,path={synthetic-alias}.owner,tableAlias=questionse0_,className=org.example.models.QuestionSet,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'owner' {originalText=owner}
          \-[PARAM] ParameterNode: '?' {ordinal=0, expectedType=org.hibernate.type.ManyToOneType(org.example.models.User)}

[2013-07-08 17:16:20] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:16:20] [DEBUG] QueryTranslatorImpl:235 - HQL: from org.example.models.QuestionSet where owner = ?
[2013-07-08 17:16:20] [DEBUG] QueryTranslatorImpl:236 - SQL: select questionse0_.id as id1_1_, questionse0_.name as name2_1_, questionse0_.owner_id as owner3_1_ from QUESTIONSETS questionse0_ where questionse0_.owner_id=?
[2013-07-08 17:16:20] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:16:20] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:16:20] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:16:20] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[2013-07-08 17:16:20] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:16:20] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:16:20] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:16:20] [DEBUG] SQL:104 - select questionse0_.id as id1_1_, questionse0_.name as name2_1_, questionse0_.owner_id as owner3_1_ from QUESTIONSETS questionse0_ where questionse0_.owner_id=?
[2013-07-08 17:16:20] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:16:20] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.QuestionSet#1]
[2013-07-08 17:16:20] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.QuestionSet#1]
[2013-07-08 17:16:20] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.QuestionSet#1]
[2013-07-08 17:16:20] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:16:20] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:16:20] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:16:20] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2013-07-08 17:16:20] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:16:20] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:16:20] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=1, name=Foundations of Computer Science example sheet, owner=org.example.models.User#aaa98}
[2013-07-08 17:16:20] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:16:20] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:16:20] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:16:20] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:16:24] [DEBUG] RavenFilter:389 - RavenFilter running for: /set/1
[2013-07-08 17:16:24] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:16:24] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T161603Z, fail: 
[2013-07-08 17:16:24] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T161604Z Last: 1373300164969 Life: 10388 ID: 1373300163-19979-14 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:16:24] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:16:24] [DEBUG] SynchronousDispatcher:60 - PathInfo: /set/1
[2013-07-08 17:16:24] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:16:24] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:16:24] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:16:24] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:16:24] [DEBUG] QueryTranslatorImpl:265 - parse() - HQL: from org.example.models.Question where parentSet = ?
[2013-07-08 17:16:24] [DEBUG] QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'Question'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'parentSet'
          \-[PARAM] Node: '?'

[2013-07-08 17:16:24] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:16:24] [DEBUG] HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
[2013-07-08 17:16:24] [DEBUG] FromElement:157 - FromClause{level=1} : org.example.models.Question (<no alias>) -> question0_
[2013-07-08 17:16:24] [DEBUG] FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
[2013-07-08 17:16:24] [DEBUG] DotNode:599 - getDataType() : parentSet -> org.hibernate.type.ManyToOneType(org.example.models.QuestionSet)
[2013-07-08 17:16:24] [DEBUG] DotNode:562 - dereferenceShortcut() : property parentSet in org.example.models.Question does not require a join.
[2013-07-08 17:16:24] [DEBUG] DotNode:588 - Terminal propertyPath = [parentSet]
[2013-07-08 17:16:24] [DEBUG] FromReferenceNode:74 - Resolved : {synthetic-alias}.parentSet -> question0_.parentSet_id
[2013-07-08 17:16:24] [WARN ] HqlSqlWalker:929 - [DEPRECATION] Encountered positional parameter near line 1, column 52.  Positional parameter are considered deprecated; use named parameters or JPA-style positional parameters instead.
[2013-07-08 17:16:24] [DEBUG] HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
[2013-07-08 17:16:24] [DEBUG] HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} QUESTIONS question0_ ) ( where ( = ( question0_.parentSet_id {synthetic-alias} parentSet ) ? ) ) )
[2013-07-08 17:16:24] [DEBUG] HqlSqlWalker:869 - Derived SELECT clause created.
[2013-07-08 17:16:24] [DEBUG] JoinProcessor:177 - Using FROM fragment [QUESTIONS question0_]
[2013-07-08 17:16:24] [DEBUG] HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
[2013-07-08 17:16:24] [DEBUG] QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (QUESTIONS)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'question0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=QUESTIONS,tableAlias=question0_,origin=null,columns={,className=org.example.models.Question}}}
    |  \-[SQL_TOKEN] SqlFragment: 'question0_.author_id as author3_0_, question0_.content as content2_0_, question0_.parentSet_id as parentSe4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[question0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'QUESTIONS question0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=QUESTIONS,tableAlias=question0_,origin=null,columns={,className=org.example.models.Question}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'question0_.parentSet_id' {propertyName=parentSet,dereferenceType=0,propertyPath=parentSet,path={synthetic-alias}.parentSet,tableAlias=question0_,className=org.example.models.Question,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'parentSet' {originalText=parentSet}
          \-[PARAM] ParameterNode: '?' {ordinal=0, expectedType=org.hibernate.type.ManyToOneType(org.example.models.QuestionSet)}

[2013-07-08 17:16:24] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:16:24] [DEBUG] QueryTranslatorImpl:235 - HQL: from org.example.models.Question where parentSet = ?
[2013-07-08 17:16:24] [DEBUG] QueryTranslatorImpl:236 - SQL: select question0_.id as id1_0_, question0_.author_id as author3_0_, question0_.content as content2_0_, question0_.parentSet_id as parentSe4_0_ from QUESTIONS question0_ where question0_.parentSet_id=?
[2013-07-08 17:16:24] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:16:24] [DEBUG] SQL:104 - select question0_.id as id1_0_, question0_.author_id as author3_0_, question0_.content as content2_0_, question0_.parentSet_id as parentSe4_0_ from QUESTIONS question0_ where question0_.parentSet_id=?
[2013-07-08 17:16:24] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:16:24] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.Question#1]
[2013-07-08 17:16:24] [DEBUG] Loader:941 - Result set row: 1
[2013-07-08 17:16:24] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.Question#2]
[2013-07-08 17:16:24] [DEBUG] Loader:941 - Result set row: 2
[2013-07-08 17:16:24] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.Question#3]
[2013-07-08 17:16:24] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.Question#1]
[2013-07-08 17:16:24] [DEBUG] Loader:2105 - Loading entity: [org.example.models.User#aaa98]
[2013-07-08 17:16:24] [DEBUG] SQL:104 - select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:16:24] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:16:24] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#aaa98]
[2013-07-08 17:16:24] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#aaa98]
[2013-07-08 17:16:24] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#aaa98]
[2013-07-08 17:16:24] [DEBUG] Loader:2129 - Done entity load
[2013-07-08 17:16:24] [DEBUG] Loader:2105 - Loading entity: [org.example.models.QuestionSet#1]
[2013-07-08 17:16:24] [DEBUG] SQL:104 - select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:16:24] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:16:24] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#aaa98], EntityKey[org.example.models.QuestionSet#1]
[2013-07-08 17:16:24] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.QuestionSet#1]
[2013-07-08 17:16:24] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.QuestionSet#1]
[2013-07-08 17:16:24] [DEBUG] Loader:2129 - Done entity load
[2013-07-08 17:16:24] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.Question#1]
[2013-07-08 17:16:24] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.Question#2]
[2013-07-08 17:16:24] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.Question#2]
[2013-07-08 17:16:24] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.Question#3]
[2013-07-08 17:16:24] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.Question#3]
[2013-07-08 17:16:24] [DEBUG] QueryTranslatorImpl:265 - parse() - HQL: from org.example.models.QuestionSet where id = ?
[2013-07-08 17:16:24] [DEBUG] QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'QuestionSet'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[PARAM] Node: '?'

[2013-07-08 17:16:24] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:16:24] [DEBUG] HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
[2013-07-08 17:16:24] [DEBUG] FromElement:157 - FromClause{level=1} : org.example.models.QuestionSet (<no alias>) -> questionse0_
[2013-07-08 17:16:24] [DEBUG] FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
[2013-07-08 17:16:24] [DEBUG] DotNode:599 - getDataType() : id -> org.hibernate.type.IntegerType@6406f3ea
[2013-07-08 17:16:24] [DEBUG] FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> questionse0_.id
[2013-07-08 17:16:24] [WARN ] HqlSqlWalker:929 - [DEPRECATION] Encountered positional parameter near line 1, column 48.  Positional parameter are considered deprecated; use named parameters or JPA-style positional parameters instead.
[2013-07-08 17:16:24] [DEBUG] HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
[2013-07-08 17:16:24] [DEBUG] HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} QUESTIONSETS questionse0_ ) ( where ( = ( questionse0_.id {synthetic-alias} id ) ? ) ) )
[2013-07-08 17:16:24] [DEBUG] HqlSqlWalker:869 - Derived SELECT clause created.
[2013-07-08 17:16:24] [DEBUG] JoinProcessor:177 - Using FROM fragment [QUESTIONSETS questionse0_]
[2013-07-08 17:16:24] [DEBUG] HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
[2013-07-08 17:16:24] [DEBUG] QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (QUESTIONSETS)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'questionse0_.id as id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=QUESTIONSETS,tableAlias=questionse0_,origin=null,columns={,className=org.example.models.QuestionSet}}}
    |  \-[SQL_TOKEN] SqlFragment: 'questionse0_.name as name2_1_, questionse0_.owner_id as owner3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[questionse0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'QUESTIONSETS questionse0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=QUESTIONSETS,tableAlias=questionse0_,origin=null,columns={,className=org.example.models.QuestionSet}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'questionse0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=questionse0_,className=org.example.models.QuestionSet,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[PARAM] ParameterNode: '?' {ordinal=0, expectedType=org.hibernate.type.IntegerType@6406f3ea}

[2013-07-08 17:16:24] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:16:24] [DEBUG] QueryTranslatorImpl:235 - HQL: from org.example.models.QuestionSet where id = ?
[2013-07-08 17:16:24] [DEBUG] QueryTranslatorImpl:236 - SQL: select questionse0_.id as id1_1_, questionse0_.name as name2_1_, questionse0_.owner_id as owner3_1_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:16:24] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:16:24] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:16:24] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:16:24] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2013-07-08 17:16:24] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:16:24] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:16:24] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [power n k], that calculates k-th power of n., id=3, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:16:24] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=1, name=Foundations of Computer Science example sheet, owner=org.example.models.User#aaa98}
[2013-07-08 17:16:24] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:16:24] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [square n], that calculates square of n., id=1, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:16:24] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [factorial n], that calculates factorial of n., id=2, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:16:24] [DEBUG] SQL:104 - select questionse0_.id as id1_1_, questionse0_.name as name2_1_, questionse0_.owner_id as owner3_1_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:16:24] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:16:24] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.QuestionSet#1]
[2013-07-08 17:16:24] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:16:24] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:16:24] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:16:24] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2013-07-08 17:16:24] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:16:24] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:16:24] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [power n k], that calculates k-th power of n., id=3, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:16:24] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=1, name=Foundations of Computer Science example sheet, owner=org.example.models.User#aaa98}
[2013-07-08 17:16:24] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:16:24] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [square n], that calculates square of n., id=1, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:16:24] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [factorial n], that calculates factorial of n., id=2, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:16:24] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:16:24] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:16:24] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:16:29] [DEBUG] RavenFilter:389 - RavenFilter running for: /user/aaa98
[2013-07-08 17:16:29] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:16:29] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T161603Z, fail: 
[2013-07-08 17:16:29] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T161604Z Last: 1373300164969 Life: 10388 ID: 1373300163-19979-14 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:16:29] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:16:29] [DEBUG] SynchronousDispatcher:60 - PathInfo: /user/aaa98
[2013-07-08 17:16:29] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:16:29] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:16:29] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:16:29] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:16:29] [DEBUG] SQL:104 - select user0_.id as id1_2_, user0_.name as name2_2_ from USERS user0_ where user0_.id=?
[2013-07-08 17:16:29] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:16:29] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#aaa98]
[2013-07-08 17:16:29] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#aaa98]
[2013-07-08 17:16:29] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#aaa98]
[2013-07-08 17:16:29] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:16:29] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:16:29] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:16:29] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[2013-07-08 17:16:29] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:16:29] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:16:29] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:16:29] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:16:29] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:16:29] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:16:30] [DEBUG] RavenFilter:389 - RavenFilter running for: /user/aaa98/questions
[2013-07-08 17:16:30] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:16:30] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T161603Z, fail: 
[2013-07-08 17:16:30] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T161604Z Last: 1373300164969 Life: 10388 ID: 1373300163-19979-14 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:16:30] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:16:30] [DEBUG] SynchronousDispatcher:60 - PathInfo: /user/aaa98/questions
[2013-07-08 17:16:30] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:16:30] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:16:30] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:16:30] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:16:30] [DEBUG] QueryTranslatorImpl:265 - parse() - HQL: from org.example.models.Question where author = ?
[2013-07-08 17:16:30] [DEBUG] QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'Question'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'author'
          \-[PARAM] Node: '?'

[2013-07-08 17:16:30] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:16:30] [DEBUG] HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
[2013-07-08 17:16:30] [DEBUG] FromElement:157 - FromClause{level=1} : org.example.models.Question (<no alias>) -> question0_
[2013-07-08 17:16:30] [DEBUG] FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
[2013-07-08 17:16:30] [DEBUG] DotNode:599 - getDataType() : author -> org.hibernate.type.ManyToOneType(org.example.models.User)
[2013-07-08 17:16:30] [DEBUG] DotNode:562 - dereferenceShortcut() : property author in org.example.models.Question does not require a join.
[2013-07-08 17:16:30] [DEBUG] DotNode:588 - Terminal propertyPath = [author]
[2013-07-08 17:16:30] [DEBUG] FromReferenceNode:74 - Resolved : {synthetic-alias}.author -> question0_.author_id
[2013-07-08 17:16:30] [WARN ] HqlSqlWalker:929 - [DEPRECATION] Encountered positional parameter near line 1, column 49.  Positional parameter are considered deprecated; use named parameters or JPA-style positional parameters instead.
[2013-07-08 17:16:30] [DEBUG] HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
[2013-07-08 17:16:30] [DEBUG] HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} QUESTIONS question0_ ) ( where ( = ( question0_.author_id {synthetic-alias} author ) ? ) ) )
[2013-07-08 17:16:30] [DEBUG] HqlSqlWalker:869 - Derived SELECT clause created.
[2013-07-08 17:16:30] [DEBUG] JoinProcessor:177 - Using FROM fragment [QUESTIONS question0_]
[2013-07-08 17:16:30] [DEBUG] HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
[2013-07-08 17:16:30] [DEBUG] QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (QUESTIONS)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'question0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=QUESTIONS,tableAlias=question0_,origin=null,columns={,className=org.example.models.Question}}}
    |  \-[SQL_TOKEN] SqlFragment: 'question0_.author_id as author3_0_, question0_.content as content2_0_, question0_.parentSet_id as parentSe4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[question0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'QUESTIONS question0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=QUESTIONS,tableAlias=question0_,origin=null,columns={,className=org.example.models.Question}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'question0_.author_id' {propertyName=author,dereferenceType=0,propertyPath=author,path={synthetic-alias}.author,tableAlias=question0_,className=org.example.models.Question,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'author' {originalText=author}
          \-[PARAM] ParameterNode: '?' {ordinal=0, expectedType=org.hibernate.type.ManyToOneType(org.example.models.User)}

[2013-07-08 17:16:30] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:16:30] [DEBUG] QueryTranslatorImpl:235 - HQL: from org.example.models.Question where author = ?
[2013-07-08 17:16:30] [DEBUG] QueryTranslatorImpl:236 - SQL: select question0_.id as id1_0_, question0_.author_id as author3_0_, question0_.content as content2_0_, question0_.parentSet_id as parentSe4_0_ from QUESTIONS question0_ where question0_.author_id=?
[2013-07-08 17:16:30] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:16:30] [DEBUG] SQL:104 - select question0_.id as id1_0_, question0_.author_id as author3_0_, question0_.content as content2_0_, question0_.parentSet_id as parentSe4_0_ from QUESTIONS question0_ where question0_.author_id=?
[2013-07-08 17:16:30] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:16:30] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.Question#1]
[2013-07-08 17:16:30] [DEBUG] Loader:941 - Result set row: 1
[2013-07-08 17:16:30] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.Question#2]
[2013-07-08 17:16:30] [DEBUG] Loader:941 - Result set row: 2
[2013-07-08 17:16:30] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.Question#3]
[2013-07-08 17:16:30] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.Question#1]
[2013-07-08 17:16:30] [DEBUG] Loader:2105 - Loading entity: [org.example.models.User#aaa98]
[2013-07-08 17:16:30] [DEBUG] SQL:104 - select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:16:30] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:16:30] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#aaa98]
[2013-07-08 17:16:30] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#aaa98]
[2013-07-08 17:16:30] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#aaa98]
[2013-07-08 17:16:30] [DEBUG] Loader:2129 - Done entity load
[2013-07-08 17:16:30] [DEBUG] Loader:2105 - Loading entity: [org.example.models.QuestionSet#1]
[2013-07-08 17:16:30] [DEBUG] SQL:104 - select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:16:30] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:16:30] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#aaa98], EntityKey[org.example.models.QuestionSet#1]
[2013-07-08 17:16:30] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.QuestionSet#1]
[2013-07-08 17:16:30] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.QuestionSet#1]
[2013-07-08 17:16:30] [DEBUG] Loader:2129 - Done entity load
[2013-07-08 17:16:30] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.Question#1]
[2013-07-08 17:16:30] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.Question#2]
[2013-07-08 17:16:30] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.Question#2]
[2013-07-08 17:16:30] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.Question#3]
[2013-07-08 17:16:30] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.Question#3]
[2013-07-08 17:16:30] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:16:30] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:16:30] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2013-07-08 17:16:30] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:16:30] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:16:30] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [power n k], that calculates k-th power of n., id=3, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:16:30] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=1, name=Foundations of Computer Science example sheet, owner=org.example.models.User#aaa98}
[2013-07-08 17:16:30] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:16:30] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [square n], that calculates square of n., id=1, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:16:30] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [factorial n], that calculates factorial of n., id=2, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:16:30] [DEBUG] SQL:104 - select user0_.id as id1_2_, user0_.name as name2_2_ from USERS user0_ where user0_.id=?
[2013-07-08 17:16:30] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:16:30] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#aaa98]
[2013-07-08 17:16:30] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:16:30] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:16:30] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:16:30] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2013-07-08 17:16:30] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:16:30] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:16:30] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [power n k], that calculates k-th power of n., id=3, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:16:30] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=1, name=Foundations of Computer Science example sheet, owner=org.example.models.User#aaa98}
[2013-07-08 17:16:30] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:16:30] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [square n], that calculates square of n., id=1, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:16:30] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [factorial n], that calculates factorial of n., id=2, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:16:30] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:16:30] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:16:30] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:17:13] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 17:17:13] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:17:13] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T161603Z, fail: 
[2013-07-08 17:17:13] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T161604Z Last: 1373300164969 Life: 10388 ID: 1373300163-19979-14 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:17:13] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:17:13] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 17:17:15] [DEBUG] RavenFilter:389 - RavenFilter running for: /user/
[2013-07-08 17:17:15] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:17:15] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T161603Z, fail: 
[2013-07-08 17:17:15] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T161604Z Last: 1373300164969 Life: 10388 ID: 1373300163-19979-14 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:17:15] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:17:15] [DEBUG] SynchronousDispatcher:60 - PathInfo: /user/
[2013-07-08 17:17:15] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:17:15] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:17:15] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:17:15] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:17:15] [DEBUG] SQL:104 - select user0_.id as id1_2_, user0_.name as name2_2_ from USERS user0_
[2013-07-08 17:17:15] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:17:15] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#aaa98]
[2013-07-08 17:17:15] [DEBUG] Loader:941 - Result set row: 1
[2013-07-08 17:17:15] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#bbb12]
[2013-07-08 17:17:15] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#aaa98]
[2013-07-08 17:17:15] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#aaa98]
[2013-07-08 17:17:15] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#bbb12]
[2013-07-08 17:17:15] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#bbb12]
[2013-07-08 17:17:15] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:17:15] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:17:15] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:17:15] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2013-07-08 17:17:15] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:17:15] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:17:15] [DEBUG] EntityPrinter:121 - org.example.models.User{id=bbb12, name=Bob}
[2013-07-08 17:17:15] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:17:15] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:17:15] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:17:15] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:17:17] [DEBUG] RavenFilter:389 - RavenFilter running for: /user/aaa98
[2013-07-08 17:17:17] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:17:17] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T161603Z, fail: 
[2013-07-08 17:17:17] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T161604Z Last: 1373300164969 Life: 10388 ID: 1373300163-19979-14 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:17:17] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:17:17] [DEBUG] SynchronousDispatcher:60 - PathInfo: /user/aaa98
[2013-07-08 17:17:17] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:17:17] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:17:17] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:17:17] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:17:17] [DEBUG] SQL:104 - select user0_.id as id1_2_, user0_.name as name2_2_ from USERS user0_ where user0_.id=?
[2013-07-08 17:17:17] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:17:17] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#aaa98]
[2013-07-08 17:17:17] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#aaa98]
[2013-07-08 17:17:17] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#aaa98]
[2013-07-08 17:17:17] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:17:17] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:17:17] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:17:17] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[2013-07-08 17:17:17] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:17:17] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:17:17] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:17:17] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:17:17] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:17:17] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:17:19] [DEBUG] RavenFilter:389 - RavenFilter running for: /user/aaa98/sets
[2013-07-08 17:17:19] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:17:19] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T161603Z, fail: 
[2013-07-08 17:17:19] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T161604Z Last: 1373300164969 Life: 10388 ID: 1373300163-19979-14 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:17:19] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:17:19] [DEBUG] SynchronousDispatcher:60 - PathInfo: /user/aaa98/sets
[2013-07-08 17:17:19] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:17:19] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:17:19] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:17:19] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:17:19] [DEBUG] SQL:104 - select user0_.id as id1_2_, user0_.name as name2_2_ from USERS user0_ where user0_.id=?
[2013-07-08 17:17:19] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:17:19] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#aaa98]
[2013-07-08 17:17:19] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#aaa98]
[2013-07-08 17:17:19] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#aaa98]
[2013-07-08 17:17:19] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:17:19] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:17:19] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[2013-07-08 17:17:19] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:17:19] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:17:19] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:17:19] [DEBUG] SQL:104 - select questionse0_.id as id1_1_, questionse0_.name as name2_1_, questionse0_.owner_id as owner3_1_ from QUESTIONSETS questionse0_ where questionse0_.owner_id=?
[2013-07-08 17:17:19] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:17:19] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.QuestionSet#1]
[2013-07-08 17:17:19] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.QuestionSet#1]
[2013-07-08 17:17:19] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.QuestionSet#1]
[2013-07-08 17:17:19] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:17:19] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:17:19] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:17:19] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2013-07-08 17:17:19] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:17:19] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:17:19] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=1, name=Foundations of Computer Science example sheet, owner=org.example.models.User#aaa98}
[2013-07-08 17:17:19] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:17:19] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:17:19] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:17:19] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:17:21] [DEBUG] RavenFilter:389 - RavenFilter running for: /set/add/aaa98
[2013-07-08 17:17:21] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:17:21] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T161603Z, fail: 
[2013-07-08 17:17:21] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T161604Z Last: 1373300164969 Life: 10388 ID: 1373300163-19979-14 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:17:21] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:17:21] [DEBUG] SynchronousDispatcher:60 - PathInfo: /set/add/aaa98
[2013-07-08 17:17:33] [DEBUG] RavenFilter:389 - RavenFilter running for: /set/add/aaa98
[2013-07-08 17:17:33] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:17:33] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T161603Z, fail: 
[2013-07-08 17:17:33] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T161604Z Last: 1373300164969 Life: 10388 ID: 1373300163-19979-14 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:17:33] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:17:33] [DEBUG] SynchronousDispatcher:60 - PathInfo: /set/add/aaa98
[2013-07-08 17:17:36] [DEBUG] RavenFilter:389 - RavenFilter running for: /user/aaa98
[2013-07-08 17:17:36] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:17:36] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T161603Z, fail: 
[2013-07-08 17:17:36] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T161604Z Last: 1373300164969 Life: 10388 ID: 1373300163-19979-14 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:17:36] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:17:36] [DEBUG] SynchronousDispatcher:60 - PathInfo: /user/aaa98
[2013-07-08 17:17:36] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:17:36] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:17:36] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:17:36] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:17:36] [DEBUG] SQL:104 - select user0_.id as id1_2_, user0_.name as name2_2_ from USERS user0_ where user0_.id=?
[2013-07-08 17:17:36] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:17:36] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#aaa98]
[2013-07-08 17:17:36] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#aaa98]
[2013-07-08 17:17:36] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#aaa98]
[2013-07-08 17:17:36] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:17:36] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:17:36] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:17:36] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[2013-07-08 17:17:36] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:17:36] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:17:36] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:17:36] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:17:36] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:17:36] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:17:38] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 17:17:38] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:17:38] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T161603Z, fail: 
[2013-07-08 17:17:38] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T161604Z Last: 1373300164969 Life: 10388 ID: 1373300163-19979-14 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:17:38] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:17:38] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 17:17:40] [DEBUG] RavenFilter:389 - RavenFilter running for: /user/
[2013-07-08 17:17:40] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:17:40] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T161603Z, fail: 
[2013-07-08 17:17:40] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T161604Z Last: 1373300164969 Life: 10388 ID: 1373300163-19979-14 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:17:40] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:17:40] [DEBUG] SynchronousDispatcher:60 - PathInfo: /user/
[2013-07-08 17:17:40] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:17:40] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:17:40] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:17:40] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:17:40] [DEBUG] SQL:104 - select user0_.id as id1_2_, user0_.name as name2_2_ from USERS user0_
[2013-07-08 17:17:40] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:17:40] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#aaa98]
[2013-07-08 17:17:40] [DEBUG] Loader:941 - Result set row: 1
[2013-07-08 17:17:40] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#bbb12]
[2013-07-08 17:17:40] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#aaa98]
[2013-07-08 17:17:40] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#aaa98]
[2013-07-08 17:17:40] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#bbb12]
[2013-07-08 17:17:40] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#bbb12]
[2013-07-08 17:17:40] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:17:40] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:17:40] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:17:40] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2013-07-08 17:17:40] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:17:40] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:17:40] [DEBUG] EntityPrinter:121 - org.example.models.User{id=bbb12, name=Bob}
[2013-07-08 17:17:40] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:17:40] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:17:40] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:17:40] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:17:41] [DEBUG] RavenFilter:389 - RavenFilter running for: /user/bbb12
[2013-07-08 17:17:41] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:17:41] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T161603Z, fail: 
[2013-07-08 17:17:41] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T161604Z Last: 1373300164969 Life: 10388 ID: 1373300163-19979-14 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:17:41] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:17:41] [DEBUG] SynchronousDispatcher:60 - PathInfo: /user/bbb12
[2013-07-08 17:17:41] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:17:41] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:17:41] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:17:41] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:17:41] [DEBUG] SQL:104 - select user0_.id as id1_2_, user0_.name as name2_2_ from USERS user0_ where user0_.id=?
[2013-07-08 17:17:41] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:17:41] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#bbb12]
[2013-07-08 17:17:41] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#bbb12]
[2013-07-08 17:17:41] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#bbb12]
[2013-07-08 17:17:41] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:17:41] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:17:41] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:17:41] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[2013-07-08 17:17:41] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:17:41] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:17:41] [DEBUG] EntityPrinter:121 - org.example.models.User{id=bbb12, name=Bob}
[2013-07-08 17:17:41] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:17:41] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:17:41] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:17:45] [DEBUG] RavenFilter:389 - RavenFilter running for: /user/bbb12/sets
[2013-07-08 17:17:45] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:17:45] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T161603Z, fail: 
[2013-07-08 17:17:45] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T161604Z Last: 1373300164969 Life: 10388 ID: 1373300163-19979-14 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:17:45] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:17:45] [DEBUG] SynchronousDispatcher:60 - PathInfo: /user/bbb12/sets
[2013-07-08 17:17:45] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:17:45] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:17:45] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:17:45] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:17:45] [DEBUG] SQL:104 - select user0_.id as id1_2_, user0_.name as name2_2_ from USERS user0_ where user0_.id=?
[2013-07-08 17:17:45] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:17:45] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#bbb12]
[2013-07-08 17:17:45] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#bbb12]
[2013-07-08 17:17:45] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#bbb12]
[2013-07-08 17:17:45] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:17:45] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:17:45] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[2013-07-08 17:17:45] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:17:45] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:17:45] [DEBUG] EntityPrinter:121 - org.example.models.User{id=bbb12, name=Bob}
[2013-07-08 17:17:45] [DEBUG] SQL:104 - select questionse0_.id as id1_1_, questionse0_.name as name2_1_, questionse0_.owner_id as owner3_1_ from QUESTIONSETS questionse0_ where questionse0_.owner_id=?
[2013-07-08 17:17:45] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:17:45] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:17:45] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:17:45] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[2013-07-08 17:17:45] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:17:45] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:17:45] [DEBUG] EntityPrinter:121 - org.example.models.User{id=bbb12, name=Bob}
[2013-07-08 17:17:45] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:17:45] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:17:45] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:17:46] [DEBUG] RavenFilter:389 - RavenFilter running for: /set/add/bbb12
[2013-07-08 17:17:46] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:17:46] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T161603Z, fail: 
[2013-07-08 17:17:46] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T161604Z Last: 1373300164969 Life: 10388 ID: 1373300163-19979-14 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:17:46] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:17:46] [DEBUG] SynchronousDispatcher:60 - PathInfo: /set/add/bbb12
[2013-07-08 17:22:45] [DEBUG] RavenFilter:389 - RavenFilter running for: /set/add/bbb12
[2013-07-08 17:22:45] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:22:45] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T161603Z, fail: 
[2013-07-08 17:22:45] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T161604Z Last: 1373300164969 Life: 10388 ID: 1373300163-19979-14 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:22:45] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:22:45] [DEBUG] SynchronousDispatcher:60 - PathInfo: /set/add/bbb12
[2013-07-08 17:24:19] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 17:24:19] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 17:24:19] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 17:24:19] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 17:24:19] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 17:24:19] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@3914fc36
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@3914fc36
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3914fc36
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@31f9b804
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@12e29f36
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@190a0d51
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@477baf4
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@477baf4
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@477baf4
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@62e59e40
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@62e59e40
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@62e59e40
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@a211b37
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@a211b37
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@a211b37
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@7051630a
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@7051630a
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7051630a
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@fe14de0
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@fe14de0
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@fe14de0
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@f6a8823
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@f6a8823
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@f6a8823
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@3bad0d89
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@3bad0d89
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3bad0d89
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@57004a1a
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@57004a1a
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6b5b5783
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6b5b5783
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@5efcc13d
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@5efcc13d
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2075a744
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3a3f4a21
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@6f0e0eb5
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6f0e0eb5
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@7810a519
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7810a519
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@5c392fe8
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5c392fe8
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@32d35f5f
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@32d35f5f
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@32d35f5f
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@c65fb1
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@388eed76
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@388eed76
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@388eed76
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@86ecec5
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@4e0bd5df
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4e0bd5df
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@591bfcbe
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@591bfcbe
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5afc0f5
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5afc0f5
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@3b0e2558
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3b0e2558
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3bd85e85
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3bd85e85
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@37285252
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1ac84361
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@5f99ea3c
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5f99ea3c
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@5f99ea3c
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2bf87baf
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2bf87baf
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2bf87baf
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@640ce0bb
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@72e5c94
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@72e5c94
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@72e5c94
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6fb8fcdd
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6fb8fcdd
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6fb8fcdd
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@7418e252
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@17e319a
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@50baa573
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@50baa573
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51f2412a
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@3e29b849
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e29b849
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@20b124fa
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@20b124fa
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@766d4f30
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@28c4b5f
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@6e659812
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@699dd97b
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@699dd97b
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3b961a84
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7ba6eeab
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@c7f5bf9
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7d6f3ed7
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1286d597
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5230b601
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7bfd25ce
[2013-07-08 17:24:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@28bd36fa
[2013-07-08 17:24:19] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 17:24:19] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 17:24:19] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 17:24:19] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 17:24:19] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 17:24:19] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 17:24:19] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 17:24:19] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 17:24:19] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 17:24:19] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 17:24:19] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 17:24:19] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 17:24:19] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 17:24:19] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 17:24:19] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 17:24:19] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 17:24:19] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 17:24:19] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 17:24:19] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 17:24:19] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 17:24:19] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 17:24:19] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 17:24:19] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 17:24:19] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 17:24:19] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 17:24:19] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 17:24:19] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 17:24:19] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 17:24:19] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 17:24:19] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 17:24:19] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 17:24:19] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 17:24:19] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 17:24:19] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 17:24:19] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 17:24:19] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 17:24:19] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 17:24:19] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:24:19] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:24:19] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 17:24:19] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:24:19] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:24:19] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 17:24:19] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 17:24:19] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:24:19] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:24:19] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:24:19] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:24:19] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:24:19] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 17:24:19] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 17:24:19] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 17:24:19] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 17:24:19] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 17:24:19] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 17:24:19] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:24:19] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 17:24:19] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 17:24:19] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 17:24:19] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:24:19] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:24:19] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 17:24:19] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 17:24:19] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:24:19] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:24:19] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:24:19] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:24:19] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 17:24:19] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 17:24:19] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 17:24:19] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 17:24:19] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:24:19] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 17:24:19] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 17:24:19] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 17:24:19] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:24:19] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:24:19] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 17:24:19] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 17:24:19] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:24:19] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:24:19] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:24:19] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:24:19] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 17:24:19] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 17:24:19] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 17:24:19] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 17:24:19] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:24:19] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 17:24:19] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:24:19] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 17:24:19] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:24:19] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 17:24:19] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:24:19] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:24:19] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:24:19] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:24:19] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:24:19] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:24:19] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:24:19] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:24:19] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:24:19] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:24:19] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 17:24:19] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 17:24:19] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 17:24:19] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 17:24:19] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 17:24:19] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 17:24:19] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:24:19] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 17:24:19] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 17:24:19] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 17:24:19] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 17:24:19] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 17:24:19] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 17:24:19] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 17:24:19] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 17:24:19] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 17:24:19] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 17:24:19] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 17:24:19] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 17:24:19] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 17:24:19] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 17:24:19] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 17:24:19] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 17:24:19] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 17:24:19] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:24:19] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:24:19] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:24:19] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:24:19] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:24:19] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:24:19] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:24:19] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:24:19] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@70d1c9b5
[2013-07-08 17:24:19] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 811f1c58-d58b-4a60-b92d-279715cedd78 (<unnamed>)
[2013-07-08 17:24:19] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 17:24:19] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 17:24:19] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:24:19] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:24:19] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:24:19] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:24:19] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:24:19] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:24:19] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:24:19] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:24:19] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:24:19] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:24:19] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:24:19] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:24:19] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:24:19] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:24:19] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:24:19] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:24:19] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:24:19] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:24:19] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:24:19] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:24:19] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:24:19] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:24:19] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:24:19] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:24:19] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:24:19] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:24:19] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:24:19] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 17:24:19] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 17:24:19] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 17:24:19] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 17:24:19] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 17:24:19] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 17:24:19] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 17:24:19] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 17:24:19] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 17:24:19] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 17:24:19] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 17:24:19] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 17:24:19] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 17:24:19] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 17:24:19] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 17:24:19] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 17:24:19] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 17:24:19] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 17:24:19] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 17:24:19] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 17:24:19] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 17:24:19] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 17:24:19] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 17:24:19] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 17:24:19] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 17:24:20] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 17:24:20] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:24:20] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:24:20] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:24:20] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:24:20] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: aaa98, using strategy: org.hibernate.id.Assigned
[2013-07-08 17:24:20] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: bbb12, using strategy: org.hibernate.id.Assigned
[2013-07-08 17:24:20] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONSETS
[2013-07-08 17:24:20] [DEBUG] SQL:104 - select max(id) from QUESTIONSETS
[2013-07-08 17:24:20] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 17:24:20] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 17:24:20] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONS
[2013-07-08 17:24:20] [DEBUG] SQL:104 - select max(id) from QUESTIONS
[2013-07-08 17:24:20] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 17:24:20] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 17:24:20] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 2, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 17:24:20] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 3, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 17:24:20] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:24:20] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:24:20] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:24:20] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2013-07-08 17:24:20] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:24:20] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:24:20] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [power n k], that calculates k-th power of n., id=3, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:24:20] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=1, name=Foundations of Computer Science example sheet, owner=org.example.models.User#aaa98}
[2013-07-08 17:24:20] [DEBUG] EntityPrinter:121 - org.example.models.User{id=bbb12, name=Bob}
[2013-07-08 17:24:20] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:24:20] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [square n], that calculates square of n., id=1, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:24:20] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [factorial n], that calculates factorial of n., id=2, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:24:20] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 17:24:20] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 17:24:20] [DEBUG] SQL:104 - insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 17:24:20] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 17:24:20] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 17:24:20] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 17:24:20] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:24:20] [DEBUG] JdbcCoordinatorImpl:173 - HHH000420: Closing un-released batch
[2013-07-08 17:24:20] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:24:20] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:24:24] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 17:24:26] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 17:24:27] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 17:24:27] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 17:24:28] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 17:24:51] [DEBUG] SynchronousDispatcher:60 - PathInfo: /set/add/bbb12
[2013-07-08 17:24:55] [DEBUG] SynchronousDispatcher:60 - PathInfo: /set/add/bbb12
[2013-07-08 17:25:00] [DEBUG] SynchronousDispatcher:60 - PathInfo: /bbb12
[2013-07-08 17:25:04] [DEBUG] SynchronousDispatcher:60 - PathInfo: /user/bbb12
[2013-07-08 17:25:04] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:25:04] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:25:04] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:25:04] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:25:04] [DEBUG] QueryTranslatorImpl:265 - parse() - HQL: from org.example.models.User where id = ?
[2013-07-08 17:25:04] [DEBUG] QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[PARAM] Node: '?'

[2013-07-08 17:25:04] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:25:04] [DEBUG] HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
[2013-07-08 17:25:04] [DEBUG] FromElement:157 - FromClause{level=1} : org.example.models.User (<no alias>) -> user0_
[2013-07-08 17:25:04] [DEBUG] FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
[2013-07-08 17:25:04] [DEBUG] DotNode:599 - getDataType() : id -> org.hibernate.type.StringType@5efcc13d
[2013-07-08 17:25:04] [DEBUG] FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> user0_.id
[2013-07-08 17:25:04] [WARN ] HqlSqlWalker:929 - [DEPRECATION] Encountered positional parameter near line 1, column 41.  Positional parameter are considered deprecated; use named parameters or JPA-style positional parameters instead.
[2013-07-08 17:25:04] [DEBUG] HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
[2013-07-08 17:25:04] [DEBUG] HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} USERS user0_ ) ( where ( = ( user0_.id {synthetic-alias} id ) ? ) ) )
[2013-07-08 17:25:04] [DEBUG] HqlSqlWalker:869 - Derived SELECT clause created.
[2013-07-08 17:25:04] [DEBUG] JoinProcessor:177 - Using FROM fragment [USERS user0_]
[2013-07-08 17:25:04] [DEBUG] HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
[2013-07-08 17:25:04] [DEBUG] QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (USERS)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.id as id1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=USERS,tableAlias=user0_,origin=null,columns={,className=org.example.models.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.name as name2_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'USERS user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=USERS,tableAlias=user0_,origin=null,columns={,className=org.example.models.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=user0_,className=org.example.models.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[PARAM] ParameterNode: '?' {ordinal=0, expectedType=org.hibernate.type.StringType@5efcc13d}

[2013-07-08 17:25:04] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:25:04] [DEBUG] QueryTranslatorImpl:235 - HQL: from org.example.models.User where id = ?
[2013-07-08 17:25:04] [DEBUG] QueryTranslatorImpl:236 - SQL: select user0_.id as id1_2_, user0_.name as name2_2_ from USERS user0_ where user0_.id=?
[2013-07-08 17:25:04] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:25:04] [DEBUG] SQL:104 - select user0_.id as id1_2_, user0_.name as name2_2_ from USERS user0_ where user0_.id=?
[2013-07-08 17:25:04] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:25:04] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#bbb12]
[2013-07-08 17:25:04] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#bbb12]
[2013-07-08 17:25:04] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#bbb12]
[2013-07-08 17:25:04] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:25:04] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:25:04] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:25:04] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[2013-07-08 17:25:04] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:25:04] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:25:04] [DEBUG] EntityPrinter:121 - org.example.models.User{id=bbb12, name=Bob}
[2013-07-08 17:25:04] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:25:04] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:25:04] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:25:08] [DEBUG] SynchronousDispatcher:60 - PathInfo: /user/bbb12/sets
[2013-07-08 17:25:08] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:25:08] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:25:08] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:25:08] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:25:08] [DEBUG] SQL:104 - select user0_.id as id1_2_, user0_.name as name2_2_ from USERS user0_ where user0_.id=?
[2013-07-08 17:25:08] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:25:08] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#bbb12]
[2013-07-08 17:25:08] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#bbb12]
[2013-07-08 17:25:08] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#bbb12]
[2013-07-08 17:25:08] [DEBUG] QueryTranslatorImpl:265 - parse() - HQL: from org.example.models.QuestionSet where owner = ?
[2013-07-08 17:25:08] [DEBUG] QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'QuestionSet'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'owner'
          \-[PARAM] Node: '?'

[2013-07-08 17:25:08] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:25:08] [DEBUG] HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
[2013-07-08 17:25:08] [DEBUG] FromElement:157 - FromClause{level=1} : org.example.models.QuestionSet (<no alias>) -> questionse0_
[2013-07-08 17:25:08] [DEBUG] FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
[2013-07-08 17:25:08] [DEBUG] DotNode:599 - getDataType() : owner -> org.hibernate.type.ManyToOneType(org.example.models.User)
[2013-07-08 17:25:08] [DEBUG] DotNode:562 - dereferenceShortcut() : property owner in org.example.models.QuestionSet does not require a join.
[2013-07-08 17:25:08] [DEBUG] DotNode:588 - Terminal propertyPath = [owner]
[2013-07-08 17:25:08] [DEBUG] FromReferenceNode:74 - Resolved : {synthetic-alias}.owner -> questionse0_.owner_id
[2013-07-08 17:25:08] [WARN ] HqlSqlWalker:929 - [DEPRECATION] Encountered positional parameter near line 1, column 51.  Positional parameter are considered deprecated; use named parameters or JPA-style positional parameters instead.
[2013-07-08 17:25:08] [DEBUG] HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
[2013-07-08 17:25:08] [DEBUG] HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} QUESTIONSETS questionse0_ ) ( where ( = ( questionse0_.owner_id {synthetic-alias} owner ) ? ) ) )
[2013-07-08 17:25:08] [DEBUG] HqlSqlWalker:869 - Derived SELECT clause created.
[2013-07-08 17:25:08] [DEBUG] JoinProcessor:177 - Using FROM fragment [QUESTIONSETS questionse0_]
[2013-07-08 17:25:08] [DEBUG] HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
[2013-07-08 17:25:08] [DEBUG] QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (QUESTIONSETS)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'questionse0_.id as id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=QUESTIONSETS,tableAlias=questionse0_,origin=null,columns={,className=org.example.models.QuestionSet}}}
    |  \-[SQL_TOKEN] SqlFragment: 'questionse0_.name as name2_1_, questionse0_.owner_id as owner3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[questionse0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'QUESTIONSETS questionse0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=QUESTIONSETS,tableAlias=questionse0_,origin=null,columns={,className=org.example.models.QuestionSet}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'questionse0_.owner_id' {propertyName=owner,dereferenceType=0,propertyPath=owner,path={synthetic-alias}.owner,tableAlias=questionse0_,className=org.example.models.QuestionSet,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'owner' {originalText=owner}
          \-[PARAM] ParameterNode: '?' {ordinal=0, expectedType=org.hibernate.type.ManyToOneType(org.example.models.User)}

[2013-07-08 17:25:08] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:25:08] [DEBUG] QueryTranslatorImpl:235 - HQL: from org.example.models.QuestionSet where owner = ?
[2013-07-08 17:25:08] [DEBUG] QueryTranslatorImpl:236 - SQL: select questionse0_.id as id1_1_, questionse0_.name as name2_1_, questionse0_.owner_id as owner3_1_ from QUESTIONSETS questionse0_ where questionse0_.owner_id=?
[2013-07-08 17:25:08] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:25:08] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:25:08] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:25:08] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[2013-07-08 17:25:08] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:25:08] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:25:08] [DEBUG] EntityPrinter:121 - org.example.models.User{id=bbb12, name=Bob}
[2013-07-08 17:25:08] [DEBUG] SQL:104 - select questionse0_.id as id1_1_, questionse0_.name as name2_1_, questionse0_.owner_id as owner3_1_ from QUESTIONSETS questionse0_ where questionse0_.owner_id=?
[2013-07-08 17:25:08] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:25:08] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:25:08] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:25:08] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[2013-07-08 17:25:08] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:25:08] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:25:08] [DEBUG] EntityPrinter:121 - org.example.models.User{id=bbb12, name=Bob}
[2013-07-08 17:25:08] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:25:08] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:25:08] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:25:09] [DEBUG] SynchronousDispatcher:60 - PathInfo: /set/add/bbb12
[2013-07-08 17:27:13] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 17:27:13] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 17:27:13] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 17:27:13] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 17:27:13] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 17:27:13] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@72bdec44
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@72bdec44
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@72bdec44
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@190a0d51
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@50f8ae79
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@57044c5
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@4c68059
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@4c68059
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4c68059
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@db951f2
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@db951f2
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@db951f2
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@d6d46d7
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@d6d46d7
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@d6d46d7
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@1b0fb9bd
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@1b0fb9bd
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b0fb9bd
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@4b5a4a77
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@4b5a4a77
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4b5a4a77
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@54011d95
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@54011d95
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@54011d95
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@28722969
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@28722969
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@28722969
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4dc4e792
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4dc4e792
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b9fa8f7
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b9fa8f7
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@657a7adf
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@657a7adf
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@11767553
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6fc41e49
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@5c392fe8
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5c392fe8
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@531a700a
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@531a700a
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@5fb45ddc
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5fb45ddc
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@22c8ebd6
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@22c8ebd6
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@22c8ebd6
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@591bfcbe
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@5afc0f5
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5afc0f5
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5afc0f5
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@49b9a538
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@c1bb35b
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@c1bb35b
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@3f2f529b
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3f2f529b
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@37285252
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@37285252
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@1ac84361
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1ac84361
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2bf87baf
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2bf87baf
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@b04bce3
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3484fdbc
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@68487fb7
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@68487fb7
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@68487fb7
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@55e03a61
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@55e03a61
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@55e03a61
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@4e850e8c
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@15f7dbd8
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@15f7dbd8
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@15f7dbd8
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5ecfe500
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5ecfe500
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5ecfe500
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@6b91602
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@e2f75e5
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@1ae637f0
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1ae637f0
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4190d536
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@154db52b
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@154db52b
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@2b27fa03
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b27fa03
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@637644c8
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7a315068
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@c7f5bf9
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@52ed3b53
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@52ed3b53
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2310195c
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@75f0f8ff
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1f6b69d7
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@44f1b25e
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@57f55cae
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2d97d09f
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4a018e1b
[2013-07-08 17:27:13] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2c18b492
[2013-07-08 17:27:13] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 17:27:13] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 17:27:13] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 17:27:13] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 17:27:13] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 17:27:13] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 17:27:13] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 17:27:13] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 17:27:13] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 17:27:13] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 17:27:13] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 17:27:13] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 17:27:13] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 17:27:13] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 17:27:13] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 17:27:13] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 17:27:13] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 17:27:13] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 17:27:13] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 17:27:13] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 17:27:13] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 17:27:13] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 17:27:13] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 17:27:13] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 17:27:13] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 17:27:13] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 17:27:13] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 17:27:13] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 17:27:13] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 17:27:13] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 17:27:13] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 17:27:13] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 17:27:13] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 17:27:13] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 17:27:13] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 17:27:13] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 17:27:13] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 17:27:13] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 17:27:13] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 17:27:13] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 17:27:13] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 17:27:13] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 17:27:13] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 17:27:13] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 17:27:13] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 17:27:13] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 17:27:13] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 17:27:13] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 17:27:13] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 17:27:13] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 17:27:14] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 17:27:14] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 17:27:14] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:27:14] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:27:14] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 17:27:14] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:27:14] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:27:14] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 17:27:14] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 17:27:14] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:27:14] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:27:14] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:27:14] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:27:14] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:27:14] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 17:27:14] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 17:27:14] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 17:27:14] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 17:27:14] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 17:27:14] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 17:27:14] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:27:14] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 17:27:14] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 17:27:14] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 17:27:14] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:27:14] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:27:14] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 17:27:14] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 17:27:14] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:27:14] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:27:14] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:27:14] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:27:14] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 17:27:14] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 17:27:14] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 17:27:14] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 17:27:14] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:27:14] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 17:27:14] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 17:27:14] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 17:27:14] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:27:14] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:27:14] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 17:27:14] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 17:27:14] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:27:14] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:27:14] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:27:14] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:27:14] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 17:27:14] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 17:27:14] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 17:27:14] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 17:27:14] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:27:14] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 17:27:14] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:27:14] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 17:27:14] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:27:14] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 17:27:14] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:27:14] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:27:14] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:27:14] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:27:14] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:27:14] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:27:14] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:27:14] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:27:14] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:27:14] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:27:14] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 17:27:14] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 17:27:14] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 17:27:14] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 17:27:14] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 17:27:14] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 17:27:14] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 17:27:14] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:27:14] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:27:14] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:27:14] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 17:27:14] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 17:27:14] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 17:27:14] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 17:27:14] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 17:27:14] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 17:27:14] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 17:27:14] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 17:27:14] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 17:27:14] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 17:27:14] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 17:27:14] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 17:27:14] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 17:27:14] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 17:27:14] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 17:27:14] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 17:27:14] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 17:27:14] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:27:14] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:27:14] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:27:14] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:27:14] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:27:14] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:27:14] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:27:14] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:27:14] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@42bc5245
[2013-07-08 17:27:14] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 744aadc7-d8b7-4ffc-a8c3-1784f65c6167 (<unnamed>)
[2013-07-08 17:27:14] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 17:27:14] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 17:27:14] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:27:14] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:27:14] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:27:14] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:27:14] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:27:14] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:27:14] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:27:14] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:27:14] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:27:14] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:27:14] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:27:14] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:27:14] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:27:14] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:27:14] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:27:14] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:27:14] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:27:14] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:27:14] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:27:14] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:27:14] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:27:14] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:27:14] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:27:14] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:27:14] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:27:14] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:27:14] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:27:14] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:27:14] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:27:14] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:27:14] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:27:14] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:27:14] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:27:14] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:27:14] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:27:14] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 17:27:14] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 17:27:14] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 17:27:14] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 17:27:14] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 17:27:14] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 17:27:14] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 17:27:14] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 17:27:14] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 17:27:14] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 17:27:14] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 17:27:14] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 17:27:14] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 17:27:14] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 17:27:14] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 17:27:14] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 17:27:14] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 17:27:14] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 17:27:14] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 17:27:14] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 17:27:14] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 17:27:14] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 17:27:14] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 17:27:14] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 17:27:14] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 17:28:32] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 17:28:32] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 17:28:32] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 17:28:32] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 17:28:32] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 17:28:32] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@5baa8241
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@5baa8241
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5baa8241
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4c68059
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6f3d5f21
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@448be1c9
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@d6d46d7
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@d6d46d7
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@d6d46d7
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@1b0fb9bd
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@1b0fb9bd
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1b0fb9bd
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@39ce9085
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@39ce9085
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@39ce9085
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@23f2bc83
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@23f2bc83
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@23f2bc83
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@3a3f4a21
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@3a3f4a21
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3a3f4a21
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@657a7adf
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@657a7adf
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@657a7adf
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@7810a519
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@7810a519
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7810a519
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2e7857a5
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2e7857a5
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68f51766
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68f51766
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@6cb1cb25
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6cb1cb25
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@c65fb1
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@388eed76
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@22c8ebd6
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@22c8ebd6
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@3c6e4ba6
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3c6e4ba6
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@3b0e2558
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b0e2558
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3f2f529b
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3f2f529b
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3f2f529b
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7696e4c
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@7c6743e2
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7c6743e2
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7c6743e2
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@71e13a2c
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@468034b6
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@468034b6
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@976484e
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@976484e
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@74bffc3a
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@74bffc3a
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@59e14a78
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@59e14a78
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3ea763a
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3ea763a
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@43824d2c
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@22c393a1
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@6153e0c0
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6153e0c0
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@6153e0c0
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4de514a9
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4de514a9
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4de514a9
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@50baa573
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@7794566d
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7794566d
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@7794566d
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@91456c5
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@91456c5
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@91456c5
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@4a393167
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@627b5c
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@154db52b
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@154db52b
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4df2a9da
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@7a315068
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7a315068
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@2310195c
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2310195c
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1f6b69d7
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@57f55cae
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@2c18b492
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@5dee69d3
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5dee69d3
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@242870b7
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5b0010ec
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@615724a0
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2025b64d
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@be389b8
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7669521
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5fc8ad52
[2013-07-08 17:28:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6feb139e
[2013-07-08 17:28:32] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 17:28:32] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 17:28:32] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 17:28:32] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 17:28:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 17:28:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 17:28:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 17:28:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 17:28:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 17:28:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 17:28:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 17:28:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 17:28:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 17:28:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 17:28:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 17:28:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 17:28:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 17:28:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 17:28:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 17:28:32] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 17:28:32] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 17:28:32] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 17:28:32] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 17:28:32] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 17:28:32] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 17:28:32] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 17:28:32] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 17:28:32] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 17:28:32] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 17:28:32] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 17:28:32] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 17:28:32] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 17:28:32] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 17:28:32] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 17:28:32] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 17:28:32] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 17:28:32] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 17:28:32] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 17:28:32] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 17:28:32] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 17:28:32] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 17:28:32] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 17:28:32] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 17:28:32] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 17:28:32] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 17:28:32] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 17:28:32] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 17:28:32] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 17:28:32] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 17:28:32] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 17:28:32] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 17:28:32] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 17:28:32] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:28:32] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:28:32] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 17:28:32] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:28:32] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:28:32] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 17:28:32] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 17:28:32] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:28:32] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:28:32] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:28:32] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:28:32] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:28:32] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 17:28:32] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 17:28:32] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 17:28:32] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 17:28:33] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 17:28:33] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 17:28:33] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:28:33] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 17:28:33] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 17:28:33] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 17:28:33] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:28:33] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:28:33] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 17:28:33] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 17:28:33] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:28:33] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:28:33] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:28:33] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:28:33] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 17:28:33] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 17:28:33] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 17:28:33] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 17:28:33] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:28:33] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 17:28:33] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 17:28:33] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 17:28:33] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:28:33] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:28:33] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 17:28:33] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 17:28:33] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:28:33] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:28:33] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:28:33] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:28:33] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 17:28:33] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 17:28:33] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 17:28:33] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 17:28:33] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:28:33] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 17:28:33] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:28:33] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 17:28:33] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:28:33] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 17:28:33] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:28:33] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:28:33] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:28:33] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:28:33] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:28:33] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:28:33] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:28:33] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:28:33] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:28:33] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:28:33] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 17:28:33] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 17:28:33] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 17:28:33] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 17:28:33] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 17:28:33] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 17:28:33] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 17:28:33] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:28:33] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:28:33] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:28:33] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 17:28:33] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 17:28:33] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 17:28:33] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 17:28:33] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 17:28:33] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 17:28:33] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 17:28:33] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 17:28:33] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 17:28:33] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 17:28:33] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 17:28:33] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 17:28:33] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 17:28:33] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 17:28:33] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 17:28:33] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 17:28:33] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 17:28:33] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:28:33] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:28:33] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:28:33] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:28:33] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:28:33] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:28:33] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:28:33] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:28:33] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@b8235a1
[2013-07-08 17:28:33] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: a7a993d7-221b-478e-93a7-417bbd526dc0 (<unnamed>)
[2013-07-08 17:28:33] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 17:28:33] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 17:28:33] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:28:33] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:28:33] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:28:33] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:28:33] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:28:33] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:28:33] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:28:33] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:28:33] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:28:33] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:28:33] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:28:33] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:28:33] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:28:33] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:28:33] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:28:33] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:28:33] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:28:33] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:28:33] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:28:33] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:28:33] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:28:33] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:28:33] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:28:33] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:28:33] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:28:33] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:28:33] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:28:33] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:28:33] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:28:33] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:28:33] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:28:33] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:28:33] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:28:33] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:28:33] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:28:33] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 17:28:33] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 17:28:33] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 17:28:33] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 17:28:33] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 17:28:33] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 17:28:33] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 17:28:33] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 17:28:33] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 17:28:33] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 17:28:33] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 17:28:33] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 17:28:33] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 17:28:33] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 17:28:33] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 17:28:33] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 17:28:33] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 17:28:33] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 17:28:33] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 17:28:33] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 17:28:33] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 17:28:33] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 17:28:33] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 17:28:33] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 17:28:33] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 17:31:26] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 17:31:26] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 17:31:26] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 17:31:26] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 17:31:26] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 17:31:26] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@3f9f76a5
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@3f9f76a5
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3f9f76a5
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@71e852be
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@22b90a6e
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3914fc36
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@39b1ff47
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@39b1ff47
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@39b1ff47
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@46be6108
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@46be6108
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@46be6108
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@5da0b94d
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@5da0b94d
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5da0b94d
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@7686b376
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@7686b376
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7686b376
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@6b6c14c0
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@6b6c14c0
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6b6c14c0
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@1b2ede8
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@1b2ede8
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1b2ede8
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@7051630a
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@7051630a
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7051630a
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@10bfb545
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@10bfb545
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@145d424
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@145d424
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@256b352c
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@256b352c
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5e53bbfa
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1e4276fd
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@54011d95
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@54011d95
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@23f2bc83
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@23f2bc83
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@3a3f4a21
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3a3f4a21
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@657a7adf
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@657a7adf
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@657a7adf
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@cc749e4
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@16369fdc
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@16369fdc
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@16369fdc
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2e7857a5
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@68f51766
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@68f51766
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@6cb1cb25
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6cb1cb25
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@c65fb1
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@c65fb1
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@388eed76
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@388eed76
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6b064b80
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6b064b80
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@591bfcbe
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5afc0f5
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@3b0e2558
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3b0e2558
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@3b0e2558
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6e9c2192
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6e9c2192
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6e9c2192
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@3bd85e85
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@3834a1c8
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3834a1c8
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@3834a1c8
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@51bfa303
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@51bfa303
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@51bfa303
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@71e13a2c
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@468034b6
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@3ea763a
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3ea763a
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@43824d2c
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@51f2412a
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@51f2412a
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@b9deddb
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@b9deddb
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3e29b849
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1e3a4822
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@2f031310
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@20b124fa
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@20b124fa
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@766d4f30
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@26a150e
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@28c4b5f
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@48a84b47
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@20e64795
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6e659812
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4fe2fe5d
[2013-07-08 17:31:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3fa9b4a4
[2013-07-08 17:31:26] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 17:31:26] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 17:31:26] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 17:31:26] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 17:31:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 17:31:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 17:31:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 17:31:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 17:31:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 17:31:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 17:31:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 17:31:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 17:31:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 17:31:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 17:31:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 17:31:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 17:31:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 17:31:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 17:31:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 17:31:26] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 17:31:26] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 17:31:26] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 17:31:26] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 17:31:26] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 17:31:26] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 17:31:26] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 17:31:26] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 17:31:26] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 17:31:26] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 17:31:26] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 17:31:26] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 17:31:26] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 17:31:26] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 17:31:26] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 17:31:26] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 17:31:26] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 17:31:26] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 17:31:26] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 17:31:26] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 17:31:26] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 17:31:26] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 17:31:26] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 17:31:26] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 17:31:26] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 17:31:26] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 17:31:26] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 17:31:27] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 17:31:27] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 17:31:27] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 17:31:27] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 17:31:27] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 17:31:27] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 17:31:27] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:31:27] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:31:27] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 17:31:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:31:27] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:31:27] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 17:31:27] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 17:31:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:31:27] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:31:27] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:31:27] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:31:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:31:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 17:31:27] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 17:31:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 17:31:27] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 17:31:27] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 17:31:27] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 17:31:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:31:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 17:31:27] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 17:31:27] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 17:31:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:31:27] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:31:27] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 17:31:27] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 17:31:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:31:27] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:31:27] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:31:27] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:31:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 17:31:27] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 17:31:27] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 17:31:27] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 17:31:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:31:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 17:31:27] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 17:31:27] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 17:31:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:31:27] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:31:27] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 17:31:27] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 17:31:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:31:27] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:31:27] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:31:27] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:31:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 17:31:27] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 17:31:27] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 17:31:27] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 17:31:27] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:31:27] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 17:31:27] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:31:27] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 17:31:27] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:31:27] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 17:31:27] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:31:27] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:31:27] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:31:27] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:31:27] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:31:27] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:31:27] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:31:27] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:31:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:31:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:31:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 17:31:27] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 17:31:27] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 17:31:27] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 17:31:27] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 17:31:27] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 17:31:27] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 17:31:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:31:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:31:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:31:27] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 17:31:27] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 17:31:27] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 17:31:27] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 17:31:27] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 17:31:27] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 17:31:27] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 17:31:27] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 17:31:27] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 17:31:27] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 17:31:27] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 17:31:27] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 17:31:27] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 17:31:27] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 17:31:27] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 17:31:27] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 17:31:27] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 17:31:27] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:31:27] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:31:27] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:31:27] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:31:27] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:31:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:31:27] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:31:27] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:31:27] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@50fc5408
[2013-07-08 17:31:27] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 4409598f-4f95-49bb-b80e-579c33106ec4 (<unnamed>)
[2013-07-08 17:31:27] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 17:31:27] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 17:31:27] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:31:27] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:31:27] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:31:27] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:31:27] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:31:27] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:31:27] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:31:27] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:31:27] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:31:27] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:31:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:31:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:31:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:31:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:31:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:31:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:31:27] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:31:27] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:31:27] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:31:27] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:31:27] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:31:27] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:31:27] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:31:27] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:31:27] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:31:27] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:31:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:31:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:31:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:31:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:31:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:31:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:31:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:31:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:31:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:31:27] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 17:31:27] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 17:31:27] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 17:31:27] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 17:31:27] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 17:31:27] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 17:31:27] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 17:31:27] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 17:31:27] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 17:31:27] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 17:31:27] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 17:31:27] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 17:31:27] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 17:31:27] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 17:31:27] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 17:31:27] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 17:31:27] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 17:31:27] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 17:31:27] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 17:31:27] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 17:31:27] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 17:31:27] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 17:31:27] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 17:31:27] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 17:31:27] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 17:31:30] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 17:31:30] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:31:30] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 17:31:30] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 17:31:30] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/
[2013-07-08 17:31:32] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 17:31:32] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T163132Z!1373301090-20416-5!http://localhost:8080/!jcb98!!pwd!9461!!2!FLb7Pn60cvp-BjHuxY4jOJV8MtRAaQHVcj7uQTgJKja6KEY2m3A4C2qBXmb8I8FTaTRwCSZ6TJwqWqjgmbO.SjgLZUzhE.gxii3qR2qNKeZyw03GGBhVkCnCd2onJIetVmwi1EzAwF3VoAfAlnl-nMaLn0McX1pnVpmPWzzqSeQ_
[2013-07-08 17:31:32] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T163130Z, fail: 
[2013-07-08 17:31:32] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 17:31:32] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 17:31:32] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T163132Z Last: 1373301092165 Life: 9461 ID: 1373301090-20416-5 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:31:32] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 17:31:32] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:31:32] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T163130Z, fail: 
[2013-07-08 17:31:32] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T163132Z Last: 1373301092165 Life: 9461 ID: 1373301090-20416-5 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:31:32] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:31:32] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 17:31:32] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:31:32] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:31:32] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:31:32] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:31:32] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: aaa98, using strategy: org.hibernate.id.Assigned
[2013-07-08 17:31:32] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: bbb12, using strategy: org.hibernate.id.Assigned
[2013-07-08 17:31:32] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONSETS
[2013-07-08 17:31:32] [DEBUG] SQL:104 - select max(id) from QUESTIONSETS
[2013-07-08 17:31:32] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 17:31:32] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 17:31:32] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONS
[2013-07-08 17:31:32] [DEBUG] SQL:104 - select max(id) from QUESTIONS
[2013-07-08 17:31:32] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 17:31:32] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 17:31:32] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 2, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 17:31:32] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 3, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 17:31:32] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:31:32] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:31:32] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:31:32] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2013-07-08 17:31:32] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:31:32] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:31:32] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [power n k], that calculates k-th power of n., id=3, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:31:32] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=1, name=Foundations of Computer Science example sheet, owner=org.example.models.User#aaa98}
[2013-07-08 17:31:32] [DEBUG] EntityPrinter:121 - org.example.models.User{id=bbb12, name=Bob}
[2013-07-08 17:31:32] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:31:32] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [square n], that calculates square of n., id=1, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:31:32] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [factorial n], that calculates factorial of n., id=2, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:31:32] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 17:31:32] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 17:31:32] [DEBUG] SQL:104 - insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 17:31:32] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 17:31:32] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 17:31:32] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 17:31:32] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:31:32] [DEBUG] JdbcCoordinatorImpl:173 - HHH000420: Closing un-released batch
[2013-07-08 17:31:32] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:31:32] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:31:34] [DEBUG] RavenFilter:389 - RavenFilter running for: /question/
[2013-07-08 17:31:34] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:31:34] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T163130Z, fail: 
[2013-07-08 17:31:34] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T163132Z Last: 1373301092165 Life: 9461 ID: 1373301090-20416-5 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:31:34] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:31:34] [DEBUG] SynchronousDispatcher:60 - PathInfo: /question/
[2013-07-08 17:31:34] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:31:34] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:31:34] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:31:34] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:31:34] [DEBUG] QueryTranslatorImpl:265 - parse() - HQL: from org.example.models.Question
[2013-07-08 17:31:34] [DEBUG] QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'org'
                |  |  \-[IDENT] Node: 'example'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'Question'

[2013-07-08 17:31:34] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:31:34] [DEBUG] HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
[2013-07-08 17:31:34] [DEBUG] FromElement:157 - FromClause{level=1} : org.example.models.Question (<no alias>) -> question0_
[2013-07-08 17:31:34] [DEBUG] HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
[2013-07-08 17:31:34] [DEBUG] HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} QUESTIONS question0_ ) )
[2013-07-08 17:31:34] [DEBUG] HqlSqlWalker:869 - Derived SELECT clause created.
[2013-07-08 17:31:34] [DEBUG] JoinProcessor:177 - Using FROM fragment [QUESTIONS question0_]
[2013-07-08 17:31:34] [DEBUG] HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
[2013-07-08 17:31:34] [DEBUG] QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (QUESTIONS)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'question0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=QUESTIONS,tableAlias=question0_,origin=null,columns={,className=org.example.models.Question}}}
    |  \-[SQL_TOKEN] SqlFragment: 'question0_.author_id as author3_0_, question0_.content as content2_0_, question0_.parentSet_id as parentSe4_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[question0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'QUESTIONS question0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=QUESTIONS,tableAlias=question0_,origin=null,columns={,className=org.example.models.Question}}

[2013-07-08 17:31:34] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:31:34] [DEBUG] QueryTranslatorImpl:235 - HQL: from org.example.models.Question
[2013-07-08 17:31:34] [DEBUG] QueryTranslatorImpl:236 - SQL: select question0_.id as id1_0_, question0_.author_id as author3_0_, question0_.content as content2_0_, question0_.parentSet_id as parentSe4_0_ from QUESTIONS question0_
[2013-07-08 17:31:34] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:31:34] [DEBUG] SQL:104 - select question0_.id as id1_0_, question0_.author_id as author3_0_, question0_.content as content2_0_, question0_.parentSet_id as parentSe4_0_ from QUESTIONS question0_
[2013-07-08 17:31:34] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:31:34] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.Question#1]
[2013-07-08 17:31:34] [DEBUG] Loader:941 - Result set row: 1
[2013-07-08 17:31:34] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.Question#2]
[2013-07-08 17:31:34] [DEBUG] Loader:941 - Result set row: 2
[2013-07-08 17:31:34] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.Question#3]
[2013-07-08 17:31:34] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.Question#1]
[2013-07-08 17:31:34] [DEBUG] Loader:2105 - Loading entity: [org.example.models.User#aaa98]
[2013-07-08 17:31:34] [DEBUG] SQL:104 - select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:31:34] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:31:34] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#aaa98]
[2013-07-08 17:31:34] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#aaa98]
[2013-07-08 17:31:34] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#aaa98]
[2013-07-08 17:31:34] [DEBUG] Loader:2129 - Done entity load
[2013-07-08 17:31:34] [DEBUG] Loader:2105 - Loading entity: [org.example.models.QuestionSet#1]
[2013-07-08 17:31:34] [DEBUG] SQL:104 - select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:31:34] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:31:34] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#aaa98], EntityKey[org.example.models.QuestionSet#1]
[2013-07-08 17:31:34] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.QuestionSet#1]
[2013-07-08 17:31:34] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.QuestionSet#1]
[2013-07-08 17:31:34] [DEBUG] Loader:2129 - Done entity load
[2013-07-08 17:31:34] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.Question#1]
[2013-07-08 17:31:34] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.Question#2]
[2013-07-08 17:31:34] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.Question#2]
[2013-07-08 17:31:34] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.Question#3]
[2013-07-08 17:31:34] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.Question#3]
[2013-07-08 17:31:34] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:31:34] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:31:34] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:31:34] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2013-07-08 17:31:34] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:31:34] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:31:34] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [power n k], that calculates k-th power of n., id=3, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:31:34] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=1, name=Foundations of Computer Science example sheet, owner=org.example.models.User#aaa98}
[2013-07-08 17:31:34] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:31:34] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [square n], that calculates square of n., id=1, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:31:34] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [factorial n], that calculates factorial of n., id=2, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:31:34] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:31:34] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:31:34] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:31:34] [DEBUG] RavenFilter:389 - RavenFilter running for: /question/
[2013-07-08 17:31:34] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:31:34] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T163130Z, fail: 
[2013-07-08 17:31:34] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T163132Z Last: 1373301092165 Life: 9461 ID: 1373301090-20416-5 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:31:34] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:31:34] [DEBUG] SynchronousDispatcher:60 - PathInfo: /question/
[2013-07-08 17:31:34] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:31:34] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:31:34] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:31:34] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:31:34] [DEBUG] SQL:104 - select question0_.id as id1_0_, question0_.author_id as author3_0_, question0_.content as content2_0_, question0_.parentSet_id as parentSe4_0_ from QUESTIONS question0_
[2013-07-08 17:31:34] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:31:34] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.Question#1]
[2013-07-08 17:31:34] [DEBUG] Loader:941 - Result set row: 1
[2013-07-08 17:31:34] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.Question#2]
[2013-07-08 17:31:34] [DEBUG] Loader:941 - Result set row: 2
[2013-07-08 17:31:34] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.Question#3]
[2013-07-08 17:31:34] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.Question#1]
[2013-07-08 17:31:34] [DEBUG] Loader:2105 - Loading entity: [org.example.models.User#aaa98]
[2013-07-08 17:31:34] [DEBUG] SQL:104 - select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:31:34] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:31:34] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#aaa98]
[2013-07-08 17:31:34] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#aaa98]
[2013-07-08 17:31:34] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#aaa98]
[2013-07-08 17:31:34] [DEBUG] Loader:2129 - Done entity load
[2013-07-08 17:31:34] [DEBUG] Loader:2105 - Loading entity: [org.example.models.QuestionSet#1]
[2013-07-08 17:31:34] [DEBUG] SQL:104 - select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:31:34] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:31:34] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#aaa98], EntityKey[org.example.models.QuestionSet#1]
[2013-07-08 17:31:34] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.QuestionSet#1]
[2013-07-08 17:31:34] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.QuestionSet#1]
[2013-07-08 17:31:34] [DEBUG] Loader:2129 - Done entity load
[2013-07-08 17:31:34] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.Question#1]
[2013-07-08 17:31:34] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.Question#2]
[2013-07-08 17:31:34] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.Question#2]
[2013-07-08 17:31:34] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.Question#3]
[2013-07-08 17:31:34] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.Question#3]
[2013-07-08 17:31:34] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:31:34] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:31:34] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:31:34] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2013-07-08 17:31:34] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:31:34] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:31:34] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [power n k], that calculates k-th power of n., id=3, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:31:34] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=1, name=Foundations of Computer Science example sheet, owner=org.example.models.User#aaa98}
[2013-07-08 17:31:34] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:31:34] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [square n], that calculates square of n., id=1, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:31:34] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [factorial n], that calculates factorial of n., id=2, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:31:34] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:31:34] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:31:34] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:31:37] [DEBUG] RavenFilter:389 - RavenFilter running for: /user/
[2013-07-08 17:31:37] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:31:37] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T163130Z, fail: 
[2013-07-08 17:31:37] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T163132Z Last: 1373301092165 Life: 9461 ID: 1373301090-20416-5 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:31:37] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:31:37] [DEBUG] SynchronousDispatcher:60 - PathInfo: /user/
[2013-07-08 17:31:37] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:31:37] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:31:37] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:31:37] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:31:37] [DEBUG] QueryTranslatorImpl:265 - parse() - HQL: from org.example.models.User
[2013-07-08 17:31:37] [DEBUG] QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'org'
                |  |  \-[IDENT] Node: 'example'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'User'

[2013-07-08 17:31:37] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:31:37] [DEBUG] HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
[2013-07-08 17:31:37] [DEBUG] FromElement:157 - FromClause{level=1} : org.example.models.User (<no alias>) -> user0_
[2013-07-08 17:31:37] [DEBUG] HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
[2013-07-08 17:31:37] [DEBUG] HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} USERS user0_ ) )
[2013-07-08 17:31:37] [DEBUG] HqlSqlWalker:869 - Derived SELECT clause created.
[2013-07-08 17:31:37] [DEBUG] JoinProcessor:177 - Using FROM fragment [USERS user0_]
[2013-07-08 17:31:37] [DEBUG] HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
[2013-07-08 17:31:37] [DEBUG] QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (USERS)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.id as id1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=USERS,tableAlias=user0_,origin=null,columns={,className=org.example.models.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.name as name2_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'USERS user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=USERS,tableAlias=user0_,origin=null,columns={,className=org.example.models.User}}

[2013-07-08 17:31:37] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:31:37] [DEBUG] QueryTranslatorImpl:235 - HQL: from org.example.models.User
[2013-07-08 17:31:37] [DEBUG] QueryTranslatorImpl:236 - SQL: select user0_.id as id1_2_, user0_.name as name2_2_ from USERS user0_
[2013-07-08 17:31:37] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:31:37] [DEBUG] SQL:104 - select user0_.id as id1_2_, user0_.name as name2_2_ from USERS user0_
[2013-07-08 17:31:37] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:31:37] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#aaa98]
[2013-07-08 17:31:37] [DEBUG] Loader:941 - Result set row: 1
[2013-07-08 17:31:37] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#bbb12]
[2013-07-08 17:31:37] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#aaa98]
[2013-07-08 17:31:37] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#aaa98]
[2013-07-08 17:31:37] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#bbb12]
[2013-07-08 17:31:37] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#bbb12]
[2013-07-08 17:31:37] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:31:37] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:31:37] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:31:37] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2013-07-08 17:31:37] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:31:37] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:31:37] [DEBUG] EntityPrinter:121 - org.example.models.User{id=bbb12, name=Bob}
[2013-07-08 17:31:37] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:31:37] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:31:37] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:31:37] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:31:38] [DEBUG] RavenFilter:389 - RavenFilter running for: /user/aaa98
[2013-07-08 17:31:38] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:31:38] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T163130Z, fail: 
[2013-07-08 17:31:38] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T163132Z Last: 1373301092165 Life: 9461 ID: 1373301090-20416-5 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:31:38] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:31:38] [DEBUG] SynchronousDispatcher:60 - PathInfo: /user/aaa98
[2013-07-08 17:31:38] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:31:38] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:31:38] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:31:38] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:31:38] [DEBUG] QueryTranslatorImpl:265 - parse() - HQL: from org.example.models.User where id = ?
[2013-07-08 17:31:38] [DEBUG] QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[PARAM] Node: '?'

[2013-07-08 17:31:38] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:31:38] [DEBUG] HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
[2013-07-08 17:31:38] [DEBUG] FromElement:157 - FromClause{level=1} : org.example.models.User (<no alias>) -> user0_
[2013-07-08 17:31:38] [DEBUG] FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
[2013-07-08 17:31:38] [DEBUG] DotNode:599 - getDataType() : id -> org.hibernate.type.StringType@256b352c
[2013-07-08 17:31:38] [DEBUG] FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> user0_.id
[2013-07-08 17:31:38] [WARN ] HqlSqlWalker:929 - [DEPRECATION] Encountered positional parameter near line 1, column 41.  Positional parameter are considered deprecated; use named parameters or JPA-style positional parameters instead.
[2013-07-08 17:31:38] [DEBUG] HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
[2013-07-08 17:31:38] [DEBUG] HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} USERS user0_ ) ( where ( = ( user0_.id {synthetic-alias} id ) ? ) ) )
[2013-07-08 17:31:38] [DEBUG] HqlSqlWalker:869 - Derived SELECT clause created.
[2013-07-08 17:31:38] [DEBUG] JoinProcessor:177 - Using FROM fragment [USERS user0_]
[2013-07-08 17:31:38] [DEBUG] HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
[2013-07-08 17:31:38] [DEBUG] QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (USERS)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.id as id1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=USERS,tableAlias=user0_,origin=null,columns={,className=org.example.models.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.name as name2_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'USERS user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=USERS,tableAlias=user0_,origin=null,columns={,className=org.example.models.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=user0_,className=org.example.models.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[PARAM] ParameterNode: '?' {ordinal=0, expectedType=org.hibernate.type.StringType@256b352c}

[2013-07-08 17:31:38] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:31:38] [DEBUG] QueryTranslatorImpl:235 - HQL: from org.example.models.User where id = ?
[2013-07-08 17:31:38] [DEBUG] QueryTranslatorImpl:236 - SQL: select user0_.id as id1_2_, user0_.name as name2_2_ from USERS user0_ where user0_.id=?
[2013-07-08 17:31:38] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:31:38] [DEBUG] SQL:104 - select user0_.id as id1_2_, user0_.name as name2_2_ from USERS user0_ where user0_.id=?
[2013-07-08 17:31:38] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:31:38] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#aaa98]
[2013-07-08 17:31:38] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#aaa98]
[2013-07-08 17:31:38] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#aaa98]
[2013-07-08 17:31:38] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:31:38] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:31:38] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:31:38] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[2013-07-08 17:31:38] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:31:38] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:31:38] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:31:38] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:31:38] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:31:38] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:31:40] [DEBUG] RavenFilter:389 - RavenFilter running for: /user/aaa98/sets
[2013-07-08 17:31:40] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:31:40] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T163130Z, fail: 
[2013-07-08 17:31:40] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T163132Z Last: 1373301092165 Life: 9461 ID: 1373301090-20416-5 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:31:40] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:31:40] [DEBUG] SynchronousDispatcher:60 - PathInfo: /user/aaa98/sets
[2013-07-08 17:31:40] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:31:40] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:31:40] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:31:40] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:31:40] [DEBUG] SQL:104 - select user0_.id as id1_2_, user0_.name as name2_2_ from USERS user0_ where user0_.id=?
[2013-07-08 17:31:40] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:31:40] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#aaa98]
[2013-07-08 17:31:40] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#aaa98]
[2013-07-08 17:31:40] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#aaa98]
[2013-07-08 17:31:40] [DEBUG] QueryTranslatorImpl:265 - parse() - HQL: from org.example.models.QuestionSet where owner = ?
[2013-07-08 17:31:40] [DEBUG] QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'QuestionSet'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'owner'
          \-[PARAM] Node: '?'

[2013-07-08 17:31:40] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:31:40] [DEBUG] HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
[2013-07-08 17:31:40] [DEBUG] FromElement:157 - FromClause{level=1} : org.example.models.QuestionSet (<no alias>) -> questionse0_
[2013-07-08 17:31:40] [DEBUG] FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
[2013-07-08 17:31:40] [DEBUG] DotNode:599 - getDataType() : owner -> org.hibernate.type.ManyToOneType(org.example.models.User)
[2013-07-08 17:31:40] [DEBUG] DotNode:562 - dereferenceShortcut() : property owner in org.example.models.QuestionSet does not require a join.
[2013-07-08 17:31:40] [DEBUG] DotNode:588 - Terminal propertyPath = [owner]
[2013-07-08 17:31:40] [DEBUG] FromReferenceNode:74 - Resolved : {synthetic-alias}.owner -> questionse0_.owner_id
[2013-07-08 17:31:40] [WARN ] HqlSqlWalker:929 - [DEPRECATION] Encountered positional parameter near line 1, column 51.  Positional parameter are considered deprecated; use named parameters or JPA-style positional parameters instead.
[2013-07-08 17:31:40] [DEBUG] HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
[2013-07-08 17:31:40] [DEBUG] HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} QUESTIONSETS questionse0_ ) ( where ( = ( questionse0_.owner_id {synthetic-alias} owner ) ? ) ) )
[2013-07-08 17:31:40] [DEBUG] HqlSqlWalker:869 - Derived SELECT clause created.
[2013-07-08 17:31:40] [DEBUG] JoinProcessor:177 - Using FROM fragment [QUESTIONSETS questionse0_]
[2013-07-08 17:31:40] [DEBUG] HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
[2013-07-08 17:31:40] [DEBUG] QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (QUESTIONSETS)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'questionse0_.id as id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=QUESTIONSETS,tableAlias=questionse0_,origin=null,columns={,className=org.example.models.QuestionSet}}}
    |  \-[SQL_TOKEN] SqlFragment: 'questionse0_.name as name2_1_, questionse0_.owner_id as owner3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[questionse0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'QUESTIONSETS questionse0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=QUESTIONSETS,tableAlias=questionse0_,origin=null,columns={,className=org.example.models.QuestionSet}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'questionse0_.owner_id' {propertyName=owner,dereferenceType=0,propertyPath=owner,path={synthetic-alias}.owner,tableAlias=questionse0_,className=org.example.models.QuestionSet,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'owner' {originalText=owner}
          \-[PARAM] ParameterNode: '?' {ordinal=0, expectedType=org.hibernate.type.ManyToOneType(org.example.models.User)}

[2013-07-08 17:31:40] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:31:40] [DEBUG] QueryTranslatorImpl:235 - HQL: from org.example.models.QuestionSet where owner = ?
[2013-07-08 17:31:40] [DEBUG] QueryTranslatorImpl:236 - SQL: select questionse0_.id as id1_1_, questionse0_.name as name2_1_, questionse0_.owner_id as owner3_1_ from QUESTIONSETS questionse0_ where questionse0_.owner_id=?
[2013-07-08 17:31:40] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:31:40] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:31:40] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:31:40] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[2013-07-08 17:31:40] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:31:40] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:31:40] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:31:40] [DEBUG] SQL:104 - select questionse0_.id as id1_1_, questionse0_.name as name2_1_, questionse0_.owner_id as owner3_1_ from QUESTIONSETS questionse0_ where questionse0_.owner_id=?
[2013-07-08 17:31:40] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:31:40] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.QuestionSet#1]
[2013-07-08 17:31:40] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.QuestionSet#1]
[2013-07-08 17:31:40] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.QuestionSet#1]
[2013-07-08 17:31:40] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:31:40] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:31:40] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:31:40] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2013-07-08 17:31:40] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:31:40] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:31:40] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=1, name=Foundations of Computer Science example sheet, owner=org.example.models.User#aaa98}
[2013-07-08 17:31:40] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:31:40] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:31:40] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:31:40] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:31:41] [DEBUG] RavenFilter:389 - RavenFilter running for: /set/add/aaa98
[2013-07-08 17:31:41] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:31:41] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T163130Z, fail: 
[2013-07-08 17:31:41] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T163132Z Last: 1373301092165 Life: 9461 ID: 1373301090-20416-5 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:31:41] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:31:41] [DEBUG] SynchronousDispatcher:60 - PathInfo: /set/add/aaa98
[2013-07-08 17:31:41] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:31:41] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:31:41] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:31:41] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:31:41] [DEBUG] SQL:104 - select user0_.id as id1_2_, user0_.name as name2_2_ from USERS user0_ where user0_.id=?
[2013-07-08 17:31:41] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:31:41] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#aaa98]
[2013-07-08 17:31:41] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#aaa98]
[2013-07-08 17:31:41] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#aaa98]
[2013-07-08 17:31:41] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:31:41] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:31:41] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:31:41] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[2013-07-08 17:31:41] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:31:41] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:31:41] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:31:41] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:31:41] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:31:41] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:31:42] [DEBUG] RavenFilter:389 - RavenFilter running for: /set/0
[2013-07-08 17:31:42] [DEBUG] RavenFilter:402 - Not checking WLS-Response because we have a POST request
[2013-07-08 17:31:42] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T163130Z, fail: 
[2013-07-08 17:31:42] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T163132Z Last: 1373301092165 Life: 9461 ID: 1373301090-20416-5 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:31:42] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:31:42] [DEBUG] SynchronousDispatcher:60 - PathInfo: /set/0
[2013-07-08 17:31:42] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:31:42] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:31:42] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:31:42] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:31:42] [DEBUG] SQL:104 - select user0_.id as id1_2_, user0_.name as name2_2_ from USERS user0_ where user0_.id=?
[2013-07-08 17:31:42] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:31:42] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#aaa98]
[2013-07-08 17:31:42] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#aaa98]
[2013-07-08 17:31:42] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#aaa98]
[2013-07-08 17:31:42] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:31:42] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:31:42] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:31:42] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[2013-07-08 17:31:42] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:31:42] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:31:42] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:31:42] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:31:42] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:31:42] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:31:42] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:31:42] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:31:42] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:31:42] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:31:42] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 2, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 17:31:42] [DEBUG] SQL:104 - select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 17:31:42] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:31:42] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:31:42] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:31:42] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2013-07-08 17:31:42] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:31:42] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:31:42] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=2, name=Name, owner=org.example.models.User#aaa98}
[2013-07-08 17:31:42] [DEBUG] SQL:104 - insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 17:31:42] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:31:42] [DEBUG] JdbcCoordinatorImpl:173 - HHH000420: Closing un-released batch
[2013-07-08 17:31:42] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:31:42] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:31:42] [DEBUG] RavenFilter:389 - RavenFilter running for: /set/2
[2013-07-08 17:31:42] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:31:42] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T163130Z, fail: 
[2013-07-08 17:31:42] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T163132Z Last: 1373301092165 Life: 9461 ID: 1373301090-20416-5 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:31:42] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:31:42] [DEBUG] SynchronousDispatcher:60 - PathInfo: /set/2
[2013-07-08 17:31:42] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:31:42] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:31:42] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:31:42] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:31:42] [DEBUG] QueryTranslatorImpl:265 - parse() - HQL: from org.example.models.Question where parentSet = ?
[2013-07-08 17:31:42] [DEBUG] QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'Question'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'parentSet'
          \-[PARAM] Node: '?'

[2013-07-08 17:31:42] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:31:42] [DEBUG] HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
[2013-07-08 17:31:42] [DEBUG] FromElement:157 - FromClause{level=1} : org.example.models.Question (<no alias>) -> question0_
[2013-07-08 17:31:42] [DEBUG] FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
[2013-07-08 17:31:42] [DEBUG] DotNode:599 - getDataType() : parentSet -> org.hibernate.type.ManyToOneType(org.example.models.QuestionSet)
[2013-07-08 17:31:42] [DEBUG] DotNode:562 - dereferenceShortcut() : property parentSet in org.example.models.Question does not require a join.
[2013-07-08 17:31:42] [DEBUG] DotNode:588 - Terminal propertyPath = [parentSet]
[2013-07-08 17:31:42] [DEBUG] FromReferenceNode:74 - Resolved : {synthetic-alias}.parentSet -> question0_.parentSet_id
[2013-07-08 17:31:42] [WARN ] HqlSqlWalker:929 - [DEPRECATION] Encountered positional parameter near line 1, column 52.  Positional parameter are considered deprecated; use named parameters or JPA-style positional parameters instead.
[2013-07-08 17:31:42] [DEBUG] HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
[2013-07-08 17:31:42] [DEBUG] HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} QUESTIONS question0_ ) ( where ( = ( question0_.parentSet_id {synthetic-alias} parentSet ) ? ) ) )
[2013-07-08 17:31:42] [DEBUG] HqlSqlWalker:869 - Derived SELECT clause created.
[2013-07-08 17:31:42] [DEBUG] JoinProcessor:177 - Using FROM fragment [QUESTIONS question0_]
[2013-07-08 17:31:42] [DEBUG] HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
[2013-07-08 17:31:42] [DEBUG] QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (QUESTIONS)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'question0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=QUESTIONS,tableAlias=question0_,origin=null,columns={,className=org.example.models.Question}}}
    |  \-[SQL_TOKEN] SqlFragment: 'question0_.author_id as author3_0_, question0_.content as content2_0_, question0_.parentSet_id as parentSe4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[question0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'QUESTIONS question0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=QUESTIONS,tableAlias=question0_,origin=null,columns={,className=org.example.models.Question}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'question0_.parentSet_id' {propertyName=parentSet,dereferenceType=0,propertyPath=parentSet,path={synthetic-alias}.parentSet,tableAlias=question0_,className=org.example.models.Question,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'parentSet' {originalText=parentSet}
          \-[PARAM] ParameterNode: '?' {ordinal=0, expectedType=org.hibernate.type.ManyToOneType(org.example.models.QuestionSet)}

[2013-07-08 17:31:42] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:31:42] [DEBUG] QueryTranslatorImpl:235 - HQL: from org.example.models.Question where parentSet = ?
[2013-07-08 17:31:42] [DEBUG] QueryTranslatorImpl:236 - SQL: select question0_.id as id1_0_, question0_.author_id as author3_0_, question0_.content as content2_0_, question0_.parentSet_id as parentSe4_0_ from QUESTIONS question0_ where question0_.parentSet_id=?
[2013-07-08 17:31:42] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:31:42] [DEBUG] SQL:104 - select question0_.id as id1_0_, question0_.author_id as author3_0_, question0_.content as content2_0_, question0_.parentSet_id as parentSe4_0_ from QUESTIONS question0_ where question0_.parentSet_id=?
[2013-07-08 17:31:42] [DEBUG] QueryTranslatorImpl:265 - parse() - HQL: from org.example.models.QuestionSet where id = ?
[2013-07-08 17:31:42] [DEBUG] QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'QuestionSet'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[PARAM] Node: '?'

[2013-07-08 17:31:42] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:31:42] [DEBUG] HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
[2013-07-08 17:31:42] [DEBUG] FromElement:157 - FromClause{level=1} : org.example.models.QuestionSet (<no alias>) -> questionse0_
[2013-07-08 17:31:42] [DEBUG] FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
[2013-07-08 17:31:42] [DEBUG] DotNode:599 - getDataType() : id -> org.hibernate.type.IntegerType@7686b376
[2013-07-08 17:31:42] [DEBUG] FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> questionse0_.id
[2013-07-08 17:31:42] [WARN ] HqlSqlWalker:929 - [DEPRECATION] Encountered positional parameter near line 1, column 48.  Positional parameter are considered deprecated; use named parameters or JPA-style positional parameters instead.
[2013-07-08 17:31:42] [DEBUG] HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
[2013-07-08 17:31:42] [DEBUG] HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} QUESTIONSETS questionse0_ ) ( where ( = ( questionse0_.id {synthetic-alias} id ) ? ) ) )
[2013-07-08 17:31:42] [DEBUG] HqlSqlWalker:869 - Derived SELECT clause created.
[2013-07-08 17:31:42] [DEBUG] JoinProcessor:177 - Using FROM fragment [QUESTIONSETS questionse0_]
[2013-07-08 17:31:42] [DEBUG] HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
[2013-07-08 17:31:42] [DEBUG] QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (QUESTIONSETS)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'questionse0_.id as id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=QUESTIONSETS,tableAlias=questionse0_,origin=null,columns={,className=org.example.models.QuestionSet}}}
    |  \-[SQL_TOKEN] SqlFragment: 'questionse0_.name as name2_1_, questionse0_.owner_id as owner3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[questionse0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'QUESTIONSETS questionse0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=QUESTIONSETS,tableAlias=questionse0_,origin=null,columns={,className=org.example.models.QuestionSet}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'questionse0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=questionse0_,className=org.example.models.QuestionSet,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[PARAM] ParameterNode: '?' {ordinal=0, expectedType=org.hibernate.type.IntegerType@7686b376}

[2013-07-08 17:31:42] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:31:42] [DEBUG] QueryTranslatorImpl:235 - HQL: from org.example.models.QuestionSet where id = ?
[2013-07-08 17:31:42] [DEBUG] QueryTranslatorImpl:236 - SQL: select questionse0_.id as id1_1_, questionse0_.name as name2_1_, questionse0_.owner_id as owner3_1_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:31:42] [DEBUG] ErrorCounter:82 - throwQueryException() : no errors
[2013-07-08 17:31:42] [DEBUG] SQL:104 - select questionse0_.id as id1_1_, questionse0_.name as name2_1_, questionse0_.owner_id as owner3_1_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:31:42] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:31:42] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.QuestionSet#2]
[2013-07-08 17:31:42] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.QuestionSet#2]
[2013-07-08 17:31:42] [DEBUG] Loader:2105 - Loading entity: [org.example.models.User#aaa98]
[2013-07-08 17:31:42] [DEBUG] SQL:104 - select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:31:42] [DEBUG] Loader:941 - Result set row: 0
[2013-07-08 17:31:42] [DEBUG] Loader:1475 - Result row: EntityKey[org.example.models.User#aaa98]
[2013-07-08 17:31:42] [DEBUG] TwoPhaseLoad:158 - Resolving associations for [org.example.models.User#aaa98]
[2013-07-08 17:31:42] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.User#aaa98]
[2013-07-08 17:31:42] [DEBUG] Loader:2129 - Done entity load
[2013-07-08 17:31:42] [DEBUG] TwoPhaseLoad:277 - Done materializing entity [org.example.models.QuestionSet#2]
[2013-07-08 17:31:42] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:31:42] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:31:42] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:31:42] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2013-07-08 17:31:42] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:31:42] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:31:42] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=2, name=Name, owner=org.example.models.User#aaa98}
[2013-07-08 17:31:42] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:31:42] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:31:42] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:31:42] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:38:39] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 17:38:39] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:38:39] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T163130Z, fail: 
[2013-07-08 17:38:39] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T163132Z Last: 1373301092165 Life: 9461 ID: 1373301090-20416-5 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:38:39] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:38:39] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 17:40:10] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 17:40:10] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 17:40:10] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 17:40:10] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 17:40:10] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 17:40:10] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 17:40:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@1f4649ed
[2013-07-08 17:40:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@1f4649ed
[2013-07-08 17:40:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1f4649ed
[2013-07-08 17:40:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c4c7e10
[2013-07-08 17:40:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@54b4b0a4
[2013-07-08 17:40:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@225bcd91
[2013-07-08 17:40:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@1a0283e
[2013-07-08 17:40:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@1a0283e
[2013-07-08 17:40:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1a0283e
[2013-07-08 17:40:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@15837e8
[2013-07-08 17:40:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@15837e8
[2013-07-08 17:40:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@15837e8
[2013-07-08 17:40:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@5092eb76
[2013-07-08 17:40:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@5092eb76
[2013-07-08 17:40:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5092eb76
[2013-07-08 17:40:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@50f8ae79
[2013-07-08 17:40:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@50f8ae79
[2013-07-08 17:40:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@50f8ae79
[2013-07-08 17:40:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@174da86b
[2013-07-08 17:40:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@174da86b
[2013-07-08 17:40:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@174da86b
[2013-07-08 17:40:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@db951f2
[2013-07-08 17:40:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@db951f2
[2013-07-08 17:40:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@db951f2
[2013-07-08 17:40:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@3aa42c31
[2013-07-08 17:40:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@3aa42c31
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3aa42c31
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@fe14de0
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@fe14de0
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d6d46d7
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d6d46d7
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@1b0fb9bd
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1b0fb9bd
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3bad0d89
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@14cef147
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@57004a1a
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@57004a1a
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@5efcc13d
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5efcc13d
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@4dc4e792
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4dc4e792
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3e7c609
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e7c609
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e7c609
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7810a519
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@34a083f2
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@34a083f2
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@34a083f2
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5c392fe8
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@1d30b5e2
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1d30b5e2
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@531a700a
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@531a700a
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4aa0c486
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4aa0c486
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@3a7e479a
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3a7e479a
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4e0bd5df
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4e0bd5df
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6a46f764
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6d289e48
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@49b9a538
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@49b9a538
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@49b9a538
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@c1bb35b
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@c1bb35b
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@c1bb35b
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@3f2f529b
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@37285252
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@37285252
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@37285252
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1ac84361
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1ac84361
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1ac84361
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@5f99ea3c
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@2bf87baf
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@17e319a
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@17e319a
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@15f7dbd8
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@dc44a6d
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@dc44a6d
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@4190d536
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4190d536
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2d6acad2
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2501e081
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@199b7c62
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@154db52b
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@154db52b
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4df2a9da
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@766d4f30
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@26a150e
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@28c4b5f
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@48a84b47
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@20e64795
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6e659812
[2013-07-08 17:40:11] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4fe2fe5d
[2013-07-08 17:40:11] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 17:40:11] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 17:40:11] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 17:40:11] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 17:40:11] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 17:40:11] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 17:40:11] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 17:40:11] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 17:40:11] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 17:40:11] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 17:40:11] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 17:40:11] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 17:40:11] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 17:40:11] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 17:40:11] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 17:40:11] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 17:40:11] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 17:40:11] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 17:40:11] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 17:40:11] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 17:40:11] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 17:40:11] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 17:40:11] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 17:40:11] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 17:40:11] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 17:40:11] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 17:40:11] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 17:40:11] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 17:40:11] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 17:40:11] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 17:40:11] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 17:40:11] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 17:40:11] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 17:40:11] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 17:40:11] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 17:40:11] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 17:40:11] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 17:40:11] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:40:11] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:40:11] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 17:40:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:40:11] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:40:11] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 17:40:11] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 17:40:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:40:11] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:40:11] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:40:11] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:40:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:40:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 17:40:11] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 17:40:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 17:40:11] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 17:40:11] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 17:40:11] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 17:40:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:40:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 17:40:11] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 17:40:11] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 17:40:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:40:11] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:40:11] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 17:40:11] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 17:40:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:40:11] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:40:11] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:40:11] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:40:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 17:40:11] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 17:40:11] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 17:40:11] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 17:40:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:40:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 17:40:11] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 17:40:11] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 17:40:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:40:11] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:40:11] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 17:40:11] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 17:40:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:40:11] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:40:11] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:40:11] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:40:11] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 17:40:11] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 17:40:11] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 17:40:11] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 17:40:11] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:40:11] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 17:40:11] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:40:11] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 17:40:11] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:40:11] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 17:40:11] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:40:11] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:40:11] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:40:11] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:40:11] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:40:11] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:40:11] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:40:11] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:40:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:40:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:40:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 17:40:11] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 17:40:11] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 17:40:11] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 17:40:11] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 17:40:11] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 17:40:11] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:40:11] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 17:40:11] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 17:40:11] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 17:40:11] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 17:40:11] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 17:40:11] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 17:40:11] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 17:40:11] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 17:40:11] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 17:40:11] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 17:40:11] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 17:40:11] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 17:40:11] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 17:40:11] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 17:40:11] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 17:40:11] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 17:40:11] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 17:40:11] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:40:11] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:40:11] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:40:11] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:40:11] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:40:11] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:40:11] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:40:11] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:40:11] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@31ec0130
[2013-07-08 17:40:11] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 6345e055-7922-443e-b1c9-2aaee1f44666 (<unnamed>)
[2013-07-08 17:40:11] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 17:40:11] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 17:40:11] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:40:11] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:40:11] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:40:11] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:40:11] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:40:11] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:40:11] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:40:11] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:40:11] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:40:11] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:40:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:40:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:40:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:40:11] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:40:11] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:40:11] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:40:11] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:40:11] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:40:11] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:40:11] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:40:11] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:40:11] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:40:11] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:40:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:40:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:40:11] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:40:11] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:40:11] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 17:40:11] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 17:40:11] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 17:40:11] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 17:40:11] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 17:40:11] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 17:40:11] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 17:40:11] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 17:40:11] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 17:40:11] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 17:40:11] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 17:40:11] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 17:40:11] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 17:40:11] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 17:40:11] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 17:40:11] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 17:40:11] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 17:40:11] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 17:40:11] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 17:40:11] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 17:40:11] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 17:40:11] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 17:40:11] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 17:40:11] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 17:40:11] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 17:40:33] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 17:40:33] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 17:40:33] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 17:40:33] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 17:40:33] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 17:40:33] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@315cb235
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@315cb235
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@315cb235
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@87e05c4
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61557a77
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5b7ed710
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@3cf4921b
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@3cf4921b
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3cf4921b
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@3cd5e270
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@3cd5e270
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3cd5e270
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@242110fc
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@242110fc
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@242110fc
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@16e15a69
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@16e15a69
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@16e15a69
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@11f13b08
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@11f13b08
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@11f13b08
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@3c9d17e
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@3c9d17e
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3c9d17e
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@40c11557
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@40c11557
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@40c11557
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@153c765e
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@153c765e
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d054f93
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d054f93
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@26e2e276
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@26e2e276
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@263534c1
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@55611ed3
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@961401f
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@961401f
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@b5c44d6
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@b5c44d6
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@45135cd9
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@45135cd9
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@798a62f6
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@798a62f6
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@798a62f6
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2edad4b8
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@71594ba3
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@71594ba3
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@71594ba3
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@695e0163
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@670064a4
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@670064a4
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@52039826
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@52039826
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3067e236
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3067e236
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@6d386751
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6d386751
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3bdbe135
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3bdbe135
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4532b038
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@62ae4f8b
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@a2026f3
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@a2026f3
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@a2026f3
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2ec7ecd5
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2ec7ecd5
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2ec7ecd5
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@4a32ef2d
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@2f1aa58b
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2f1aa58b
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@2f1aa58b
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6ec44aaf
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6ec44aaf
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6ec44aaf
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@1d5c0c91
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@2d4e3d95
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@314382c6
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@314382c6
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@642ddc4c
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@4f7820c3
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4f7820c3
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@584ba778
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@584ba778
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d17140b
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@489a44f1
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@10393e97
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@34baf4ae
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@34baf4ae
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6fd3633c
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1f18317f
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6d5998cb
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@153e6f83
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@360b0c5a
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@f58046e
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5b8ad9a0
[2013-07-08 17:40:33] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@78d5c653
[2013-07-08 17:40:33] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 17:40:33] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 17:40:33] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 17:40:33] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 17:40:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 17:40:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 17:40:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 17:40:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 17:40:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 17:40:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 17:40:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 17:40:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 17:40:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 17:40:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 17:40:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 17:40:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 17:40:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 17:40:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 17:40:33] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 17:40:33] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 17:40:33] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 17:40:33] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 17:40:33] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 17:40:33] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 17:40:33] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 17:40:33] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 17:40:33] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 17:40:33] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 17:40:33] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 17:40:33] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 17:40:33] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 17:40:33] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 17:40:33] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 17:40:33] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 17:40:33] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 17:40:33] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 17:40:33] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 17:40:33] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 17:40:33] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 17:40:33] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 17:40:33] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 17:40:33] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 17:40:33] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 17:40:33] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 17:40:33] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 17:40:33] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 17:40:34] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 17:40:34] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 17:40:34] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 17:40:34] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 17:40:34] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 17:40:34] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 17:40:34] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:40:34] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:40:34] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 17:40:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:40:34] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:40:34] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 17:40:34] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 17:40:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:40:34] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:40:34] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:40:34] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:40:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:40:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 17:40:34] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 17:40:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 17:40:34] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 17:40:34] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 17:40:34] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 17:40:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:40:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 17:40:34] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 17:40:34] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 17:40:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:40:34] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:40:34] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 17:40:34] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 17:40:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:40:34] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:40:34] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:40:34] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:40:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 17:40:34] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 17:40:34] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 17:40:34] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 17:40:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:40:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 17:40:34] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 17:40:34] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 17:40:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:40:34] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:40:34] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 17:40:34] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 17:40:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:40:34] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:40:34] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:40:34] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:40:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 17:40:34] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 17:40:34] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 17:40:34] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 17:40:34] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:40:34] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 17:40:34] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:40:34] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 17:40:34] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:40:34] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 17:40:34] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:40:34] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:40:34] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:40:34] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:40:34] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:40:34] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:40:34] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:40:34] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:40:34] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:40:34] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:40:34] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 17:40:34] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 17:40:34] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 17:40:34] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 17:40:34] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 17:40:34] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 17:40:34] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 17:40:34] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:40:34] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:40:34] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:40:34] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 17:40:34] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 17:40:34] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 17:40:34] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 17:40:34] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 17:40:34] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 17:40:34] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 17:40:34] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 17:40:34] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 17:40:34] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 17:40:34] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 17:40:34] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 17:40:34] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 17:40:34] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 17:40:34] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 17:40:34] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 17:40:34] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 17:40:34] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:40:34] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:40:34] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:40:34] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:40:34] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:40:34] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:40:34] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:40:34] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:40:34] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@61e481c1
[2013-07-08 17:40:34] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: d27c0be2-360e-4af8-b87f-5b314d98129e (<unnamed>)
[2013-07-08 17:40:34] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 17:40:34] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 17:40:34] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:40:34] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:40:34] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:40:34] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:40:34] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:40:34] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:40:34] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:40:34] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:40:34] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:40:34] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:40:34] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:40:34] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:40:34] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:40:34] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:40:34] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:40:34] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:40:34] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:40:34] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:40:34] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:40:34] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:40:34] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:40:34] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:40:34] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:40:34] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:40:34] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:40:34] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:40:34] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:40:34] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:40:34] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:40:34] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:40:34] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:40:34] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:40:34] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:40:34] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:40:34] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:40:34] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 17:40:34] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 17:40:34] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 17:40:34] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 17:40:34] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 17:40:34] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 17:40:34] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 17:40:34] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 17:40:34] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 17:40:34] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 17:40:34] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 17:40:34] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 17:40:34] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 17:40:34] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 17:40:34] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 17:40:34] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 17:40:34] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 17:40:34] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 17:40:34] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 17:40:34] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 17:40:34] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 17:40:34] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 17:40:34] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 17:40:34] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 17:40:34] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 17:40:35] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 17:40:35] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:40:35] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 17:40:35] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 17:40:35] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-08 17:40:37] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 17:40:37] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T164037Z!1373301635-20779-0!http://localhost:8080/ldap/jcb98!jcb98!!pwd!8916!!2!vCr3msa39H094LJ.vsx2OxqEtVj1j36kpzvAkr0s0RruTRCFyN73zIsYo68P5AOOFn1i5XiQM97RoYV8n18EqR1buUVo4J9whTHS1mVqpZxUoK05rm3rkdrA9MU9C6UF.aqWlFJJ4Drkv.ivdh7tJaufrGGMdJqSriJp4oTIbvI_
[2013-07-08 17:40:37] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T164035Z, fail: 
[2013-07-08 17:40:37] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 17:40:37] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 17:40:37] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T164037Z Last: 1373301637532 Life: 8916 ID: 1373301635-20779-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:40:37] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 17:40:37] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:40:37] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T164035Z, fail: 
[2013-07-08 17:40:37] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T164037Z Last: 1373301637532 Life: 8916 ID: 1373301635-20779-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:40:37] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:40:37] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 17:43:34] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 17:43:34] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 17:43:34] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 17:43:34] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 17:43:34] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 17:43:34] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@10ba5a81
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@10ba5a81
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@10ba5a81
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1a0283e
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c429be9
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@62f04dae
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@5092eb76
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@5092eb76
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5092eb76
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@50f8ae79
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@50f8ae79
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@50f8ae79
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@381bd13
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@381bd13
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@381bd13
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@6f3d5f21
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@6f3d5f21
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f3d5f21
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@10bfb545
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@10bfb545
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@10bfb545
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@1b0fb9bd
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@1b0fb9bd
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1b0fb9bd
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@5e53bbfa
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@5e53bbfa
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5e53bbfa
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@54011d95
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@54011d95
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@39ce9085
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@39ce9085
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@23f2bc83
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@23f2bc83
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@c387202
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@111bda67
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@3e7c609
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3e7c609
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@cc749e4
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@cc749e4
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@2e7857a5
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2e7857a5
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@531a700a
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@531a700a
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@531a700a
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5fb45ddc
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@2f87fafc
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2f87fafc
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2f87fafc
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@22c8ebd6
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@6b064b80
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6b064b80
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@3c6e4ba6
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3c6e4ba6
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@55a517bd
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@55a517bd
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@1db5d2b2
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1db5d2b2
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7a258c74
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7a258c74
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3834a1c8
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@51bfa303
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@71e13a2c
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@71e13a2c
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@71e13a2c
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@468034b6
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@468034b6
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@468034b6
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@976484e
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@74bffc3a
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@74bffc3a
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@74bffc3a
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@59e14a78
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@59e14a78
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@59e14a78
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@db2b10a
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@3ea763a
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@dc44a6d
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@dc44a6d
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7794566d
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@2501e081
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2501e081
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@4df2a9da
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4df2a9da
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@26a150e
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@48a84b47
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@4fe2fe5d
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@7a315068
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7a315068
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7ba6eeab
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@c7f5bf9
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7d6f3ed7
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1286d597
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5230b601
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7bfd25ce
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@28bd36fa
[2013-07-08 17:43:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1e646bfb
[2013-07-08 17:43:34] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 17:43:34] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 17:43:34] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 17:43:34] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 17:43:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 17:43:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 17:43:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 17:43:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 17:43:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 17:43:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 17:43:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 17:43:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 17:43:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 17:43:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 17:43:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 17:43:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 17:43:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 17:43:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 17:43:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 17:43:34] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 17:43:34] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 17:43:34] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 17:43:34] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 17:43:34] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 17:43:34] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 17:43:34] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 17:43:34] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 17:43:34] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 17:43:34] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 17:43:34] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 17:43:34] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 17:43:34] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 17:43:34] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 17:43:34] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 17:43:34] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 17:43:34] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 17:43:34] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 17:43:34] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 17:43:34] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 17:43:34] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 17:43:35] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 17:43:35] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 17:43:35] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 17:43:35] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 17:43:35] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 17:43:35] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 17:43:35] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 17:43:35] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 17:43:35] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 17:43:35] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 17:43:35] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 17:43:35] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 17:43:35] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:43:35] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:43:35] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 17:43:35] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:43:35] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:43:35] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 17:43:35] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 17:43:35] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:43:35] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:43:35] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:43:35] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:43:35] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:43:35] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 17:43:35] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 17:43:35] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 17:43:35] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 17:43:35] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 17:43:35] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 17:43:35] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:43:35] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 17:43:35] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 17:43:35] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 17:43:35] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:43:35] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:43:35] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 17:43:35] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 17:43:35] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:43:35] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:43:35] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:43:35] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:43:35] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 17:43:35] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 17:43:35] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 17:43:35] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 17:43:35] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:43:35] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 17:43:35] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 17:43:35] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 17:43:35] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:43:35] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:43:35] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 17:43:35] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 17:43:35] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:43:35] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:43:35] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:43:35] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:43:35] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 17:43:35] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 17:43:35] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 17:43:35] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 17:43:35] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:43:35] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 17:43:35] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:43:35] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 17:43:35] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:43:35] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 17:43:35] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:43:35] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:43:35] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:43:35] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:43:35] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:43:35] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:43:35] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:43:35] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:43:35] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:43:35] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:43:35] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 17:43:35] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 17:43:35] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 17:43:35] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 17:43:35] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 17:43:35] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 17:43:35] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 17:43:35] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:43:35] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:43:35] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:43:35] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 17:43:35] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 17:43:35] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 17:43:35] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 17:43:35] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 17:43:35] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 17:43:35] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 17:43:35] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 17:43:35] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 17:43:35] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 17:43:35] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 17:43:35] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 17:43:35] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 17:43:35] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 17:43:35] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 17:43:35] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 17:43:35] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 17:43:35] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:43:35] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:43:35] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:43:35] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:43:35] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:43:35] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:43:35] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:43:35] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:43:35] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3956f14c
[2013-07-08 17:43:35] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: c34be7c2-06f7-48af-9b2a-e78d88a6e1cb (<unnamed>)
[2013-07-08 17:43:35] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 17:43:35] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 17:43:35] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:43:35] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:43:35] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:43:35] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:43:35] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:43:35] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:43:35] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:43:35] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:43:35] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:43:35] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:43:35] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:43:35] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:43:35] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:43:35] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:43:35] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:43:35] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:43:35] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:43:35] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:43:35] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:43:35] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:43:35] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:43:35] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:43:35] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:43:35] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:43:35] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:43:35] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:43:35] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:43:35] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:43:35] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:43:35] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:43:35] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:43:35] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:43:35] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:43:35] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:43:35] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:43:35] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 17:43:35] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 17:43:35] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 17:43:35] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 17:43:35] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 17:43:35] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 17:43:35] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 17:43:35] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 17:43:35] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 17:43:35] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 17:43:35] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 17:43:35] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 17:43:35] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 17:43:35] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 17:43:35] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 17:43:35] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 17:43:35] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 17:43:35] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 17:43:35] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 17:43:35] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 17:43:35] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 17:43:35] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 17:43:35] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 17:43:35] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 17:43:35] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 17:43:36] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 17:43:36] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:43:36] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 17:43:36] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 17:43:36] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-08 17:43:37] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 17:43:37] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T164337Z!1373301816-20850-0!http://localhost:8080/ldap/jcb98!jcb98!!pwd!8735!!2!fGkad8HHiBDYwiHD.K7trkt5DWYcc0tl86sZW7YuGzafcUulhlbMIAEvtDGQ-dHfa7GUGAnMA5OtdzwrqO--HmZU5fHBxy0zKMGZDCqX3ZSLPja04.NcG8MDxzlUtnosr482s5GyD3nWAHOY.c2qj9NEmH3iEjxMMkK7Mz15vM4_
[2013-07-08 17:43:37] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T164336Z, fail: 
[2013-07-08 17:43:37] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 17:43:37] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 17:43:37] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T164337Z Last: 1373301817977 Life: 8735 ID: 1373301816-20850-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:43:37] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 17:43:37] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:43:37] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T164336Z, fail: 
[2013-07-08 17:43:37] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T164337Z Last: 1373301817977 Life: 8735 ID: 1373301816-20850-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:43:37] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:43:38] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 17:44:10] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 17:44:10] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 17:44:10] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 17:44:10] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 17:44:10] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 17:44:10] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@3f9f76a5
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@3f9f76a5
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3f9f76a5
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@71e852be
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@22b90a6e
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3914fc36
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@39b1ff47
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@39b1ff47
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@39b1ff47
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@46be6108
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@46be6108
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@46be6108
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@5da0b94d
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@5da0b94d
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5da0b94d
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@7686b376
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@7686b376
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7686b376
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@6b6c14c0
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@6b6c14c0
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6b6c14c0
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@1b2ede8
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@1b2ede8
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1b2ede8
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@7051630a
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@7051630a
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7051630a
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@10bfb545
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@10bfb545
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@145d424
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@145d424
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@256b352c
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@256b352c
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5e53bbfa
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1e4276fd
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@54011d95
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@54011d95
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@23f2bc83
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@23f2bc83
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@3a3f4a21
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3a3f4a21
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@657a7adf
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@657a7adf
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@657a7adf
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@cc749e4
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@16369fdc
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@16369fdc
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@16369fdc
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2e7857a5
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@68f51766
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@68f51766
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@6cb1cb25
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6cb1cb25
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@c65fb1
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@c65fb1
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@388eed76
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@388eed76
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6b064b80
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6b064b80
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@591bfcbe
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5afc0f5
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@3b0e2558
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3b0e2558
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@3b0e2558
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6e9c2192
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6e9c2192
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6e9c2192
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@3bd85e85
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@3834a1c8
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3834a1c8
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@3834a1c8
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@51bfa303
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@51bfa303
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@51bfa303
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@71e13a2c
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@468034b6
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@3ea763a
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3ea763a
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@43824d2c
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@51f2412a
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@51f2412a
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@b9deddb
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@b9deddb
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3e29b849
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1e3a4822
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@2f031310
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@20b124fa
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@20b124fa
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@766d4f30
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@26a150e
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@28c4b5f
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@48a84b47
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@20e64795
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6e659812
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4fe2fe5d
[2013-07-08 17:44:10] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3fa9b4a4
[2013-07-08 17:44:10] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 17:44:10] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 17:44:10] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 17:44:10] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 17:44:10] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 17:44:10] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 17:44:10] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 17:44:10] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 17:44:10] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 17:44:10] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 17:44:10] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 17:44:10] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 17:44:10] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 17:44:10] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 17:44:10] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 17:44:10] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 17:44:10] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 17:44:10] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 17:44:10] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 17:44:10] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 17:44:10] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 17:44:10] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 17:44:10] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 17:44:10] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 17:44:10] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 17:44:10] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 17:44:10] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 17:44:10] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 17:44:10] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 17:44:10] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 17:44:10] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 17:44:10] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 17:44:10] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 17:44:10] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 17:44:10] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 17:44:10] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 17:44:10] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 17:44:10] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:44:10] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:44:10] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 17:44:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:44:10] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:44:10] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 17:44:10] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 17:44:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:44:10] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:44:10] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:44:10] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:44:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:44:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 17:44:10] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 17:44:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 17:44:10] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 17:44:10] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 17:44:10] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 17:44:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:44:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 17:44:10] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 17:44:10] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 17:44:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:44:10] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:44:10] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 17:44:10] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 17:44:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:44:10] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:44:10] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:44:10] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:44:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 17:44:10] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 17:44:10] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 17:44:10] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 17:44:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:44:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 17:44:10] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 17:44:10] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 17:44:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:44:10] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:44:10] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 17:44:10] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 17:44:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:44:10] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:44:10] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:44:10] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:44:10] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 17:44:10] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 17:44:10] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 17:44:10] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 17:44:10] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:44:10] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 17:44:10] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:44:10] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 17:44:10] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:44:10] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 17:44:10] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:44:10] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:44:10] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:44:10] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:44:10] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:44:10] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:44:10] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:44:10] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:44:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:44:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:44:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 17:44:10] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 17:44:10] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 17:44:10] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 17:44:10] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 17:44:10] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 17:44:10] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:44:10] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 17:44:10] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 17:44:10] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 17:44:10] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 17:44:10] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 17:44:10] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 17:44:10] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 17:44:10] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 17:44:10] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 17:44:10] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 17:44:10] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 17:44:10] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 17:44:10] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 17:44:10] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 17:44:10] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 17:44:10] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 17:44:10] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 17:44:10] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:44:10] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:44:10] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:44:10] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:44:10] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:44:10] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:44:10] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:44:10] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:44:10] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89ffb18
[2013-07-08 17:44:10] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 326f4141-bddc-4df6-85f2-925e1e31daba (<unnamed>)
[2013-07-08 17:44:10] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 17:44:10] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 17:44:10] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:44:10] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:44:10] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:44:10] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:44:10] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:44:10] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:44:10] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:44:10] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:44:10] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:44:10] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:44:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:44:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:44:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:44:10] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:44:10] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:44:10] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:44:10] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:44:10] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:44:10] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:44:10] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:44:10] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:44:10] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:44:10] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:44:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:44:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:44:10] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:44:10] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:44:10] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 17:44:10] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 17:44:10] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 17:44:10] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 17:44:10] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 17:44:10] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 17:44:10] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 17:44:10] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 17:44:10] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 17:44:10] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 17:44:10] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 17:44:10] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 17:44:10] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 17:44:10] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 17:44:10] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 17:44:10] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 17:44:10] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 17:44:10] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 17:44:10] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 17:44:10] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 17:44:10] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 17:44:10] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 17:44:10] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 17:44:10] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 17:44:10] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 17:44:11] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 17:44:11] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:44:11] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 17:44:11] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 17:44:11] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-08 17:44:12] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 17:44:12] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T164412Z!1373301851-20543-2!http://localhost:8080/ldap/jcb98!jcb98!!pwd!8700!!2!aCoarnFcct8gqt8LvPhyfE01J1EM63QK74ibqPvWnhj1vSoZr.oM7Ki.DAlCzhZ6XZangfg.6ocDyXOISqp42BfS7CS0ipZTG6tpddgxi2OkP1AxIOPJYXfKYzH22qtF6.p2b5zk95KEjgbWU-4GeYXJyXseW3Qy44jG5m5M1W4_
[2013-07-08 17:44:12] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T164411Z, fail: 
[2013-07-08 17:44:12] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 17:44:12] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 17:44:12] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T164412Z Last: 1373301852924 Life: 8700 ID: 1373301851-20543-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:44:12] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 17:44:12] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:44:12] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T164411Z, fail: 
[2013-07-08 17:44:12] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T164412Z Last: 1373301852924 Life: 8700 ID: 1373301851-20543-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:44:12] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:44:12] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 17:45:48] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 17:45:48] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 17:45:48] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 17:45:48] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 17:45:48] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 17:45:48] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e0ca6ae
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e0ca6ae
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e0ca6ae
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@11e3c2c6
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@717757ad
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4c18e99
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@390b755d
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@390b755d
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@390b755d
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@7e266b44
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@7e266b44
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7e266b44
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@3914fc36
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@3914fc36
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3914fc36
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@31f9b804
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@31f9b804
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@31f9b804
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@46be6108
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@46be6108
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@46be6108
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@5c429be9
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@5c429be9
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5c429be9
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@724a2dd4
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@724a2dd4
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@724a2dd4
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@50f8ae79
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@50f8ae79
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@db2e44d
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@db2e44d
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@6b6c14c0
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6b6c14c0
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@52f9cbe5
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@a211b37
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@7051630a
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7051630a
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@10bfb545
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@10bfb545
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@1b0fb9bd
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1b0fb9bd
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4b5a4a77
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4b5a4a77
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4b5a4a77
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@54011d95
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@39ce9085
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@39ce9085
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@39ce9085
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5efcc13d
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@2075a744
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2075a744
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@3a3f4a21
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3a3f4a21
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f0e0eb5
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f0e0eb5
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@4c18fa85
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4c18fa85
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@34a083f2
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@34a083f2
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c392fe8
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1d30b5e2
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@531a700a
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@531a700a
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@531a700a
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4aa0c486
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4aa0c486
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4aa0c486
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@3a7e479a
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@86ecec5
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@86ecec5
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@86ecec5
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4e0bd5df
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4e0bd5df
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4e0bd5df
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@591bfcbe
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@5afc0f5
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@51bfa303
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@51bfa303
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5f99ea3c
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@55e03a61
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@55e03a61
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@6b91602
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6b91602
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@49c88f2b
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4de514a9
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@50baa573
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@164ca42b
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@164ca42b
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a393167
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@70da8742
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1ae637f0
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@627b5c
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4190d536
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@b9deddb
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2d6acad2
[2013-07-08 17:45:48] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3e29b849
[2013-07-08 17:45:48] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 17:45:48] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 17:45:48] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 17:45:48] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 17:45:48] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 17:45:48] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 17:45:48] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 17:45:48] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 17:45:48] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 17:45:48] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 17:45:48] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 17:45:48] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 17:45:48] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 17:45:48] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 17:45:48] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 17:45:48] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 17:45:48] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 17:45:48] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 17:45:48] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 17:45:48] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 17:45:48] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 17:45:48] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 17:45:48] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 17:45:48] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 17:45:48] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 17:45:48] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 17:45:48] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 17:45:48] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 17:45:48] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 17:45:48] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 17:45:48] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 17:45:48] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 17:45:48] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 17:45:48] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 17:45:48] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 17:45:48] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 17:45:48] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 17:45:48] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:45:48] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:45:48] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 17:45:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:45:48] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:45:48] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 17:45:48] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 17:45:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:45:48] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:45:48] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:45:48] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:45:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:45:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 17:45:48] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 17:45:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 17:45:48] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 17:45:48] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 17:45:48] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 17:45:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:45:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 17:45:48] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 17:45:48] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 17:45:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:45:48] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:45:48] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 17:45:48] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 17:45:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:45:48] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:45:48] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:45:48] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:45:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 17:45:48] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 17:45:48] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 17:45:48] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 17:45:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:45:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 17:45:48] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 17:45:48] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 17:45:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:45:48] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:45:48] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 17:45:48] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 17:45:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:45:48] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:45:48] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:45:48] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:45:48] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 17:45:48] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 17:45:48] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 17:45:48] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 17:45:48] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:45:48] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 17:45:48] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:45:48] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 17:45:48] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:45:48] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 17:45:48] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:45:48] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:45:48] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:45:48] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:45:48] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:45:48] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:45:48] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:45:48] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:45:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:45:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:45:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 17:45:48] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 17:45:48] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 17:45:48] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 17:45:48] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 17:45:48] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 17:45:48] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:45:48] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 17:45:48] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 17:45:48] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 17:45:48] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 17:45:48] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 17:45:48] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 17:45:48] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 17:45:48] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 17:45:48] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 17:45:48] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 17:45:48] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 17:45:48] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 17:45:48] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 17:45:48] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 17:45:48] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 17:45:48] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 17:45:48] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 17:45:48] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:45:48] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:45:48] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:45:48] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:45:48] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:45:48] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:45:48] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:45:48] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:45:48] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2e2e1b6c
[2013-07-08 17:45:48] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 44aa8e1d-bcce-4911-bb34-67e8974e7e5a (<unnamed>)
[2013-07-08 17:45:48] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 17:45:48] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 17:45:48] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:45:48] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:45:48] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:45:48] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:45:48] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:45:48] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:45:48] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:45:48] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:45:48] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:45:48] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:45:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:45:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:45:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:45:48] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:45:48] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:45:48] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:45:48] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:45:48] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:45:48] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:45:48] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:45:48] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:45:48] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:45:48] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:45:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:45:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:45:48] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:45:48] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:45:48] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 17:45:48] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 17:45:48] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 17:45:48] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 17:45:48] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 17:45:48] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 17:45:48] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 17:45:48] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 17:45:48] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 17:45:48] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 17:45:48] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 17:45:48] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 17:45:48] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 17:45:48] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 17:45:48] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 17:45:48] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 17:45:48] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 17:45:48] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 17:45:48] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 17:45:48] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 17:45:48] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 17:45:48] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 17:45:48] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 17:45:48] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 17:45:48] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 17:45:49] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 17:45:49] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:45:49] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 17:45:49] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 17:45:49] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-08 17:45:51] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 17:45:51] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T164551Z!1373301949-20830-2!http://localhost:8080/ldap/jcb98!jcb98!!pwd!8602!!2!ay6prp2AkED6JdC6vP9gEvkeD3vJ6q0k3kbjhXKMU-S67A.RRiZ45b0R7w79TvTHgj-nTNj1xhEqvV0mVk.KGdYEpICy0G2UFPetZ9tJhlXj8Z2gwiAGiL0neS9-.ZmSStC40Me3k1SWwgdKLSArU2IXrejhZEw8t2JvUGxw1Aw_
[2013-07-08 17:45:51] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T164549Z, fail: 
[2013-07-08 17:45:51] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 17:45:51] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 17:45:51] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T164551Z Last: 1373301951402 Life: 8602 ID: 1373301949-20830-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:45:51] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 17:45:51] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:45:51] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T164549Z, fail: 
[2013-07-08 17:45:51] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T164551Z Last: 1373301951402 Life: 8602 ID: 1373301949-20830-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:45:51] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:45:51] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 17:46:10] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 17:46:10] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:46:10] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T164549Z, fail: 
[2013-07-08 17:46:10] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T164551Z Last: 1373301951402 Life: 8602 ID: 1373301949-20830-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:46:10] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:46:10] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 17:46:11] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 17:46:11] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:46:11] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T164549Z, fail: 
[2013-07-08 17:46:11] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T164551Z Last: 1373301951402 Life: 8602 ID: 1373301949-20830-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:46:11] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:46:11] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 17:46:11] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 17:46:11] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:46:11] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T164549Z, fail: 
[2013-07-08 17:46:11] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T164551Z Last: 1373301951402 Life: 8602 ID: 1373301949-20830-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:46:11] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:46:11] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 17:46:12] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 17:46:12] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:46:12] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T164549Z, fail: 
[2013-07-08 17:46:12] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T164551Z Last: 1373301951402 Life: 8602 ID: 1373301949-20830-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:46:12] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:46:12] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 17:46:12] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 17:46:12] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:46:12] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T164549Z, fail: 
[2013-07-08 17:46:12] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T164551Z Last: 1373301951402 Life: 8602 ID: 1373301949-20830-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:46:12] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:46:12] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 17:48:58] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 17:48:58] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 17:48:58] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 17:48:58] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 17:48:58] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 17:48:58] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@54eeabe8
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@54eeabe8
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@54eeabe8
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7cd47880
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6406f3ea
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5092eb76
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@57044c5
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@57044c5
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@57044c5
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@174da86b
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@174da86b
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@174da86b
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@448be1c9
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@448be1c9
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@448be1c9
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@10bfb545
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@10bfb545
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@10bfb545
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@1b0fb9bd
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@1b0fb9bd
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1b0fb9bd
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@4b5a4a77
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@4b5a4a77
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4b5a4a77
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@57004a1a
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@57004a1a
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@57004a1a
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5efcc13d
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5efcc13d
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2075a744
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2075a744
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@3a3f4a21
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3a3f4a21
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6f0e0eb5
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4c18fa85
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@7810a519
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7810a519
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@2e7857a5
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2e7857a5
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@531a700a
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@531a700a
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5fb45ddc
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5fb45ddc
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5fb45ddc
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@22c8ebd6
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@6b064b80
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6b064b80
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6b064b80
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@591bfcbe
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@5afc0f5
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5afc0f5
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@3b0e2558
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b0e2558
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6e9c2192
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6e9c2192
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@3bd85e85
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3bd85e85
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51bfa303
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51bfa303
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5f99ea3c
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2bf87baf
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@640ce0bb
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@640ce0bb
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@640ce0bb
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@72e5c94
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@72e5c94
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@72e5c94
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@6fb8fcdd
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@7418e252
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7418e252
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@7418e252
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17e319a
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17e319a
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17e319a
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@43824d2c
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@22c393a1
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@91456c5
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@91456c5
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1ae0e7d
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@72d8978c
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@72d8978c
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@20e64795
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@20e64795
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4fe2fe5d
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1e929ba3
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@637644c8
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@1286d597
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1286d597
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7bfd25ce
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@28bd36fa
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1e646bfb
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@52ed3b53
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@54d1f0ad
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2310195c
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@75f0f8ff
[2013-07-08 17:48:58] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1f6b69d7
[2013-07-08 17:48:58] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 17:48:58] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 17:48:58] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 17:48:58] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 17:48:58] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 17:48:58] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 17:48:58] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 17:48:58] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 17:48:58] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 17:48:58] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 17:48:58] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 17:48:58] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 17:48:58] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 17:48:58] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 17:48:58] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 17:48:58] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 17:48:58] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 17:48:58] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 17:48:58] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 17:48:58] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 17:48:58] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 17:48:58] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 17:48:58] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 17:48:58] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 17:48:58] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 17:48:58] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 17:48:58] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 17:48:58] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 17:48:58] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 17:48:58] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 17:48:58] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 17:48:58] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 17:48:58] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 17:48:58] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 17:48:58] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 17:48:58] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 17:48:58] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 17:48:58] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:48:58] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:48:58] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 17:48:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:48:58] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:48:58] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 17:48:58] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 17:48:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:48:58] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:48:58] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:48:58] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:48:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:48:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 17:48:58] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 17:48:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 17:48:58] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 17:48:58] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 17:48:58] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 17:48:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:48:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 17:48:58] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 17:48:58] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 17:48:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:48:58] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:48:58] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 17:48:58] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 17:48:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:48:58] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:48:58] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:48:58] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:48:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 17:48:58] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 17:48:58] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 17:48:58] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 17:48:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:48:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 17:48:58] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 17:48:58] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 17:48:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:48:58] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:48:58] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 17:48:58] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 17:48:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:48:58] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:48:58] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:48:58] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:48:58] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 17:48:58] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 17:48:58] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 17:48:58] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 17:48:58] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:48:58] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 17:48:58] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:48:58] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 17:48:58] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:48:58] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 17:48:58] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:48:58] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:48:58] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:48:58] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:48:58] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:48:58] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:48:58] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:48:58] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:48:58] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:48:58] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:48:58] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 17:48:58] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 17:48:58] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 17:48:58] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 17:48:58] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 17:48:58] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 17:48:58] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:48:58] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 17:48:58] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 17:48:58] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 17:48:58] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 17:48:58] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 17:48:58] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 17:48:58] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 17:48:58] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 17:48:58] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 17:48:58] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 17:48:58] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 17:48:58] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 17:48:58] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 17:48:58] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 17:48:58] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 17:48:58] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 17:48:58] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 17:48:58] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:48:58] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:48:58] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:48:58] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:48:58] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:48:58] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:48:58] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:48:58] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:48:58] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@477588d5
[2013-07-08 17:48:58] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 32dfa4ae-ac6f-429b-9a76-faae55288667 (<unnamed>)
[2013-07-08 17:48:58] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 17:48:58] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 17:48:58] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:48:58] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:48:58] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:48:58] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:48:58] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:48:58] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:48:58] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:48:58] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:48:58] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:48:58] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:48:58] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:48:58] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:48:58] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:48:58] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:48:58] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:48:58] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:48:58] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:48:58] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:48:58] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:48:58] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:48:58] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:48:58] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:48:58] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:48:58] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:48:58] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:48:58] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:48:58] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:48:58] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 17:48:58] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 17:48:58] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 17:48:58] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 17:48:58] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 17:48:58] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 17:48:58] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 17:48:58] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 17:48:58] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 17:48:58] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 17:48:58] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 17:48:58] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 17:48:58] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 17:48:58] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 17:48:58] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 17:48:58] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 17:48:58] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 17:48:58] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 17:48:58] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 17:48:58] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 17:48:58] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 17:48:58] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 17:48:58] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 17:48:58] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 17:48:58] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 17:49:01] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 17:49:01] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:49:01] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 17:49:01] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 17:49:01] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-08 17:49:03] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 17:49:03] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T164903Z!1373302141-20909-2!http://localhost:8080/ldap/jcb98!jcb98!!pwd!8410!!2!ZFLF6FTP3CpDmM89-YFmRocr7uEXgrcY8G41xSHmdK4jxgCGzX6iN1xVeob34k5eZzyC6eRtd754rpUTMpB5n.Onr.UjVDghunJ6wcHOTn1-A-zYrdYlvdZuhkdtTaASyvpd7oos.EqqReVF54glduZF2pPKo1rlF-Kdj8n1l-4_
[2013-07-08 17:49:03] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T164901Z, fail: 
[2013-07-08 17:49:03] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 17:49:03] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 17:49:03] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T164903Z Last: 1373302143644 Life: 8410 ID: 1373302141-20909-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:49:03] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 17:49:03] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:49:03] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130708T164901Z, fail: 
[2013-07-08 17:49:03] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T164903Z Last: 1373302143644 Life: 8410 ID: 1373302141-20909-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:49:03] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:49:03] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 17:49:22] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-08 17:49:22] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-08 17:49:22] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-08 17:49:22] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-08 17:49:22] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-08 17:49:22] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@1f4649ed
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@1f4649ed
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1f4649ed
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c4c7e10
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@54b4b0a4
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@225bcd91
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@1a0283e
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@1a0283e
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1a0283e
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@15837e8
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@15837e8
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@15837e8
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@5092eb76
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@5092eb76
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5092eb76
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@50f8ae79
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@50f8ae79
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@50f8ae79
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@174da86b
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@174da86b
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@174da86b
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@db951f2
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@db951f2
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@db951f2
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@3aa42c31
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@3aa42c31
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3aa42c31
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@fe14de0
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@fe14de0
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d6d46d7
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d6d46d7
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@1b0fb9bd
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1b0fb9bd
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3bad0d89
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@14cef147
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@57004a1a
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@57004a1a
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@5efcc13d
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5efcc13d
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@4dc4e792
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4dc4e792
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3e7c609
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e7c609
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e7c609
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7810a519
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@34a083f2
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@34a083f2
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@34a083f2
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5c392fe8
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@1d30b5e2
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1d30b5e2
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@531a700a
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@531a700a
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4aa0c486
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4aa0c486
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@3a7e479a
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3a7e479a
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4e0bd5df
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4e0bd5df
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6a46f764
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6d289e48
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@49b9a538
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@49b9a538
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@49b9a538
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@c1bb35b
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@c1bb35b
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@c1bb35b
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@3f2f529b
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@37285252
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@37285252
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@37285252
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1ac84361
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1ac84361
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1ac84361
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@5f99ea3c
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@2bf87baf
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@17e319a
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@17e319a
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@15f7dbd8
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@dc44a6d
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@dc44a6d
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@4190d536
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4190d536
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2d6acad2
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2501e081
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@199b7c62
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@154db52b
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@154db52b
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4df2a9da
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@766d4f30
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@26a150e
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@28c4b5f
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@48a84b47
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@20e64795
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6e659812
[2013-07-08 17:49:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4fe2fe5d
[2013-07-08 17:49:22] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-08 17:49:22] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-08 17:49:22] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-08 17:49:22] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-08 17:49:22] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-08 17:49:22] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-08 17:49:22] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-08 17:49:22] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-08 17:49:22] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-08 17:49:22] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-08 17:49:22] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-08 17:49:22] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-08 17:49:22] [DEBUG] Configuration:1947 - connection.password=
[2013-07-08 17:49:22] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-08 17:49:22] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-08 17:49:22] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-08 17:49:22] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-08 17:49:22] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-08 17:49:22] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-08 17:49:22] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-08 17:49:22] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-08 17:49:22] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-08 17:49:22] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-08 17:49:22] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-08 17:49:22] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-08 17:49:22] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-08 17:49:22] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-08 17:49:22] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-08 17:49:22] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-08 17:49:22] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-08 17:49:22] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-08 17:49:22] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-08 17:49:22] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 17:49:22] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-08 17:49:22] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-08 17:49:22] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-08 17:49:22] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-08 17:49:22] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:49:22] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:49:22] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-08 17:49:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:49:22] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:49:22] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-08 17:49:22] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-08 17:49:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:49:22] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:49:22] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:49:22] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:49:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:49:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-08 17:49:22] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-08 17:49:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-08 17:49:22] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-08 17:49:22] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-08 17:49:22] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-08 17:49:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:49:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-08 17:49:22] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-08 17:49:22] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-08 17:49:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:49:22] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:49:22] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-08 17:49:22] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-08 17:49:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:49:22] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:49:22] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:49:22] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:49:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 17:49:22] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 17:49:22] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 17:49:22] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 17:49:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-08 17:49:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-08 17:49:22] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-08 17:49:22] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-08 17:49:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-08 17:49:22] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-08 17:49:22] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-08 17:49:22] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-08 17:49:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-08 17:49:22] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-08 17:49:22] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-08 17:49:22] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-08 17:49:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-08 17:49:22] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-08 17:49:22] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-08 17:49:22] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-08 17:49:22] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:49:22] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-08 17:49:22] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:49:22] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 17:49:22] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-08 17:49:22] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-08 17:49:22] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:49:22] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:49:22] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:49:22] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:49:22] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:49:22] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:49:22] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:49:22] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:49:22] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:49:22] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:49:22] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-08 17:49:22] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-08 17:49:22] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-08 17:49:22] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-08 17:49:22] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-08 17:49:22] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-08 17:49:22] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:49:22] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-08 17:49:22] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-08 17:49:22] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-08 17:49:22] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 17:49:22] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-08 17:49:22] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-08 17:49:22] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-08 17:49:22] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-08 17:49:22] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-08 17:49:22] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 17:49:22] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-08 17:49:22] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-08 17:49:22] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-08 17:49:22] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-08 17:49:22] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-08 17:49:22] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-08 17:49:22] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-08 17:49:22] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:49:22] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:49:22] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:49:22] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:49:22] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:49:22] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:49:22] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:49:22] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-08 17:49:22] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@e9bfee2
[2013-07-08 17:49:22] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 8c42ca98-160e-46be-9e24-d3e90877e9d7 (<unnamed>)
[2013-07-08 17:49:22] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-08 17:49:22] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-08 17:49:22] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:49:22] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:49:22] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:49:22] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:49:22] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:49:22] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:49:22] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:49:22] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:49:22] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:49:22] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:49:22] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:49:22] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:49:22] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:49:22] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-08 17:49:22] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-08 17:49:22] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-08 17:49:22] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-08 17:49:22] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-08 17:49:22] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-08 17:49:22] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-08 17:49:22] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-08 17:49:22] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-08 17:49:22] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-08 17:49:22] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:49:22] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-08 17:49:22] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:49:22] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-08 17:49:22] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-08 17:49:22] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-08 17:49:22] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 17:49:22] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-08 17:49:22] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-08 17:49:22] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 17:49:22] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-08 17:49:22] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-08 17:49:22] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 17:49:22] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-08 17:49:22] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-08 17:49:22] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-08 17:49:22] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-08 17:49:22] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-08 17:49:22] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-08 17:49:22] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-08 17:49:22] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-08 17:49:22] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-08 17:49:22] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-08 17:49:22] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-08 17:49:22] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-08 17:49:22] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-08 17:49:22] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-08 17:49:22] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-08 17:49:22] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-08 17:49:28] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 17:49:28] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:49:28] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-08 17:49:28] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 17:49:28] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/
[2013-07-08 17:49:30] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 17:49:30] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130708T164930Z!1373302168-21039-2!http://localhost:8080/!jcb98!!pwd!8383!!2!gm2zK.c7yqR796L4isLVIJXwQHrS8.8SoK4HD3qRzjSaQh58ZDhmEVkzqr2GhFTsSkD82OCsQAXQRw4z9wf2o6kpCXCmA0cbR5Dxxc6WQoT0LLY3N3TUNWjj1Nxc0oufMmk9DXFguADY6v4XTivSVXSuAekx823rpgAEprEzrKw_
[2013-07-08 17:49:30] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T164928Z, fail: 
[2013-07-08 17:49:30] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-08 17:49:30] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-08 17:49:30] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130708T164930Z Last: 1373302170174 Life: 8383 ID: 1373302168-21039-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:49:30] [DEBUG] RavenFilter:389 - RavenFilter running for: /
[2013-07-08 17:49:30] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:49:30] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T164928Z, fail: 
[2013-07-08 17:49:30] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T164930Z Last: 1373302170174 Life: 8383 ID: 1373302168-21039-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:49:30] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:49:30] [DEBUG] SynchronousDispatcher:60 - PathInfo: /
[2013-07-08 17:49:30] [DEBUG] AbstractTransactionImpl:158 - begin
[2013-07-08 17:49:30] [DEBUG] LogicalConnectionImpl:212 - Obtaining JDBC connection
[2013-07-08 17:49:30] [DEBUG] LogicalConnectionImpl:218 - Obtained JDBC connection
[2013-07-08 17:49:30] [DEBUG] JdbcTransaction:69 - initial autocommit status: false
[2013-07-08 17:49:30] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: aaa98, using strategy: org.hibernate.id.Assigned
[2013-07-08 17:49:30] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: bbb12, using strategy: org.hibernate.id.Assigned
[2013-07-08 17:49:30] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONSETS
[2013-07-08 17:49:30] [DEBUG] SQL:104 - select max(id) from QUESTIONSETS
[2013-07-08 17:49:30] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 17:49:30] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 17:49:30] [DEBUG] IncrementGenerator:127 - Fetching initial value: select max(id) from QUESTIONS
[2013-07-08 17:49:30] [DEBUG] SQL:104 - select max(id) from QUESTIONS
[2013-07-08 17:49:30] [DEBUG] IncrementGenerator:138 - First free id: 1
[2013-07-08 17:49:30] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 17:49:30] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 2, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 17:49:30] [DEBUG] AbstractSaveEventListener:130 - Generated identifier: 3, using strategy: org.hibernate.id.IncrementGenerator
[2013-07-08 17:49:30] [DEBUG] AbstractTransactionImpl:173 - committing
[2013-07-08 17:49:30] [DEBUG] AbstractFlushingEventListener:144 - Processing flush-time cascades
[2013-07-08 17:49:30] [DEBUG] AbstractFlushingEventListener:185 - Dirty checking collections
[2013-07-08 17:49:30] [DEBUG] AbstractFlushingEventListener:118 - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2013-07-08 17:49:30] [DEBUG] AbstractFlushingEventListener:125 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2013-07-08 17:49:30] [DEBUG] EntityPrinter:114 - Listing entities:
[2013-07-08 17:49:30] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [power n k], that calculates k-th power of n., id=3, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:49:30] [DEBUG] EntityPrinter:121 - org.example.models.QuestionSet{id=1, name=Foundations of Computer Science example sheet, owner=org.example.models.User#aaa98}
[2013-07-08 17:49:30] [DEBUG] EntityPrinter:121 - org.example.models.User{id=bbb12, name=Bob}
[2013-07-08 17:49:30] [DEBUG] EntityPrinter:121 - org.example.models.User{id=aaa98, name=Alice}
[2013-07-08 17:49:30] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [square n], that calculates square of n., id=1, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:49:30] [DEBUG] EntityPrinter:121 - org.example.models.Question{content=Write a function [factorial n], that calculates factorial of n., id=2, author=org.example.models.User#aaa98, parentSet=org.example.models.QuestionSet#1}
[2013-07-08 17:49:30] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 17:49:30] [DEBUG] SQL:104 - insert into USERS (name, id) values (?, ?)
[2013-07-08 17:49:30] [DEBUG] SQL:104 - insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-08 17:49:30] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 17:49:30] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 17:49:30] [DEBUG] SQL:104 - insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-08 17:49:30] [DEBUG] JdbcTransaction:113 - committed JDBC Connection
[2013-07-08 17:49:30] [DEBUG] JdbcCoordinatorImpl:173 - HHH000420: Closing un-released batch
[2013-07-08 17:49:30] [DEBUG] LogicalConnectionImpl:232 - Releasing JDBC connection
[2013-07-08 17:49:30] [DEBUG] LogicalConnectionImpl:250 - Released JDBC connection
[2013-07-08 17:49:36] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-08 17:49:36] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:49:36] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T164928Z, fail: 
[2013-07-08 17:49:36] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T164930Z Last: 1373302170174 Life: 8383 ID: 1373302168-21039-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:49:36] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:49:36] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-08 17:49:47] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/abv123
[2013-07-08 17:49:47] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:49:47] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T164928Z, fail: 
[2013-07-08 17:49:47] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T164930Z Last: 1373302170174 Life: 8383 ID: 1373302168-21039-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:49:47] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:49:47] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/abv123
[2013-07-08 17:49:47] [ERROR] LDAPProvider:43 - 
[2013-07-08 17:49:52] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/ab12
[2013-07-08 17:49:52] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:49:52] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T164928Z, fail: 
[2013-07-08 17:49:52] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T164930Z Last: 1373302170174 Life: 8383 ID: 1373302168-21039-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:49:52] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:49:52] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/ab12
[2013-07-08 17:49:52] [ERROR] LDAPProvider:43 - 
[2013-07-08 17:49:54] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/ab123
[2013-07-08 17:49:54] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:49:54] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T164928Z, fail: 
[2013-07-08 17:49:54] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T164930Z Last: 1373302170174 Life: 8383 ID: 1373302168-21039-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:49:54] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:49:54] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/ab123
[2013-07-08 17:49:54] [ERROR] LDAPProvider:43 - 
[2013-07-08 17:49:58] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb99
[2013-07-08 17:49:58] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-08 17:49:58] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/, desc: , aauth: , iact: , msg: , params: , date: 20130708T164928Z, fail: 
[2013-07-08 17:49:58] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130708T164930Z Last: 1373302170174 Life: 8383 ID: 1373302168-21039-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-08 17:49:58] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-08 17:49:58] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb99
[2013-07-09 16:16:34] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-09 16:16:34] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-09 16:16:34] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-09 16:16:34] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-09 16:16:34] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-09 16:16:34] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@3e29b849
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@3e29b849
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3e29b849
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@455bfaf
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@20b124fa
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@766d4f30
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@6e659812
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@6e659812
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6e659812
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@1e929ba3
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@1e929ba3
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1e929ba3
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@28bd36fa
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@28bd36fa
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@28bd36fa
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@54d1f0ad
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@54d1f0ad
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@54d1f0ad
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@57f55cae
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@57f55cae
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@57f55cae
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@3403f5a0
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@3403f5a0
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3403f5a0
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@3a252a17
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@3a252a17
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3a252a17
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2025b64d
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2025b64d
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5fc8ad52
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5fc8ad52
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@738bf6bf
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@738bf6bf
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@55444319
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3b3e3940
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@1fb93526
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fb93526
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@6dca1837
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6dca1837
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@30f49e8f
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@30f49e8f
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2904b5ae
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2904b5ae
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2904b5ae
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@466c137c
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@718df055
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@718df055
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@718df055
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@55104da7
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@71a550f9
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@71a550f9
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@7f66ff9c
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7f66ff9c
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4ad38c3d
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4ad38c3d
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@67afe460
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@67afe460
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3ad8326d
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3ad8326d
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fcfad77
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@280c3c44
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@5dbb6a69
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5dbb6a69
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@5dbb6a69
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@173dcf55
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@173dcf55
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@173dcf55
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@6204904d
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@77ed2061
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@77ed2061
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@77ed2061
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@59b68d78
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@59b68d78
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@59b68d78
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@175c30f6
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@f8b7298
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@27e3bfb6
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@27e3bfb6
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4e39f16f
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@3a396fce
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3a396fce
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@2d4c8822
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2d4c8822
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6e453dd5
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@dc0adca
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@22e1469c
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@6dee2ea8
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6dee2ea8
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2b1bed2
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6366ce5f
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7276f1f4
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5f0704e1
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@45d18084
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3d4c7deb
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@68deeebd
[2013-07-09 16:16:34] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@40bf015
[2013-07-09 16:16:34] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-09 16:16:34] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-09 16:16:34] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-09 16:16:34] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-09 16:16:34] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-09 16:16:34] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-09 16:16:34] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-09 16:16:34] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-09 16:16:34] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-09 16:16:34] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-09 16:16:34] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-09 16:16:34] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-09 16:16:34] [DEBUG] Configuration:1947 - connection.password=
[2013-07-09 16:16:34] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-09 16:16:34] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-09 16:16:34] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-09 16:16:34] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-09 16:16:34] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-09 16:16:34] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-09 16:16:34] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-09 16:16:34] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-09 16:16:34] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-09 16:16:34] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-09 16:16:34] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-09 16:16:34] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-09 16:16:34] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-09 16:16:34] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-09 16:16:34] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-09 16:16:34] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-09 16:16:34] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-09 16:16:34] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-09 16:16:34] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-09 16:16:34] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-09 16:16:34] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-09 16:16:34] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-09 16:16:34] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-09 16:16:34] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-09 16:16:34] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 16:16:34] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 16:16:34] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-09 16:16:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 16:16:34] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 16:16:34] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-09 16:16:34] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-09 16:16:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 16:16:34] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 16:16:34] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 16:16:34] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 16:16:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 16:16:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-09 16:16:34] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-09 16:16:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-09 16:16:34] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-09 16:16:34] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-09 16:16:34] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-09 16:16:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 16:16:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-09 16:16:34] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-09 16:16:34] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-09 16:16:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 16:16:34] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 16:16:34] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-09 16:16:34] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-09 16:16:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 16:16:34] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 16:16:34] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 16:16:34] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 16:16:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-09 16:16:34] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-09 16:16:34] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-09 16:16:34] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-09 16:16:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 16:16:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-09 16:16:34] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-09 16:16:34] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-09 16:16:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 16:16:34] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 16:16:34] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-09 16:16:34] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-09 16:16:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 16:16:34] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 16:16:34] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 16:16:34] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 16:16:34] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-09 16:16:34] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-09 16:16:34] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-09 16:16:34] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-09 16:16:34] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 16:16:34] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-09 16:16:34] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 16:16:34] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-09 16:16:34] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 16:16:34] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-09 16:16:34] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 16:16:34] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 16:16:34] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 16:16:34] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 16:16:34] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 16:16:34] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 16:16:34] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 16:16:34] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 16:16:34] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 16:16:34] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 16:16:34] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-09 16:16:34] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-09 16:16:34] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-09 16:16:34] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-09 16:16:34] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-09 16:16:34] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-09 16:16:34] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 16:16:34] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-09 16:16:34] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-09 16:16:34] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-09 16:16:34] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-09 16:16:34] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-09 16:16:34] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-09 16:16:34] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-09 16:16:34] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-09 16:16:34] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-09 16:16:34] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-09 16:16:34] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-09 16:16:34] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-09 16:16:34] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-09 16:16:34] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-09 16:16:34] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-09 16:16:34] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-09 16:16:34] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-09 16:16:34] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 16:16:34] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 16:16:34] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 16:16:34] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 16:16:34] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 16:16:34] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 16:16:34] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 16:16:34] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 16:16:34] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3827de24
[2013-07-09 16:16:34] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 5e74c233-1f99-4fab-9d7d-660cbfdcc681 (<unnamed>)
[2013-07-09 16:16:34] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-09 16:16:34] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-09 16:16:34] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 16:16:34] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 16:16:34] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 16:16:34] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 16:16:34] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 16:16:34] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 16:16:34] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 16:16:34] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 16:16:34] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 16:16:34] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 16:16:34] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 16:16:34] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 16:16:34] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 16:16:34] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 16:16:34] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 16:16:34] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 16:16:34] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 16:16:34] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 16:16:34] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 16:16:34] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 16:16:34] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 16:16:34] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 16:16:34] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 16:16:34] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 16:16:34] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 16:16:34] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 16:16:34] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 16:16:34] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-09 16:16:34] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-09 16:16:34] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-09 16:16:34] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-09 16:16:34] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-09 16:16:34] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-09 16:16:34] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-09 16:16:34] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-09 16:16:34] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-09 16:16:34] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-09 16:16:34] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-09 16:16:34] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-09 16:16:34] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-09 16:16:34] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-09 16:16:34] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-09 16:16:34] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-09 16:16:34] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-09 16:16:34] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-09 16:16:34] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-09 16:16:34] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-09 16:16:34] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-09 16:16:34] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-09 16:16:34] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-09 16:16:34] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-09 16:16:35] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-09 16:16:35] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/as123
[2013-07-09 16:16:35] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 16:16:35] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-09 16:16:35] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 16:16:35] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/as123
[2013-07-09 16:16:38] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/as123
[2013-07-09 16:16:38] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130709T151638Z!1373382995-15124-26!http://localhost:8080/ldap/as123!jcb98!!pwd!25983!!2!Ctz8OBxfREoPX60.I9xLNlTTaGv59jWzT8okc.j0SEcGr3vhbF1lMFVgPgE8bP9ECLOe4yc4Orq5OWJHez.sR5uU-YIyE0.3T0Hvq7ahjaJV-E8KPA6P7QYIXTnci71Y4ktyAfcIoYQJkpnSSklC8XKo.I426vrDI--ntIHa.WY_
[2013-07-09 16:16:38] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/as123, desc: , aauth: , iact: , msg: , params: , date: 20130709T151635Z, fail: 
[2013-07-09 16:16:38] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 16:16:38] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-09 16:16:38] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130709T151638Z Last: 1373382998247 Life: 25983 ID: 1373382995-15124-26 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 16:16:38] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/as123
[2013-07-09 16:16:38] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 16:16:38] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/as123, desc: , aauth: , iact: , msg: , params: , date: 20130709T151635Z, fail: 
[2013-07-09 16:16:38] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T151638Z Last: 1373382998247 Life: 25983 ID: 1373382995-15124-26 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 16:16:38] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 16:16:38] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/as123
[2013-07-09 16:16:38] [ERROR] LDAPProvider:43 - 
[2013-07-09 16:17:58] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/as1012
[2013-07-09 16:17:58] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 16:17:58] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/as123, desc: , aauth: , iact: , msg: , params: , date: 20130709T151635Z, fail: 
[2013-07-09 16:17:58] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T151638Z Last: 1373382998247 Life: 25983 ID: 1373382995-15124-26 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 16:17:58] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 16:17:58] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/as1012
[2013-07-09 16:17:58] [ERROR] LDAPProvider:43 - 
[2013-07-09 16:57:20] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb100
[2013-07-09 16:57:20] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 16:57:20] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-09 16:57:20] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 16:57:20] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb100
[2013-07-09 16:57:22] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb100
[2013-07-09 16:57:22] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130709T155722Z!1373385440-16798-0!http://localhost:8080/ldap/jcb100!jcb98!!pwd!23538!!2!gEixyPcOHsIoT9ekAeU4tSvURYcrNzVDMAcSTKgcczuDknEiibE9vcTZERFPP5tVpVqAhNOdst2vJ70f7-4fT2lj7RonUgHeFzXUkd8PydfJl78dP9XjPoANrQSsvLyTlrftNqdMlw2CSD5BxQXypO.EEkgtjUbWIaJN23IFa9c_
[2013-07-09 16:57:22] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb100, desc: , aauth: , iact: , msg: , params: , date: 20130709T155720Z, fail: 
[2013-07-09 16:57:22] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 16:57:22] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-09 16:57:22] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130709T155722Z Last: 1373385442415 Life: 23538 ID: 1373385440-16798-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 16:57:22] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb100
[2013-07-09 16:57:22] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 16:57:22] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb100, desc: , aauth: , iact: , msg: , params: , date: 20130709T155720Z, fail: 
[2013-07-09 16:57:22] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T155722Z Last: 1373385442415 Life: 23538 ID: 1373385440-16798-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 16:57:22] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 16:57:22] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb100
[2013-07-09 16:57:22] [ERROR] LDAPProvider:43 - 
[2013-07-09 16:57:24] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb101
[2013-07-09 16:57:24] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 16:57:24] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb100, desc: , aauth: , iact: , msg: , params: , date: 20130709T155720Z, fail: 
[2013-07-09 16:57:24] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T155722Z Last: 1373385442415 Life: 23538 ID: 1373385440-16798-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 16:57:24] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 16:57:24] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb101
[2013-07-09 16:57:24] [ERROR] LDAPProvider:43 - 
[2013-07-09 16:57:26] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb102
[2013-07-09 16:57:26] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 16:57:26] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb100, desc: , aauth: , iact: , msg: , params: , date: 20130709T155720Z, fail: 
[2013-07-09 16:57:26] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T155722Z Last: 1373385442415 Life: 23538 ID: 1373385440-16798-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 16:57:26] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 16:57:26] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb102
[2013-07-09 16:57:26] [ERROR] LDAPProvider:43 - 
[2013-07-09 16:57:28] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb103
[2013-07-09 16:57:28] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 16:57:28] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb100, desc: , aauth: , iact: , msg: , params: , date: 20130709T155720Z, fail: 
[2013-07-09 16:57:28] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T155722Z Last: 1373385442415 Life: 23538 ID: 1373385440-16798-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 16:57:28] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 16:57:28] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb103
[2013-07-09 16:57:28] [ERROR] LDAPProvider:43 - 
[2013-07-09 16:57:30] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb104
[2013-07-09 16:57:30] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 16:57:30] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb100, desc: , aauth: , iact: , msg: , params: , date: 20130709T155720Z, fail: 
[2013-07-09 16:57:30] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T155722Z Last: 1373385442415 Life: 23538 ID: 1373385440-16798-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 16:57:30] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 16:57:30] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb104
[2013-07-09 16:57:30] [ERROR] LDAPProvider:43 - 
[2013-07-09 16:57:34] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb97
[2013-07-09 16:57:34] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 16:57:34] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb100, desc: , aauth: , iact: , msg: , params: , date: 20130709T155720Z, fail: 
[2013-07-09 16:57:34] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T155722Z Last: 1373385442415 Life: 23538 ID: 1373385440-16798-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 16:57:34] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 16:57:34] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb97
[2013-07-09 16:57:35] [DEBUG] RavenFilter:389 - RavenFilter running for: /style.css
[2013-07-09 16:57:35] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 16:57:35] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb100, desc: , aauth: , iact: , msg: , params: , date: 20130709T155720Z, fail: 
[2013-07-09 16:57:35] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T155722Z Last: 1373385442415 Life: 23538 ID: 1373385440-16798-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 16:57:35] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 16:57:35] [DEBUG] SynchronousDispatcher:60 - PathInfo: /style.css
[2013-07-09 16:57:38] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb96
[2013-07-09 16:57:38] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 16:57:38] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb100, desc: , aauth: , iact: , msg: , params: , date: 20130709T155720Z, fail: 
[2013-07-09 16:57:38] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T155722Z Last: 1373385442415 Life: 23538 ID: 1373385440-16798-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 16:57:38] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 16:57:38] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb96
[2013-07-09 16:57:40] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb95
[2013-07-09 16:57:40] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 16:57:40] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb100, desc: , aauth: , iact: , msg: , params: , date: 20130709T155720Z, fail: 
[2013-07-09 16:57:40] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T155722Z Last: 1373385442415 Life: 23538 ID: 1373385440-16798-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 16:57:40] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 16:57:40] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb95
[2013-07-09 16:57:42] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb94
[2013-07-09 16:57:42] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 16:57:42] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb100, desc: , aauth: , iact: , msg: , params: , date: 20130709T155720Z, fail: 
[2013-07-09 16:57:42] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T155722Z Last: 1373385442415 Life: 23538 ID: 1373385440-16798-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 16:57:42] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 16:57:42] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb94
[2013-07-09 16:57:42] [ERROR] LDAPProvider:43 - 
[2013-07-09 16:57:44] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb93
[2013-07-09 16:57:44] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 16:57:44] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb100, desc: , aauth: , iact: , msg: , params: , date: 20130709T155720Z, fail: 
[2013-07-09 16:57:44] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T155722Z Last: 1373385442415 Life: 23538 ID: 1373385440-16798-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 16:57:44] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 16:57:44] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb93
[2013-07-09 16:57:46] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb92
[2013-07-09 16:57:46] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 16:57:46] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb100, desc: , aauth: , iact: , msg: , params: , date: 20130709T155720Z, fail: 
[2013-07-09 16:57:46] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T155722Z Last: 1373385442415 Life: 23538 ID: 1373385440-16798-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 16:57:46] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 16:57:46] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb92
[2013-07-09 16:57:48] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb91
[2013-07-09 16:57:48] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 16:57:48] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb100, desc: , aauth: , iact: , msg: , params: , date: 20130709T155720Z, fail: 
[2013-07-09 16:57:48] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T155722Z Last: 1373385442415 Life: 23538 ID: 1373385440-16798-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 16:57:48] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 16:57:48] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb91
[2013-07-09 16:57:51] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb90
[2013-07-09 16:57:51] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 16:57:51] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb100, desc: , aauth: , iact: , msg: , params: , date: 20130709T155720Z, fail: 
[2013-07-09 16:57:51] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T155722Z Last: 1373385442415 Life: 23538 ID: 1373385440-16798-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 16:57:51] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 16:57:51] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb90
[2013-07-09 16:57:51] [ERROR] LDAPProvider:43 - 
[2013-07-09 16:57:55] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb89
[2013-07-09 16:57:55] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 16:57:55] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb100, desc: , aauth: , iact: , msg: , params: , date: 20130709T155720Z, fail: 
[2013-07-09 16:57:55] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T155722Z Last: 1373385442415 Life: 23538 ID: 1373385440-16798-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 16:57:55] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 16:57:55] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb89
[2013-07-09 16:57:57] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb88
[2013-07-09 16:57:57] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 16:57:57] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb100, desc: , aauth: , iact: , msg: , params: , date: 20130709T155720Z, fail: 
[2013-07-09 16:57:57] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T155722Z Last: 1373385442415 Life: 23538 ID: 1373385440-16798-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 16:57:57] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 16:57:57] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb88
[2013-07-09 16:57:57] [ERROR] LDAPProvider:43 - 
[2013-07-09 16:57:59] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb87
[2013-07-09 16:57:59] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 16:57:59] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb100, desc: , aauth: , iact: , msg: , params: , date: 20130709T155720Z, fail: 
[2013-07-09 16:57:59] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T155722Z Last: 1373385442415 Life: 23538 ID: 1373385440-16798-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 16:57:59] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 16:57:59] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb87
[2013-07-09 16:57:59] [ERROR] LDAPProvider:43 - 
[2013-07-09 16:58:00] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb86
[2013-07-09 16:58:00] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 16:58:00] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb100, desc: , aauth: , iact: , msg: , params: , date: 20130709T155720Z, fail: 
[2013-07-09 16:58:00] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T155722Z Last: 1373385442415 Life: 23538 ID: 1373385440-16798-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 16:58:00] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 16:58:00] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb86
[2013-07-09 17:01:42] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb86
[2013-07-09 17:01:42] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:01:42] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb100, desc: , aauth: , iact: , msg: , params: , date: 20130709T155720Z, fail: 
[2013-07-09 17:01:42] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T155722Z Last: 1373385442415 Life: 23538 ID: 1373385440-16798-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:01:42] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:01:42] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb86
[2013-07-09 17:01:54] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-09 17:01:54] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-09 17:01:54] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-09 17:01:54] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-09 17:01:54] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-09 17:01:54] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@66d7a9c9
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@66d7a9c9
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@66d7a9c9
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1f4649ed
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@762d80ae
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@10fd0a62
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@10ba5a81
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@10ba5a81
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@10ba5a81
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@1a0283e
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@1a0283e
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1a0283e
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@724a2dd4
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@724a2dd4
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@724a2dd4
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@5092eb76
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@5092eb76
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5092eb76
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@57044c5
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@57044c5
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@57044c5
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@4c68059
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@4c68059
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4c68059
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@1b2ede8
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@1b2ede8
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b2ede8
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2630a895
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2630a895
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@fe14de0
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@fe14de0
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@d6d46d7
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@d6d46d7
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1b0fb9bd
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3bad0d89
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@14cef147
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@14cef147
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@6b5b5783
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6b5b5783
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@15364ee5
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@15364ee5
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@111bda67
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@111bda67
[2013-07-09 17:01:54] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@111bda67
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4c18fa85
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@7810a519
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7810a519
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7810a519
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6fc41e49
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@5c392fe8
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5c392fe8
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@1d30b5e2
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1d30b5e2
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@531a700a
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@531a700a
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@4aa0c486
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4aa0c486
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@86ecec5
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@86ecec5
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@34f34071
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6a46f764
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@6d289e48
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6d289e48
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@6d289e48
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@49b9a538
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@49b9a538
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@49b9a538
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@c1bb35b
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@3f2f529b
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3f2f529b
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@3f2f529b
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@37285252
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@37285252
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@37285252
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@1ac84361
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@5f99ea3c
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@7418e252
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7418e252
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4e850e8c
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@7aaf8b32
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7aaf8b32
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@70da8742
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70da8742
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@627b5c
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b9deddb
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@2501e081
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@2e5facbd
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2e5facbd
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@114c02d4
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@154db52b
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@20b124fa
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4df2a9da
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@766d4f30
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@26a150e
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@28c4b5f
[2013-07-09 17:01:55] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@48a84b47
[2013-07-09 17:01:55] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-09 17:01:55] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-09 17:01:55] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-09 17:01:55] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-09 17:01:55] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-09 17:01:55] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-09 17:01:55] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-09 17:01:55] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-09 17:01:55] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-09 17:01:55] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-09 17:01:55] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-09 17:01:55] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-09 17:01:55] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-09 17:01:55] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-09 17:01:55] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-09 17:01:55] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-09 17:01:55] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-09 17:01:55] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-09 17:01:55] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-09 17:01:55] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-09 17:01:55] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-09 17:01:55] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-09 17:01:55] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-09 17:01:55] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-09 17:01:55] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-09 17:01:55] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-09 17:01:55] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-09 17:01:55] [DEBUG] Configuration:1947 - connection.password=
[2013-07-09 17:01:55] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-09 17:01:55] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-09 17:01:55] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-09 17:01:55] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-09 17:01:55] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-09 17:01:55] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-09 17:01:55] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-09 17:01:55] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-09 17:01:55] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-09 17:01:55] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-09 17:01:55] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-09 17:01:55] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-09 17:01:55] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-09 17:01:55] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-09 17:01:55] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-09 17:01:55] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-09 17:01:55] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-09 17:01:55] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-09 17:01:55] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-09 17:01:55] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-09 17:01:55] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-09 17:01:55] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-09 17:01:55] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-09 17:01:55] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-09 17:01:55] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:01:55] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:01:55] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-09 17:01:55] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:01:55] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:01:55] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-09 17:01:55] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-09 17:01:55] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:01:55] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:01:55] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:01:55] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:01:55] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:01:55] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-09 17:01:55] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-09 17:01:55] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-09 17:01:55] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-09 17:01:55] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-09 17:01:55] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-09 17:01:55] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:01:55] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-09 17:01:55] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-09 17:01:55] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-09 17:01:55] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:01:55] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:01:55] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-09 17:01:55] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-09 17:01:55] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:01:55] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:01:55] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:01:55] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:01:55] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-09 17:01:55] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-09 17:01:55] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-09 17:01:55] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-09 17:01:55] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:01:55] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-09 17:01:55] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-09 17:01:55] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-09 17:01:55] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:01:55] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:01:55] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-09 17:01:55] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-09 17:01:55] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:01:55] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:01:55] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:01:55] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:01:55] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-09 17:01:55] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-09 17:01:55] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-09 17:01:55] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-09 17:01:55] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:01:55] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-09 17:01:55] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:01:55] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-09 17:01:55] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:01:55] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-09 17:01:55] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:01:55] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:01:55] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:01:55] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:01:55] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:01:55] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:01:55] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:01:55] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:01:55] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:01:55] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:01:55] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-09 17:01:55] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-09 17:01:55] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-09 17:01:55] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-09 17:01:55] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-09 17:01:55] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-09 17:01:55] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-09 17:01:55] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:01:55] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:01:55] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:01:55] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-09 17:01:55] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-09 17:01:55] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-09 17:01:55] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-09 17:01:55] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-09 17:01:55] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-09 17:01:55] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-09 17:01:55] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-09 17:01:55] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-09 17:01:55] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-09 17:01:55] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-09 17:01:55] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-09 17:01:55] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-09 17:01:55] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-09 17:01:55] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-09 17:01:55] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-09 17:01:55] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-09 17:01:55] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:01:55] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:01:55] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:01:55] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:01:55] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:01:55] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:01:55] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:01:55] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:01:55] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@b1ea3fc
[2013-07-09 17:01:55] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: fd605842-5138-43d2-a9ca-c1ed668a9876 (<unnamed>)
[2013-07-09 17:01:55] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-09 17:01:55] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-09 17:01:55] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:01:55] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:01:55] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:01:55] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:01:55] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:01:55] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:01:55] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:01:55] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:01:55] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:01:56] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:01:56] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:01:56] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:01:56] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:01:56] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:01:56] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:01:56] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:01:56] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:01:56] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:01:56] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:01:56] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:01:56] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:01:56] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:01:56] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:01:56] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:01:56] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:01:56] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:01:56] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:01:56] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:01:56] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:01:56] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:01:56] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:01:56] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:01:56] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:01:56] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:01:56] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:01:56] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-09 17:01:56] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-09 17:01:56] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-09 17:01:56] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-09 17:01:56] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-09 17:01:56] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-09 17:01:56] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-09 17:01:56] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-09 17:01:56] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-09 17:01:56] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-09 17:01:56] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-09 17:01:56] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-09 17:01:56] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-09 17:01:56] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-09 17:01:56] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-09 17:01:56] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-09 17:01:56] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-09 17:01:56] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-09 17:01:56] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-09 17:01:56] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-09 17:01:56] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-09 17:01:56] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-09 17:01:56] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-09 17:01:56] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-09 17:01:56] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-09 17:01:59] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb898
[2013-07-09 17:01:59] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:01:59] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-09 17:01:59] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 17:01:59] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb898
[2013-07-09 17:02:00] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb898
[2013-07-09 17:02:01] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130709T160200Z!1373385719-16706-13!http://localhost:8080/ldap/jcb898!jcb98!!pwd!23259!!2!rHKRFl-gjpS17g5qAmNRNoGZEHHoi255Cg4MBH8TDCsr6TIwJw0zQ11ugsNFbyxRDd7whRT0cQ856mJ7oJ2gra00ScBr7OLJB5UFUZErXff0lMx5tVxisV0pTf.EmGrVnh.Jfd2X2pDOKJI4lvbafWPNrnB4UsYclq5NpLVPnxA_
[2013-07-09 17:02:01] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb898, desc: , aauth: , iact: , msg: , params: , date: 20130709T160159Z, fail: 
[2013-07-09 17:02:01] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 17:02:01] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-09 17:02:01] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130709T160200Z Last: 1373385721055 Life: 23259 ID: 1373385719-16706-13 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:02:01] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb898
[2013-07-09 17:02:01] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:02:01] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb898, desc: , aauth: , iact: , msg: , params: , date: 20130709T160159Z, fail: 
[2013-07-09 17:02:01] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T160200Z Last: 1373385721055 Life: 23259 ID: 1373385719-16706-13 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:02:01] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:02:01] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb898
[2013-07-09 17:02:01] [ERROR] LDAPProvider:40 - 
[2013-07-09 17:02:03] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:02:03] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:02:03] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb898, desc: , aauth: , iact: , msg: , params: , date: 20130709T160159Z, fail: 
[2013-07-09 17:02:03] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T160200Z Last: 1373385721055 Life: 23259 ID: 1373385719-16706-13 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:02:03] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:02:03] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-09 17:05:22] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-09 17:05:22] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-09 17:05:22] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-09 17:05:22] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-09 17:05:22] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-09 17:05:22] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@7051630a
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@7051630a
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7051630a
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@448be1c9
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@256b352c
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3bad0d89
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@1d91eb90
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@1d91eb90
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1d91eb90
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@153d4c49
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@153d4c49
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@153d4c49
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@6f0e0eb5
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@6f0e0eb5
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6f0e0eb5
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@4c18fa85
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@4c18fa85
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4c18fa85
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@6fc41e49
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@6fc41e49
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6fc41e49
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@5ec22978
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@5ec22978
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5ec22978
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@531a700a
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@531a700a
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@531a700a
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3a7e479a
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3a7e479a
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@86ecec5
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@86ecec5
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@4e0bd5df
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4e0bd5df
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@591bfcbe
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5afc0f5
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@3b0e2558
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3b0e2558
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@3bd85e85
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3bd85e85
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@1ac84361
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1ac84361
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@79b2591c
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@79b2591c
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@79b2591c
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@976484e
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@74bffc3a
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@74bffc3a
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@74bffc3a
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6fb8fcdd
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@7418e252
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7418e252
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@17e319a
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@17e319a
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@43824d2c
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@43824d2c
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@22c393a1
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@22c393a1
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4de514a9
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4de514a9
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1adbbe8b
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@51f2412a
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@4d12bc7b
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4d12bc7b
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@4d12bc7b
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1ae0e7d
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1ae0e7d
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1ae0e7d
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@1ae637f0
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@b9deddb
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@b9deddb
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@b9deddb
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2501e081
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2501e081
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2501e081
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@199b7c62
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@69c5a33b
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@1e929ba3
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1e929ba3
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4d8ef117
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@54d1f0ad
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@54d1f0ad
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@37f808e6
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@37f808e6
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3a252a17
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4f65cbd2
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@615724a0
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@738bf6bf
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@738bf6bf
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3f8771dc
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@55444319
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@74914a0a
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6e94124f
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3b3e3940
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7220b722
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@41d753b7
[2013-07-09 17:05:22] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1fb93526
[2013-07-09 17:05:22] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-09 17:05:22] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-09 17:05:22] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-09 17:05:22] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-09 17:05:22] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-09 17:05:22] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-09 17:05:22] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-09 17:05:22] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-09 17:05:22] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-09 17:05:22] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-09 17:05:22] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-09 17:05:22] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-09 17:05:22] [DEBUG] Configuration:1947 - connection.password=
[2013-07-09 17:05:22] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-09 17:05:22] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-09 17:05:22] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-09 17:05:22] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-09 17:05:22] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-09 17:05:22] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-09 17:05:22] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-09 17:05:22] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-09 17:05:22] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-09 17:05:22] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-09 17:05:22] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-09 17:05:22] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-09 17:05:22] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-09 17:05:22] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-09 17:05:22] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-09 17:05:22] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-09 17:05:22] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-09 17:05:22] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-09 17:05:22] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-09 17:05:22] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-09 17:05:22] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-09 17:05:22] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-09 17:05:22] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-09 17:05:22] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-09 17:05:22] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:05:22] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:05:22] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-09 17:05:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:05:22] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:05:22] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-09 17:05:22] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-09 17:05:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:05:22] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:05:22] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:05:22] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:05:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:05:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-09 17:05:22] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-09 17:05:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-09 17:05:22] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-09 17:05:22] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-09 17:05:22] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-09 17:05:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:05:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-09 17:05:22] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-09 17:05:22] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-09 17:05:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:05:22] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:05:22] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-09 17:05:22] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-09 17:05:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:05:22] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:05:22] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:05:22] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:05:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-09 17:05:22] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-09 17:05:22] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-09 17:05:22] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-09 17:05:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:05:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-09 17:05:22] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-09 17:05:22] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-09 17:05:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:05:22] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:05:22] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-09 17:05:22] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-09 17:05:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:05:22] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:05:22] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:05:22] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:05:22] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-09 17:05:22] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-09 17:05:22] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-09 17:05:22] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-09 17:05:22] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:05:22] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-09 17:05:22] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:05:22] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-09 17:05:22] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:05:22] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-09 17:05:22] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:05:22] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:05:22] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:05:22] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:05:22] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:05:22] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:05:22] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:05:22] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:05:22] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:05:22] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:05:22] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-09 17:05:22] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-09 17:05:22] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-09 17:05:22] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-09 17:05:22] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-09 17:05:22] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-09 17:05:22] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:05:22] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-09 17:05:22] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-09 17:05:22] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-09 17:05:22] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-09 17:05:22] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-09 17:05:22] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-09 17:05:22] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-09 17:05:22] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-09 17:05:22] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-09 17:05:22] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-09 17:05:22] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-09 17:05:22] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-09 17:05:22] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-09 17:05:22] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-09 17:05:22] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-09 17:05:22] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-09 17:05:22] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-09 17:05:22] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:05:22] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:05:22] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:05:22] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:05:22] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:05:22] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:05:22] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:05:22] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:05:22] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@314955ec
[2013-07-09 17:05:22] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 637ef0f1-de49-4d04-b305-46f4a160e113 (<unnamed>)
[2013-07-09 17:05:22] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-09 17:05:22] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-09 17:05:22] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:05:22] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:05:22] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:05:22] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:05:22] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:05:22] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:05:22] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:05:22] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:05:22] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:05:22] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:05:22] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:05:22] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:05:22] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:05:22] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:05:22] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:05:22] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:05:22] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:05:22] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:05:22] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:05:22] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:05:22] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:05:22] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:05:22] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:05:22] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:05:22] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:05:22] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:05:22] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:05:22] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-09 17:05:22] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-09 17:05:22] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-09 17:05:22] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-09 17:05:22] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-09 17:05:22] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-09 17:05:22] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-09 17:05:22] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-09 17:05:22] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-09 17:05:22] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-09 17:05:22] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-09 17:05:22] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-09 17:05:22] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-09 17:05:22] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-09 17:05:22] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-09 17:05:22] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-09 17:05:22] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-09 17:05:22] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-09 17:05:22] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-09 17:05:22] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-09 17:05:22] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-09 17:05:22] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-09 17:05:22] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-09 17:05:22] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-09 17:05:22] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-09 17:05:28] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:05:28] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:05:28] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-09 17:05:28] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 17:05:28] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-09 17:05:29] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:05:29] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130709T160529Z!1373385928-16760-4!http://localhost:8080/ldap/jcb98!jcb98!!pwd!23050!!2!iPsB2iS1iYoxLh8wgYU6qRrU.Oxs38x.6lICs-fqyHVNNwA-.BikHPwONPoZpQW2zZk7PorbVA6dlLaAUyXBBi4fKJDFcU5CTnqBy7G.Uv4T1NLS4hZUMcCWRJr-4bvVmwSQnSs8SZaDaz7G0C7YSGAeNqvoX.5MI2lvsLHy7cQ_
[2013-07-09 17:05:29] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T160528Z, fail: 
[2013-07-09 17:05:29] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 17:05:29] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-09 17:05:29] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130709T160529Z Last: 1373385929546 Life: 23050 ID: 1373385928-16760-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:05:29] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:05:29] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:05:29] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T160528Z, fail: 
[2013-07-09 17:05:29] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T160529Z Last: 1373385929546 Life: 23050 ID: 1373385928-16760-4 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:05:29] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:05:29] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-09 17:08:19] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-09 17:08:19] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-09 17:08:19] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-09 17:08:19] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-09 17:08:19] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-09 17:08:19] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@6a3de2df
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@6a3de2df
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6a3de2df
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@40930120
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@60eb9f0d
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@717757ad
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@66d7a9c9
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@66d7a9c9
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@66d7a9c9
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@1f4649ed
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@1f4649ed
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f4649ed
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@22b90a6e
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@22b90a6e
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@22b90a6e
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@10ba5a81
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@10ba5a81
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@10ba5a81
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@54eeabe8
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@54eeabe8
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@54eeabe8
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@72bdec44
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@72bdec44
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@72bdec44
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@62f04dae
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@62f04dae
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@62f04dae
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5da0b94d
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5da0b94d
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7686b376
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7686b376
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@5baa8241
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@5baa8241
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c68059
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@db951f2
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@381bd13
[2013-07-09 17:08:19] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@381bd13
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@3b947647
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3b947647
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@145d424
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@145d424
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3bad0d89
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3bad0d89
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3bad0d89
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1d91eb90
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@153d4c49
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@153d4c49
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@153d4c49
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@39ce9085
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@23f2bc83
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@23f2bc83
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@c387202
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@c387202
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@111bda67
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@111bda67
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@3e7c609
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e7c609
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@cc749e4
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@cc749e4
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@34a083f2
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2e7857a5
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@68f51766
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@68f51766
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@68f51766
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6cb1cb25
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6cb1cb25
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6cb1cb25
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@c65fb1
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@388eed76
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@388eed76
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@388eed76
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22c8ebd6
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22c8ebd6
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22c8ebd6
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@6b064b80
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@3c6e4ba6
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@7696e4c
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7696e4c
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51bfa303
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@6fb8fcdd
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6fb8fcdd
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@22c393a1
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@22c393a1
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6b91602
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@49c88f2b
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@7aaf8b32
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@4d12bc7b
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4d12bc7b
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@164ca42b
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1ae0e7d
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a393167
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@70da8742
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1ae637f0
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@627b5c
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4190d536
[2013-07-09 17:08:20] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b9deddb
[2013-07-09 17:08:20] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-09 17:08:20] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-09 17:08:20] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-09 17:08:20] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-09 17:08:20] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-09 17:08:20] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-09 17:08:20] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-09 17:08:20] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-09 17:08:20] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-09 17:08:20] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-09 17:08:20] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-09 17:08:20] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-09 17:08:20] [DEBUG] Configuration:1947 - connection.password=
[2013-07-09 17:08:20] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-09 17:08:20] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-09 17:08:20] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-09 17:08:20] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-09 17:08:20] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-09 17:08:20] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-09 17:08:20] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-09 17:08:20] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-09 17:08:20] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-09 17:08:20] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-09 17:08:20] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-09 17:08:20] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-09 17:08:20] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-09 17:08:20] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-09 17:08:20] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-09 17:08:20] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-09 17:08:20] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-09 17:08:20] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-09 17:08:20] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-09 17:08:20] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-09 17:08:20] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-09 17:08:20] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-09 17:08:20] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-09 17:08:20] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-09 17:08:20] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:08:20] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:08:20] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-09 17:08:20] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:08:20] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:08:20] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-09 17:08:20] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-09 17:08:20] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:08:20] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:08:20] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:08:20] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:08:20] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:08:20] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-09 17:08:20] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-09 17:08:20] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-09 17:08:20] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-09 17:08:20] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-09 17:08:20] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-09 17:08:20] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:08:20] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-09 17:08:20] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-09 17:08:20] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-09 17:08:20] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:08:20] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:08:20] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-09 17:08:20] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-09 17:08:20] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:08:20] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:08:20] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:08:20] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:08:20] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-09 17:08:20] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-09 17:08:20] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-09 17:08:20] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-09 17:08:20] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:08:20] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-09 17:08:20] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-09 17:08:20] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-09 17:08:20] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:08:20] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:08:20] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-09 17:08:20] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-09 17:08:20] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:08:20] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:08:20] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:08:20] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:08:20] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-09 17:08:20] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-09 17:08:20] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-09 17:08:20] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-09 17:08:20] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:08:20] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-09 17:08:20] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:08:20] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-09 17:08:20] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:08:20] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-09 17:08:20] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:08:20] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:08:20] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:08:20] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:08:20] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:08:20] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:08:20] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:08:20] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:08:20] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:08:20] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:08:20] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-09 17:08:20] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-09 17:08:20] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-09 17:08:20] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-09 17:08:20] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-09 17:08:20] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-09 17:08:20] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:08:20] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-09 17:08:20] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-09 17:08:20] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-09 17:08:20] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-09 17:08:20] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-09 17:08:20] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-09 17:08:20] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-09 17:08:20] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-09 17:08:20] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-09 17:08:20] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-09 17:08:20] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-09 17:08:20] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-09 17:08:20] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-09 17:08:20] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-09 17:08:20] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-09 17:08:20] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-09 17:08:20] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-09 17:08:20] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:08:20] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:08:20] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:08:20] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:08:20] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:08:20] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:08:20] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:08:20] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:08:20] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@131f1d25
[2013-07-09 17:08:20] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: ccb39eba-49a5-4095-b738-3c9a0a9c2065 (<unnamed>)
[2013-07-09 17:08:20] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-09 17:08:20] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-09 17:08:20] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:08:20] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:08:20] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:08:20] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:08:20] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:08:20] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:08:20] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:08:20] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:08:20] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:08:20] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:08:20] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:08:20] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:08:20] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:08:20] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:08:20] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:08:20] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:08:20] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:08:20] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:08:20] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:08:20] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:08:20] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:08:20] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:08:20] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:08:20] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:08:20] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:08:20] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:08:20] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:08:20] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-09 17:08:20] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-09 17:08:20] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-09 17:08:20] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-09 17:08:20] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-09 17:08:20] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-09 17:08:20] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-09 17:08:20] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-09 17:08:20] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-09 17:08:20] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-09 17:08:20] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-09 17:08:20] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-09 17:08:20] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-09 17:08:20] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-09 17:08:20] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-09 17:08:20] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-09 17:08:20] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-09 17:08:20] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-09 17:08:20] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-09 17:08:20] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-09 17:08:20] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-09 17:08:20] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-09 17:08:20] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-09 17:08:20] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-09 17:08:20] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-09 17:08:20] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:08:20] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:08:20] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-09 17:08:20] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 17:08:20] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-09 17:08:22] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:08:22] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130709T160822Z!1373386100-17013-2!http://localhost:8080/ldap/jcb98!jcb98!!pwd!22878!!2!CebbOfEsRSJwTKBwl4inQS43ub67BZiQTuSjwUJF-bs1.OJVMO-YEaU--kbhmp4jRPU4yBSU0M.H8m27Q6oReYv10lPtajypYjWTJ-BDMfpf5JXID6f4HMOtz0FtmxyBrdLwzptYpG8zQccXU3Trqj-HSDo4CkhTPdjt90476tA_
[2013-07-09 17:08:22] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T160820Z, fail: 
[2013-07-09 17:08:22] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 17:08:22] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-09 17:08:22] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130709T160822Z Last: 1373386102595 Life: 22878 ID: 1373386100-17013-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:08:22] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:08:22] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:08:22] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T160820Z, fail: 
[2013-07-09 17:08:22] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T160822Z Last: 1373386102595 Life: 22878 ID: 1373386100-17013-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:08:22] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:08:22] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-09 17:08:22] [DEBUG] LDAPProvider:45 - Trying to obtain data for user jcb98
[2013-07-09 17:08:22] [DEBUG] LDAPProvider:47 - Trying to obtain displayName for user jcb98
[2013-07-09 17:08:22] [DEBUG] LDAPProvider:49 - Trying to obtain email address for user jcb98
[2013-07-09 17:08:22] [DEBUG] LDAPProvider:51 - Trying to obtain Institutions for user jcb98
[2013-07-09 17:08:22] [DEBUG] LDAPProvider:53 - Trying to obtain roles for user jcb98
[2013-07-09 17:13:16] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-09 17:13:16] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-09 17:13:16] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-09 17:13:16] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-09 17:13:16] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-09 17:13:16] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@2569a1c5
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@2569a1c5
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2569a1c5
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4f5264db
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@66d7a9c9
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@390b755d
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@71e852be
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@71e852be
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@71e852be
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@61697d14
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@61697d14
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@61697d14
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@39b1ff47
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@39b1ff47
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@39b1ff47
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@46be6108
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@46be6108
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@46be6108
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@5c429be9
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@5c429be9
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c429be9
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@6406f3ea
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@6406f3ea
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6406f3ea
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@62e59e40
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@62e59e40
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@62e59e40
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@174da86b
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@174da86b
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4145582
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4145582
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@1b2ede8
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1b2ede8
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3aa42c31
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2630a895
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@fe14de0
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@fe14de0
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@1b0fb9bd
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b0fb9bd
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@4b5a4a77
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4b5a4a77
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@54011d95
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@54011d95
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@54011d95
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5efcc13d
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@2075a744
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2075a744
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2075a744
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4dc4e792
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@3b9fa8f7
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3b9fa8f7
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@657a7adf
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@657a7adf
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@11767553
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@11767553
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@6fc41e49
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6fc41e49
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d30b5e2
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d30b5e2
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@32d35f5f
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@c9021e3
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@5fb45ddc
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5fb45ddc
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@5fb45ddc
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f87fafc
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f87fafc
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f87fafc
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@34f34071
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@6a46f764
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6a46f764
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@6a46f764
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6d289e48
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6d289e48
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6d289e48
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@49b9a538
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@c1bb35b
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@2bf87baf
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2bf87baf
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@b04bce3
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@3ea763a
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3ea763a
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@7aaf8b32
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7aaf8b32
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@50baa573
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@51f2412a
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@4d12bc7b
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@627b5c
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@627b5c
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@b9deddb
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2d6acad2
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3e29b849
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2501e081
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1e3a4822
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@455bfaf
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@199b7c62
[2013-07-09 17:13:16] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2f031310
[2013-07-09 17:13:17] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-09 17:13:17] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-09 17:13:17] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-09 17:13:17] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-09 17:13:17] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-09 17:13:17] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-09 17:13:17] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-09 17:13:17] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-09 17:13:17] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-09 17:13:17] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-09 17:13:17] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-09 17:13:17] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-09 17:13:17] [DEBUG] Configuration:1947 - connection.password=
[2013-07-09 17:13:17] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-09 17:13:17] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-09 17:13:17] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-09 17:13:17] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-09 17:13:17] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-09 17:13:17] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-09 17:13:17] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-09 17:13:17] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-09 17:13:17] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-09 17:13:17] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-09 17:13:17] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-09 17:13:17] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-09 17:13:17] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-09 17:13:17] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-09 17:13:17] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-09 17:13:17] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-09 17:13:17] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-09 17:13:17] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-09 17:13:17] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-09 17:13:17] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-09 17:13:17] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-09 17:13:17] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-09 17:13:17] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-09 17:13:17] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-09 17:13:17] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:13:17] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:13:17] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-09 17:13:17] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:13:17] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:13:17] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-09 17:13:17] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-09 17:13:17] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:13:17] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:13:17] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:13:17] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:13:17] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:13:17] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-09 17:13:17] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-09 17:13:17] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-09 17:13:17] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-09 17:13:17] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-09 17:13:17] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-09 17:13:17] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:13:17] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-09 17:13:17] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-09 17:13:17] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-09 17:13:17] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:13:17] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:13:17] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-09 17:13:17] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-09 17:13:17] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:13:17] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:13:17] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:13:17] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:13:17] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-09 17:13:17] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-09 17:13:17] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-09 17:13:17] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-09 17:13:17] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:13:17] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-09 17:13:17] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-09 17:13:17] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-09 17:13:17] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:13:17] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:13:17] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-09 17:13:17] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-09 17:13:17] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:13:17] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:13:17] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:13:17] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:13:17] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-09 17:13:17] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-09 17:13:17] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-09 17:13:17] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-09 17:13:17] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:13:17] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-09 17:13:17] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:13:17] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-09 17:13:17] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:13:17] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-09 17:13:17] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:13:17] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:13:17] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:13:17] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:13:17] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:13:17] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:13:17] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:13:17] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:13:17] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:13:17] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:13:17] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-09 17:13:17] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-09 17:13:17] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-09 17:13:17] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-09 17:13:17] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-09 17:13:17] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-09 17:13:17] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:13:17] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-09 17:13:17] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-09 17:13:17] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-09 17:13:17] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-09 17:13:17] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-09 17:13:17] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-09 17:13:17] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-09 17:13:17] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-09 17:13:17] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-09 17:13:17] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-09 17:13:17] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-09 17:13:17] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-09 17:13:17] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-09 17:13:17] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-09 17:13:17] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-09 17:13:17] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-09 17:13:17] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-09 17:13:17] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:13:17] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:13:17] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:13:17] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:13:17] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:13:17] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:13:17] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:13:17] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:13:17] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5c9aa764
[2013-07-09 17:13:17] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 55ed117b-eb61-40b9-9693-75a8a8a0516b (<unnamed>)
[2013-07-09 17:13:17] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-09 17:13:17] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-09 17:13:17] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:13:17] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:13:17] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:13:17] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:13:17] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:13:17] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:13:17] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:13:17] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:13:17] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:13:17] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:13:17] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:13:17] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:13:17] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:13:17] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:13:17] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:13:17] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:13:17] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:13:17] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:13:17] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:13:17] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:13:17] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:13:17] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:13:17] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:13:17] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:13:17] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:13:17] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:13:17] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:13:17] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-09 17:13:17] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-09 17:13:17] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-09 17:13:17] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-09 17:13:17] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-09 17:13:17] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-09 17:13:17] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-09 17:13:17] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-09 17:13:17] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-09 17:13:17] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-09 17:13:17] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-09 17:13:17] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-09 17:13:17] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-09 17:13:17] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-09 17:13:17] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-09 17:13:17] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-09 17:13:17] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-09 17:13:17] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-09 17:13:17] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-09 17:13:17] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-09 17:13:17] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-09 17:13:17] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-09 17:13:17] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-09 17:13:17] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-09 17:13:17] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-09 17:14:49] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:14:49] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:14:49] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-09 17:14:49] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 17:14:49] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-09 17:14:51] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:14:51] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130709T161451Z!1373386489-17329-0!http://localhost:8080/ldap/jcb98!jcb98!!pwd!22489!!2!fZSMBKq05kSnPdKeKDOsLGY7mYj0AGbxZmfcJUS1fjrB2kYeNh1o-AeIC8QuVTBxyqBoF54wgkvB.OvEUBcS0hUXP4Ub-Vb9zmavTMCsHinkXUp31f-i9qEDjDQAas4JjNy5iobH1ShqDDzZgOUpfcdxmVXoYEGky.w1NpWCMnU_
[2013-07-09 17:14:51] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T161449Z, fail: 
[2013-07-09 17:14:51] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 17:14:51] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-09 17:14:51] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130709T161451Z Last: 1373386491618 Life: 22489 ID: 1373386489-17329-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:14:51] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:14:51] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:14:51] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T161449Z, fail: 
[2013-07-09 17:14:51] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T161451Z Last: 1373386491618 Life: 22489 ID: 1373386489-17329-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:14:51] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:14:51] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-09 17:14:51] [DEBUG] LDAPProvider:45 - Trying to obtain data for user jcb98
[2013-07-09 17:14:51] [DEBUG] LDAPProvider:47 - Trying to obtain displayName for user jcb98
[2013-07-09 17:14:51] [DEBUG] LDAPProvider:49 - Trying to obtain email address for user jcb98
[2013-07-09 17:14:51] [DEBUG] LDAPProvider:51 - Trying to obtain Institutions for user jcb98
[2013-07-09 17:14:51] [DEBUG] LDAPProvider:76 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:14:51] [DEBUG] LDAPProvider:53 - Trying to obtain roles for user jcb98
[2013-07-09 17:17:05] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-09 17:17:05] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-09 17:17:05] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-09 17:17:05] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-09 17:17:05] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-09 17:17:05] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b90725e
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b90725e
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4b90725e
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5492de02
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a8bd3bb
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1a0283e
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@7cd47880
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@7cd47880
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7cd47880
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@12e29f36
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@12e29f36
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@12e29f36
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@57044c5
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@57044c5
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@57044c5
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@174da86b
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@174da86b
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@174da86b
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@db951f2
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@db951f2
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@db951f2
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@7051630a
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@7051630a
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7051630a
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@3b947647
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@3b947647
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3b947647
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@f6a8823
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@f6a8823
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@216feee5
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@216feee5
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@4b5a4a77
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4b5a4a77
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1d91eb90
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@153d4c49
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@28722969
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@28722969
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@4dc4e792
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4dc4e792
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@3e7c609
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3e7c609
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7810a519
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7810a519
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7810a519
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5c392fe8
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@1d30b5e2
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d30b5e2
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d30b5e2
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@32d35f5f
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@c9021e3
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@c9021e3
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@5fb45ddc
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5fb45ddc
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2f87fafc
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2f87fafc
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@34f34071
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@34f34071
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6d289e48
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6d289e48
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@55a517bd
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1db5d2b2
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@4c6030f9
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4c6030f9
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@4c6030f9
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7a258c74
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7a258c74
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7a258c74
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@7696e4c
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@7c6743e2
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7c6743e2
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@7c6743e2
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@79b2591c
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@79b2591c
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@79b2591c
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@b04bce3
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@3484fdbc
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@5ecfe500
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5ecfe500
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@561140db
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@91456c5
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@91456c5
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@1e3a4822
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e3a4822
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@199b7c62
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@72d8978c
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@b45c414
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@28c4b5f
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@28c4b5f
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@20e64795
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e659812
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4fe2fe5d
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3fa9b4a4
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1e929ba3
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2b27fa03
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4d8ef117
[2013-07-09 17:17:05] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@637644c8
[2013-07-09 17:17:05] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-09 17:17:05] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-09 17:17:05] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-09 17:17:05] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-09 17:17:05] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-09 17:17:05] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-09 17:17:05] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-09 17:17:05] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-09 17:17:05] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-09 17:17:05] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-09 17:17:05] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-09 17:17:05] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-09 17:17:05] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-09 17:17:05] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-09 17:17:05] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-09 17:17:05] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-09 17:17:05] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-09 17:17:05] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-09 17:17:05] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-09 17:17:05] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-09 17:17:05] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-09 17:17:05] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-09 17:17:05] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-09 17:17:05] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-09 17:17:05] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-09 17:17:05] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-09 17:17:05] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-09 17:17:05] [DEBUG] Configuration:1947 - connection.password=
[2013-07-09 17:17:05] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-09 17:17:05] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-09 17:17:05] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-09 17:17:05] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-09 17:17:05] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-09 17:17:05] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-09 17:17:05] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-09 17:17:05] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-09 17:17:05] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-09 17:17:05] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-09 17:17:05] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-09 17:17:05] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-09 17:17:05] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-09 17:17:05] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-09 17:17:05] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-09 17:17:05] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-09 17:17:05] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-09 17:17:05] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-09 17:17:05] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-09 17:17:05] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-09 17:17:05] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-09 17:17:05] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-09 17:17:05] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-09 17:17:05] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-09 17:17:05] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:17:05] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:17:05] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-09 17:17:06] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:17:06] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:17:06] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-09 17:17:06] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-09 17:17:06] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:17:06] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:17:06] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:17:06] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:17:06] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:17:06] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-09 17:17:06] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-09 17:17:06] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-09 17:17:06] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-09 17:17:06] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-09 17:17:06] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-09 17:17:06] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:17:06] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-09 17:17:06] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-09 17:17:06] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-09 17:17:06] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:17:06] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:17:06] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-09 17:17:06] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-09 17:17:06] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:17:06] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:17:06] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:17:06] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:17:06] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-09 17:17:06] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-09 17:17:06] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-09 17:17:06] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-09 17:17:06] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:17:06] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-09 17:17:06] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-09 17:17:06] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-09 17:17:06] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:17:06] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:17:06] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-09 17:17:06] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-09 17:17:06] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:17:06] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:17:06] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:17:06] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:17:06] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-09 17:17:06] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-09 17:17:06] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-09 17:17:06] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-09 17:17:06] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:17:06] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-09 17:17:06] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:17:06] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-09 17:17:06] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:17:06] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-09 17:17:06] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:17:06] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:17:06] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:17:06] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:17:06] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:17:06] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:17:06] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:17:06] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:17:06] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:17:06] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:17:06] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-09 17:17:06] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-09 17:17:06] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-09 17:17:06] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-09 17:17:06] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-09 17:17:06] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-09 17:17:06] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-09 17:17:06] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:17:06] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:17:06] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:17:06] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-09 17:17:06] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-09 17:17:06] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-09 17:17:06] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-09 17:17:06] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-09 17:17:06] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-09 17:17:06] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-09 17:17:06] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-09 17:17:06] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-09 17:17:06] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-09 17:17:06] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-09 17:17:06] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-09 17:17:06] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-09 17:17:06] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-09 17:17:06] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-09 17:17:06] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-09 17:17:06] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-09 17:17:06] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:17:06] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:17:06] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:17:06] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:17:06] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:17:06] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:17:06] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:17:06] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:17:06] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7c230be4
[2013-07-09 17:17:06] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 57abdfe5-4b47-43db-94c4-a9ab58e955f8 (<unnamed>)
[2013-07-09 17:17:06] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-09 17:17:06] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-09 17:17:06] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:17:06] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:17:06] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:17:06] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:17:06] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:17:06] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:17:06] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:17:06] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:17:06] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:17:06] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:17:06] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:17:06] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:17:06] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:17:06] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:17:06] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:17:06] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:17:06] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:17:06] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:17:06] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:17:06] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:17:06] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:17:06] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:17:06] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:17:06] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:17:06] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:17:06] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:17:06] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:17:06] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:17:06] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:17:06] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:17:06] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:17:06] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:17:06] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:17:06] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:17:06] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:17:06] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-09 17:17:06] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-09 17:17:06] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-09 17:17:06] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-09 17:17:06] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-09 17:17:06] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-09 17:17:06] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-09 17:17:06] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-09 17:17:06] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-09 17:17:06] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-09 17:17:06] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-09 17:17:06] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-09 17:17:06] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-09 17:17:06] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-09 17:17:06] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-09 17:17:06] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-09 17:17:06] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-09 17:17:06] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-09 17:17:06] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-09 17:17:06] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-09 17:17:06] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-09 17:17:06] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-09 17:17:06] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-09 17:17:06] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-09 17:17:06] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-09 17:17:06] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:17:06] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:17:06] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-09 17:17:06] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 17:17:06] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-09 17:17:08] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:17:08] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130709T161708Z!1373386626-17321-2!http://localhost:8080/ldap/jcb98!jcb98!!pwd!22352!!2!oM4hwyDQP7kLS6cW.W.dGEujn.svGqHVwROHvaNk2oVPogrB0euSkC.jS5scLfFIgeOswG1nR0liRT8Ra0s7YvkJegyAvEKo-WbqGqosBnsJGGJ0dH0ZS7KwiMvue2Uet0N5kirqs-ObxKogDRWn9RIk3XSP7YFuqdqioZUTe5c_
[2013-07-09 17:17:08] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T161706Z, fail: 
[2013-07-09 17:17:08] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 17:17:08] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-09 17:17:08] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130709T161708Z Last: 1373386628356 Life: 22352 ID: 1373386626-17321-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:17:08] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:17:08] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:17:08] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T161706Z, fail: 
[2013-07-09 17:17:08] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T161708Z Last: 1373386628356 Life: 22352 ID: 1373386626-17321-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:17:08] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:17:08] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-09 17:17:08] [DEBUG] LDAPProvider:45 - Trying to obtain data for user jcb98
[2013-07-09 17:17:08] [DEBUG] LDAPProvider:47 - Trying to obtain displayName for user jcb98
[2013-07-09 17:17:08] [DEBUG] LDAPProvider:49 - Trying to obtain email address for user jcb98
[2013-07-09 17:17:08] [DEBUG] LDAPProvider:51 - Trying to obtain Institutions for user jcb98
[2013-07-09 17:17:08] [DEBUG] LDAPProvider:68 - toArray() called with attribute ou: Homerton College - Undergraduates
[2013-07-09 17:17:08] [DEBUG] LDAPProvider:77 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:17:08] [DEBUG] LDAPProvider:53 - Trying to obtain roles for user jcb98
[2013-07-09 17:17:08] [DEBUG] LDAPProvider:68 - toArray() called with attribute null
[2013-07-09 17:20:04] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/acr31
[2013-07-09 17:20:04] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:20:04] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T161706Z, fail: 
[2013-07-09 17:20:04] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T161708Z Last: 1373386628356 Life: 22352 ID: 1373386626-17321-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:20:04] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:20:04] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/acr31
[2013-07-09 17:20:04] [DEBUG] LDAPProvider:45 - Trying to obtain data for user acr31
[2013-07-09 17:20:04] [DEBUG] LDAPProvider:47 - Trying to obtain displayName for user acr31
[2013-07-09 17:20:04] [DEBUG] LDAPProvider:49 - Trying to obtain email address for user acr31
[2013-07-09 17:20:04] [DEBUG] LDAPProvider:51 - Trying to obtain Institutions for user acr31
[2013-07-09 17:20:04] [DEBUG] LDAPProvider:68 - toArray() called with attribute ou: Queens' College, Computer Laboratory
[2013-07-09 17:20:04] [DEBUG] LDAPProvider:77 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:20:04] [DEBUG] LDAPProvider:53 - Trying to obtain roles for user acr31
[2013-07-09 17:20:04] [DEBUG] LDAPProvider:68 - toArray() called with attribute title: Official Fellow, University Lecturer
[2013-07-09 17:20:04] [DEBUG] LDAPProvider:77 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:20:04] [DEBUG] LDAPProvider:63 - Returning user info for acr31
[2013-07-09 17:22:46] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-09 17:22:46] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-09 17:22:46] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-09 17:22:46] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-09 17:22:46] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-09 17:22:46] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@15837e8
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@15837e8
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@15837e8
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@61335b86
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@477baf4
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5da0b94d
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@db2e44d
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@db2e44d
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@db2e44d
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@6b6c14c0
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@6b6c14c0
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6b6c14c0
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@3b947647
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@3b947647
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3b947647
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@1a15cd9a
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@1a15cd9a
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1a15cd9a
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@256b352c
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@256b352c
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@256b352c
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@14cef147
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@14cef147
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@14cef147
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@54011d95
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@54011d95
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@54011d95
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@23f2bc83
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@23f2bc83
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@c387202
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@c387202
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@111bda67
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@111bda67
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3e7c609
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7be758ca
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@cc749e4
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@cc749e4
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@5ec22978
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5ec22978
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@6cb1cb25
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6cb1cb25
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3a7e479a
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3a7e479a
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3a7e479a
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@34f34071
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@6a46f764
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6a46f764
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6a46f764
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3c6e4ba6
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@55a517bd
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@55a517bd
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@1db5d2b2
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1db5d2b2
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4c6030f9
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4c6030f9
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@7a258c74
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7a258c74
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7c6743e2
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7c6743e2
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71e13a2c
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@468034b6
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@976484e
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@976484e
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@976484e
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@74bffc3a
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@74bffc3a
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@74bffc3a
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@59e14a78
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@db2b10a
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@db2b10a
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@db2b10a
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3ea763a
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3ea763a
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3ea763a
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@1f98a654
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@561140db
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@164ca42b
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@164ca42b
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4a393167
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@69c5a33b
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69c5a33b
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@6e659812
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6e659812
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3fa9b4a4
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2b27fa03
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@699dd97b
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@5230b601
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5230b601
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@28bd36fa
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1e646bfb
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@52ed3b53
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@54d1f0ad
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2310195c
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@75f0f8ff
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1f6b69d7
[2013-07-09 17:22:46] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@44f1b25e
[2013-07-09 17:22:46] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-09 17:22:46] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-09 17:22:46] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-09 17:22:46] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-09 17:22:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-09 17:22:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-09 17:22:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-09 17:22:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-09 17:22:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-09 17:22:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-09 17:22:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-09 17:22:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-09 17:22:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-09 17:22:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-09 17:22:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-09 17:22:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-09 17:22:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-09 17:22:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-09 17:22:46] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-09 17:22:46] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-09 17:22:46] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-09 17:22:46] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-09 17:22:46] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-09 17:22:46] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-09 17:22:46] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-09 17:22:46] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-09 17:22:46] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-09 17:22:46] [DEBUG] Configuration:1947 - connection.password=
[2013-07-09 17:22:46] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-09 17:22:46] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-09 17:22:46] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-09 17:22:46] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-09 17:22:46] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-09 17:22:46] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-09 17:22:46] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-09 17:22:46] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-09 17:22:46] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-09 17:22:46] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-09 17:22:46] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-09 17:22:46] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-09 17:22:46] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-09 17:22:46] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-09 17:22:46] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-09 17:22:46] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-09 17:22:46] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-09 17:22:46] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-09 17:22:47] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-09 17:22:47] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-09 17:22:47] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-09 17:22:47] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-09 17:22:47] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-09 17:22:47] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-09 17:22:47] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:22:47] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:22:47] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-09 17:22:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:22:47] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:22:47] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-09 17:22:47] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-09 17:22:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:22:47] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:22:47] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:22:47] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:22:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:22:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-09 17:22:47] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-09 17:22:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-09 17:22:47] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-09 17:22:47] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-09 17:22:47] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-09 17:22:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:22:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-09 17:22:47] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-09 17:22:47] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-09 17:22:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:22:47] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:22:47] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-09 17:22:47] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-09 17:22:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:22:47] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:22:47] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:22:47] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:22:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-09 17:22:47] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-09 17:22:47] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-09 17:22:47] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-09 17:22:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:22:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-09 17:22:47] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-09 17:22:47] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-09 17:22:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:22:47] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:22:47] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-09 17:22:47] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-09 17:22:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:22:47] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:22:47] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:22:47] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:22:47] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-09 17:22:47] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-09 17:22:47] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-09 17:22:47] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-09 17:22:47] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:22:47] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-09 17:22:47] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:22:47] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-09 17:22:47] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:22:47] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-09 17:22:47] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:22:47] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:22:47] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:22:47] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:22:47] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:22:47] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:22:47] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:22:47] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:22:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:22:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:22:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-09 17:22:47] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-09 17:22:47] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-09 17:22:47] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-09 17:22:47] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-09 17:22:47] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-09 17:22:47] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-09 17:22:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:22:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:22:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:22:47] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-09 17:22:47] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-09 17:22:47] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-09 17:22:47] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-09 17:22:47] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-09 17:22:47] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-09 17:22:47] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-09 17:22:47] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-09 17:22:47] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-09 17:22:47] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-09 17:22:47] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-09 17:22:47] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-09 17:22:47] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-09 17:22:47] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-09 17:22:47] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-09 17:22:47] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-09 17:22:47] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-09 17:22:47] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:22:47] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:22:47] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:22:47] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:22:47] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:22:47] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:22:47] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:22:47] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:22:47] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7afbd1fc
[2013-07-09 17:22:47] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 427e68c1-823d-46d3-9864-4147042c2127 (<unnamed>)
[2013-07-09 17:22:47] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-09 17:22:47] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-09 17:22:47] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:22:47] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:22:47] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:22:47] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:22:47] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:22:47] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:22:47] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:22:47] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:22:47] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:22:47] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:22:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:22:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:22:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:22:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:22:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:22:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:22:47] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:22:47] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:22:47] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:22:47] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:22:47] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:22:47] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:22:47] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:22:47] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:22:47] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:22:47] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:22:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:22:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:22:47] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:22:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:22:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:22:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:22:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:22:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:22:47] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:22:47] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-09 17:22:47] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-09 17:22:47] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-09 17:22:47] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-09 17:22:47] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-09 17:22:47] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-09 17:22:47] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-09 17:22:47] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-09 17:22:47] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-09 17:22:47] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-09 17:22:47] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-09 17:22:47] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-09 17:22:47] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-09 17:22:47] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-09 17:22:47] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-09 17:22:47] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-09 17:22:47] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-09 17:22:47] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-09 17:22:47] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-09 17:22:47] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-09 17:22:47] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-09 17:22:47] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-09 17:22:47] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-09 17:22:47] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-09 17:22:47] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-09 17:22:47] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/acr31
[2013-07-09 17:22:47] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:22:47] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-09 17:22:47] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 17:22:47] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/acr31
[2013-07-09 17:22:49] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/acr31
[2013-07-09 17:22:49] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130709T162249Z!1373386967-17534-0!http://localhost:8080/ldap/acr31!jcb98!!pwd!22011!!2!bXvI-KtTl0IWkj2Mrq1dD86WYsL8S5x9fDkQa-Di5fy6tDZXbCIlVSuSuDg07NuPNMRX4rP7IpMYP3imCqRDczCyLL6Pzy9zwV4n-WsIWeEF8pzXyxWN3invzw0Rbv2Owz7ATwnmJxLUqKhI.jPkceDqVEuagMN8e9O2EjP9QXo_
[2013-07-09 17:22:49] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/acr31, desc: , aauth: , iact: , msg: , params: , date: 20130709T162247Z, fail: 
[2013-07-09 17:22:49] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 17:22:49] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-09 17:22:49] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130709T162249Z Last: 1373386969276 Life: 22011 ID: 1373386967-17534-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:22:49] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/acr31
[2013-07-09 17:22:49] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:22:49] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/acr31, desc: , aauth: , iact: , msg: , params: , date: 20130709T162247Z, fail: 
[2013-07-09 17:22:49] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T162249Z Last: 1373386969276 Life: 22011 ID: 1373386967-17534-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:22:49] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:22:49] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/acr31
[2013-07-09 17:22:49] [DEBUG] LDAPProvider:45 - Trying to obtain data for user acr31
[2013-07-09 17:22:49] [DEBUG] LDAPProvider:47 - Trying to obtain displayName for user acr31
[2013-07-09 17:22:49] [DEBUG] LDAPProvider:49 - Trying to obtain email address for user acr31
[2013-07-09 17:22:49] [DEBUG] LDAPProvider:51 - Trying to obtain Institutions for user acr31
[2013-07-09 17:22:49] [DEBUG] LDAPProvider:68 - toArray() called with attribute: ou: Queens' College, Computer Laboratory
[2013-07-09 17:22:49] [DEBUG] LDAPProvider:82 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:22:49] [DEBUG] LDAPProvider:53 - Trying to obtain roles for user acr31
[2013-07-09 17:22:49] [DEBUG] LDAPProvider:68 - toArray() called with attribute: title: Official Fellow, University Lecturer
[2013-07-09 17:22:49] [DEBUG] LDAPProvider:82 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:22:49] [DEBUG] LDAPProvider:63 - Returning user info for acr31
[2013-07-09 17:22:52] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:22:52] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:22:52] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/acr31, desc: , aauth: , iact: , msg: , params: , date: 20130709T162247Z, fail: 
[2013-07-09 17:22:52] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T162249Z Last: 1373386969276 Life: 22011 ID: 1373386967-17534-0 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:22:52] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:22:52] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-09 17:22:52] [DEBUG] LDAPProvider:45 - Trying to obtain data for user jcb98
[2013-07-09 17:22:52] [DEBUG] LDAPProvider:47 - Trying to obtain displayName for user jcb98
[2013-07-09 17:22:52] [DEBUG] LDAPProvider:49 - Trying to obtain email address for user jcb98
[2013-07-09 17:22:52] [DEBUG] LDAPProvider:51 - Trying to obtain Institutions for user jcb98
[2013-07-09 17:22:52] [DEBUG] LDAPProvider:68 - toArray() called with attribute: ou: Homerton College - Undergraduates
[2013-07-09 17:22:52] [DEBUG] LDAPProvider:82 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:22:52] [DEBUG] LDAPProvider:53 - Trying to obtain roles for user jcb98
[2013-07-09 17:22:52] [DEBUG] LDAPProvider:68 - toArray() called with attribute: null
[2013-07-09 17:22:52] [DEBUG] LDAPProvider:70 - Attribute is null. Returning String[0].
[2013-07-09 17:22:52] [DEBUG] LDAPProvider:63 - Returning user info for jcb98
[2013-07-09 17:23:43] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-09 17:23:43] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-09 17:23:43] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-09 17:23:43] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-09 17:23:43] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-09 17:23:43] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@5f99ea3c
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@5f99ea3c
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5f99ea3c
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2bf87baf
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6fb8fcdd
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@55e03a61
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@3ea763a
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@3ea763a
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3ea763a
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@1f98a654
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@1f98a654
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f98a654
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@51f2412a
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@51f2412a
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51f2412a
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@4d12bc7b
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@4d12bc7b
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4d12bc7b
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@70da8742
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@70da8742
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@70da8742
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@2d6acad2
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@2d6acad2
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2d6acad2
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@455bfaf
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@455bfaf
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@455bfaf
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@b45c414
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@b45c414
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@20b124fa
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@20b124fa
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@26a150e
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@26a150e
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@20e64795
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3fa9b4a4
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@4d8ef117
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4d8ef117
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@c7f5bf9
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@c7f5bf9
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@28bd36fa
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@28bd36fa
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@75f0f8ff
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@75f0f8ff
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@75f0f8ff
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4a018e1b
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@3403f5a0
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3403f5a0
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3403f5a0
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@37f808e6
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@5dee69d3
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5dee69d3
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@5b0010ec
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5b0010ec
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@be389b8
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@be389b8
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@6feb139e
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6feb139e
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@74914a0a
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@74914a0a
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3b3e3940
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1fb93526
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@29d602b3
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@29d602b3
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@29d602b3
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6dca1837
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6dca1837
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6dca1837
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@1ad997f9
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@bd5d765
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@bd5d765
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@bd5d765
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@171fcdde
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@171fcdde
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@171fcdde
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@7371b246
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@466c137c
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@69c1f2c
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@69c1f2c
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@67afe460
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@5dbb6a69
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5dbb6a69
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@59b68d78
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@59b68d78
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1f05562b
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@25927275
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@c106121
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@6fe88c7f
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6fe88c7f
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7aa36771
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7ddc6a9d
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11dba9f9
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6c742397
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3cccc621
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@27e3bfb6
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@593f5a2f
[2013-07-09 17:23:43] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4e39f16f
[2013-07-09 17:23:43] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-09 17:23:43] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-09 17:23:43] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-09 17:23:43] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-09 17:23:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-09 17:23:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-09 17:23:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-09 17:23:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-09 17:23:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-09 17:23:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-09 17:23:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-09 17:23:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-09 17:23:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-09 17:23:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-09 17:23:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-09 17:23:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-09 17:23:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-09 17:23:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-09 17:23:43] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-09 17:23:43] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-09 17:23:43] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-09 17:23:43] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-09 17:23:43] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-09 17:23:43] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-09 17:23:43] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-09 17:23:43] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-09 17:23:43] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-09 17:23:43] [DEBUG] Configuration:1947 - connection.password=
[2013-07-09 17:23:43] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-09 17:23:43] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-09 17:23:43] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-09 17:23:43] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-09 17:23:43] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-09 17:23:43] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-09 17:23:43] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-09 17:23:43] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-09 17:23:43] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-09 17:23:43] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-09 17:23:43] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-09 17:23:43] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-09 17:23:43] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-09 17:23:43] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-09 17:23:43] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-09 17:23:43] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-09 17:23:43] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-09 17:23:43] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-09 17:23:43] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-09 17:23:43] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-09 17:23:43] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-09 17:23:43] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-09 17:23:43] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-09 17:23:43] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-09 17:23:43] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:23:43] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:23:43] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-09 17:23:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:23:43] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:23:43] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-09 17:23:43] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-09 17:23:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:23:43] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:23:43] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:23:43] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:23:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:23:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-09 17:23:43] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-09 17:23:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-09 17:23:43] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-09 17:23:43] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-09 17:23:43] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-09 17:23:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:23:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-09 17:23:43] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-09 17:23:43] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-09 17:23:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:23:43] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:23:43] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-09 17:23:43] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-09 17:23:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:23:43] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:23:43] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:23:43] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:23:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-09 17:23:43] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-09 17:23:43] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-09 17:23:43] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-09 17:23:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:23:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-09 17:23:43] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-09 17:23:43] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-09 17:23:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:23:43] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:23:43] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-09 17:23:43] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-09 17:23:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:23:43] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:23:43] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:23:43] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:23:43] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-09 17:23:43] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-09 17:23:43] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-09 17:23:43] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-09 17:23:43] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:23:43] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-09 17:23:43] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:23:43] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-09 17:23:43] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:23:43] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-09 17:23:43] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:23:43] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:23:43] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:23:43] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:23:43] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:23:43] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:23:43] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:23:43] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:23:43] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:23:43] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:23:43] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-09 17:23:43] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-09 17:23:43] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-09 17:23:43] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-09 17:23:43] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-09 17:23:43] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-09 17:23:43] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-09 17:23:43] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:23:43] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:23:43] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:23:43] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-09 17:23:43] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-09 17:23:43] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-09 17:23:43] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-09 17:23:43] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-09 17:23:43] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-09 17:23:43] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-09 17:23:43] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-09 17:23:43] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-09 17:23:43] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-09 17:23:43] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-09 17:23:43] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-09 17:23:43] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-09 17:23:43] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-09 17:23:43] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-09 17:23:43] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-09 17:23:43] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-09 17:23:43] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:23:43] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:23:43] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:23:43] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:23:43] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:23:43] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:23:43] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:23:43] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:23:43] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7c9ed5d6
[2013-07-09 17:23:43] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: a74e6716-7d1a-4bb2-8dd7-72f4ca53f8cc (<unnamed>)
[2013-07-09 17:23:43] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-09 17:23:43] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-09 17:23:43] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:23:43] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:23:43] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:23:43] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:23:43] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:23:43] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:23:43] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:23:43] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:23:43] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:23:43] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:23:43] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:23:43] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:23:43] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:23:43] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:23:43] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:23:43] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:23:43] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:23:43] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:23:43] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:23:43] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:23:43] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:23:43] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:23:43] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:23:43] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:23:43] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:23:43] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:23:43] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:23:43] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:23:43] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:23:43] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:23:44] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:23:44] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:23:44] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:23:44] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:23:44] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:23:44] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-09 17:23:44] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-09 17:23:44] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-09 17:23:44] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-09 17:23:44] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-09 17:23:44] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-09 17:23:44] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-09 17:23:44] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-09 17:23:44] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-09 17:23:44] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-09 17:23:44] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-09 17:23:44] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-09 17:23:44] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-09 17:23:44] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-09 17:23:44] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-09 17:23:44] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-09 17:23:44] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-09 17:23:44] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-09 17:23:44] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-09 17:23:44] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-09 17:23:44] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-09 17:23:44] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-09 17:23:44] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-09 17:23:44] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-09 17:23:44] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-09 17:23:47] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:23:47] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:23:47] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-09 17:23:47] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 17:23:47] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-09 17:23:48] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:23:48] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130709T162348Z!1373387027-17319-2!http://localhost:8080/ldap/jcb98!jcb98!!pwd!21951!!2!cYwr86xXzMujV5DGUuoQwmKVST4yCaov3emzjW7aPbUx1NfJ.p1MwWaCnTAEGACpevVHqHIYhU68yrcMnVBLks1D7JIHPFy4bDr.6VcSt-QxaUxioTdKs0HxxDhM8HYwDD2BY7p6knqcKcKTJ8H0E05WQLt9N1b4pVAin1LRR-4_
[2013-07-09 17:23:48] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T162347Z, fail: 
[2013-07-09 17:23:48] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 17:23:48] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-09 17:23:48] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130709T162348Z Last: 1373387028750 Life: 21951 ID: 1373387027-17319-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:23:48] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:23:48] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:23:48] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T162347Z, fail: 
[2013-07-09 17:23:48] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T162348Z Last: 1373387028750 Life: 21951 ID: 1373387027-17319-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:23:48] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:23:48] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-09 17:23:48] [DEBUG] LDAPProvider:45 - Trying to obtain data for user jcb98
[2013-07-09 17:23:48] [DEBUG] LDAPProvider:47 - Trying to obtain displayName for user jcb98
[2013-07-09 17:23:48] [DEBUG] LDAPProvider:49 - Trying to obtain email address for user jcb98
[2013-07-09 17:23:48] [DEBUG] LDAPProvider:51 - Trying to obtain Institutions for user jcb98
[2013-07-09 17:23:48] [DEBUG] LDAPProvider:68 - toArray() called with attribute: ou: Homerton College - Undergraduates
[2013-07-09 17:23:48] [DEBUG] LDAPProvider:82 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:23:48] [DEBUG] LDAPProvider:53 - Trying to obtain roles for user jcb98
[2013-07-09 17:23:48] [DEBUG] LDAPProvider:68 - toArray() called with attribute: null
[2013-07-09 17:23:48] [DEBUG] LDAPProvider:70 - Attribute is null. Returning String[0].
[2013-07-09 17:23:48] [DEBUG] LDAPProvider:55 - Trying to obtain data for user jcb98
[2013-07-09 17:23:48] [DEBUG] LDAPProvider:63 - Returning user info for jcb98
[2013-07-09 17:26:50] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-09 17:26:50] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-09 17:26:50] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-09 17:26:50] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-09 17:26:50] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-09 17:26:50] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@7c6743e2
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@7c6743e2
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7c6743e2
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79b2591c
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@68487fb7
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@59e14a78
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@17e319a
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@17e319a
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@17e319a
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@43824d2c
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@43824d2c
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@43824d2c
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@dc44a6d
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@dc44a6d
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@dc44a6d
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@2bb64b70
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@2bb64b70
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2bb64b70
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@4a393167
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@4a393167
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4a393167
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@b9deddb
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@b9deddb
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@b9deddb
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@1e3a4822
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@1e3a4822
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e3a4822
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2e5facbd
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2e5facbd
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@154db52b
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@154db52b
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@766d4f30
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@766d4f30
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@48a84b47
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4fe2fe5d
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@2b27fa03
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2b27fa03
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@7ba6eeab
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7ba6eeab
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@7bfd25ce
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7bfd25ce
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2310195c
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2310195c
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2310195c
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2d97d09f
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@9f6f3dc
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@9f6f3dc
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@9f6f3dc
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6ff2f60d
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@3a252a17
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3a252a17
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@242870b7
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@242870b7
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2025b64d
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2025b64d
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@5fc8ad52
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5fc8ad52
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@55444319
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@55444319
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6e94124f
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@41d753b7
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@2555e3ab
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2555e3ab
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@2555e3ab
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5637dde9
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5637dde9
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5637dde9
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@6128453c
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@30f49e8f
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@30f49e8f
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@30f49e8f
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@771931f8
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@771931f8
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@771931f8
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@7433c78b
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@66201d6d
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@4ad38c3d
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4ad38c3d
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@73c28517
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@1f48b272
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1f48b272
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@506dd108
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@506dd108
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6001ef4b
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@175c30f6
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@f8b7298
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@44ec366a
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44ec366a
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@c601f3f
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7aa36771
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7ddc6a9d
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@11dba9f9
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6c742397
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3cccc621
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@27e3bfb6
[2013-07-09 17:26:50] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@593f5a2f
[2013-07-09 17:26:50] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-09 17:26:50] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-09 17:26:50] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-09 17:26:50] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-09 17:26:50] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-09 17:26:50] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-09 17:26:50] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-09 17:26:50] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-09 17:26:50] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-09 17:26:50] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-09 17:26:50] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-09 17:26:50] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-09 17:26:50] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-09 17:26:50] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-09 17:26:50] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-09 17:26:50] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-09 17:26:50] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-09 17:26:50] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-09 17:26:50] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-09 17:26:50] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-09 17:26:50] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-09 17:26:50] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-09 17:26:50] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-09 17:26:50] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-09 17:26:50] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-09 17:26:50] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-09 17:26:50] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-09 17:26:50] [DEBUG] Configuration:1947 - connection.password=
[2013-07-09 17:26:50] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-09 17:26:50] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-09 17:26:50] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-09 17:26:50] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-09 17:26:50] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-09 17:26:50] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-09 17:26:50] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-09 17:26:50] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-09 17:26:50] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-09 17:26:50] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-09 17:26:50] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-09 17:26:50] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-09 17:26:50] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-09 17:26:50] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-09 17:26:50] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-09 17:26:50] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-09 17:26:50] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-09 17:26:50] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-09 17:26:50] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-09 17:26:50] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-09 17:26:50] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-09 17:26:50] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-09 17:26:50] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-09 17:26:50] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-09 17:26:50] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:26:50] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:26:50] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-09 17:26:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:26:50] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:26:50] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-09 17:26:50] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-09 17:26:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:26:50] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:26:50] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:26:50] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:26:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:26:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-09 17:26:50] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-09 17:26:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-09 17:26:50] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-09 17:26:50] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-09 17:26:50] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-09 17:26:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:26:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-09 17:26:50] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-09 17:26:50] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-09 17:26:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:26:50] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:26:50] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-09 17:26:50] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-09 17:26:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:26:50] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:26:50] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:26:50] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:26:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-09 17:26:50] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-09 17:26:50] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-09 17:26:50] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-09 17:26:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:26:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-09 17:26:50] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-09 17:26:50] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-09 17:26:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:26:50] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:26:50] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-09 17:26:50] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-09 17:26:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:26:50] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:26:50] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:26:50] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:26:50] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-09 17:26:50] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-09 17:26:50] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-09 17:26:50] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-09 17:26:50] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:26:50] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-09 17:26:50] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:26:50] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-09 17:26:50] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:26:50] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-09 17:26:50] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:26:50] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:26:50] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:26:50] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:26:50] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:26:50] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:26:50] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:26:50] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:26:50] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:26:50] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:26:50] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-09 17:26:50] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-09 17:26:50] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-09 17:26:50] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-09 17:26:50] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-09 17:26:50] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-09 17:26:50] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-09 17:26:50] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:26:50] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:26:50] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:26:51] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-09 17:26:51] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-09 17:26:51] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-09 17:26:51] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-09 17:26:51] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-09 17:26:51] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-09 17:26:51] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-09 17:26:51] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-09 17:26:51] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-09 17:26:51] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-09 17:26:51] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-09 17:26:51] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-09 17:26:51] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-09 17:26:51] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-09 17:26:51] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-09 17:26:51] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-09 17:26:51] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-09 17:26:51] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:26:51] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:26:51] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:26:51] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:26:51] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:26:51] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:26:51] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:26:51] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:26:51] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6fafc4c2
[2013-07-09 17:26:51] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: f7468ca4-3a15-473e-b0f4-767aec10b6ba (<unnamed>)
[2013-07-09 17:26:51] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-09 17:26:51] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-09 17:26:51] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:26:51] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:26:51] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:26:51] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:26:51] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:26:51] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:26:51] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:26:51] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:26:51] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:26:51] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:26:51] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:26:51] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:26:51] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:26:51] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:26:51] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:26:51] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:26:51] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:26:51] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:26:51] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:26:51] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:26:51] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:26:51] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:26:51] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:26:51] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:26:51] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:26:51] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:26:51] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:26:51] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:26:51] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:26:51] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:26:51] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:26:51] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:26:51] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:26:51] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:26:51] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:26:51] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-09 17:26:51] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-09 17:26:51] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-09 17:26:51] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-09 17:26:51] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-09 17:26:51] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-09 17:26:51] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-09 17:26:51] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-09 17:26:51] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-09 17:26:51] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-09 17:26:51] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-09 17:26:51] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-09 17:26:51] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-09 17:26:51] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-09 17:26:51] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-09 17:26:51] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-09 17:26:51] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-09 17:26:51] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-09 17:26:51] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-09 17:26:51] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-09 17:26:51] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-09 17:26:51] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-09 17:26:51] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-09 17:26:51] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-09 17:26:51] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-09 17:26:52] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:26:52] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:26:52] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-09 17:26:52] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 17:26:52] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-09 17:26:53] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:26:53] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130709T162653Z!1373387212-17615-8!http://localhost:8080/ldap/jcb98!jcb98!!pwd!21766!!2!BkWhe4R4OV85Lajxk7YXxew.Fi8wh8uWfBblM.Y2ldQx-KcTyTV50xlN71a8nn60.KkaY6YSSkqGjWCDoJ0SM6rVgUXgqRTXdJRkFSruHNpW6vBhXOBospdbrqoc4VsYcCKa8SI3CFUB2XfepEPF6Kb.XDTYvdhxBSQ7jDXp5A8_
[2013-07-09 17:26:53] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T162652Z, fail: 
[2013-07-09 17:26:53] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 17:26:53] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-09 17:26:53] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130709T162653Z Last: 1373387213756 Life: 21766 ID: 1373387212-17615-8 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:26:53] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:26:53] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:26:53] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T162652Z, fail: 
[2013-07-09 17:26:53] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T162653Z Last: 1373387213756 Life: 21766 ID: 1373387212-17615-8 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:26:53] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:26:53] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-09 17:26:53] [DEBUG] LDAPProvider:45 - Trying to obtain data for user jcb98
[2013-07-09 17:26:53] [DEBUG] LDAPProvider:47 - Trying to obtain displayName for user jcb98
[2013-07-09 17:26:53] [DEBUG] LDAPProvider:49 - Trying to obtain email address for user jcb98
[2013-07-09 17:26:53] [DEBUG] LDAPProvider:51 - Trying to obtain Institutions for user jcb98
[2013-07-09 17:26:53] [DEBUG] LDAPProvider:72 - toArray() called with attribute: ou: Homerton College - Undergraduates
[2013-07-09 17:26:53] [DEBUG] LDAPProvider:86 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:26:53] [DEBUG] LDAPProvider:53 - Trying to obtain roles for user jcb98
[2013-07-09 17:26:53] [DEBUG] LDAPProvider:72 - toArray() called with attribute: null
[2013-07-09 17:26:53] [DEBUG] LDAPProvider:74 - Attribute is null. Returning String[0].
[2013-07-09 17:26:53] [DEBUG] LDAPProvider:55 - Trying to obtain data for user jcb98
[2013-07-09 17:26:53] [DEBUG] LDAPProvider:67 - Returning user info for jcb98
[2013-07-09 17:29:06] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:29:06] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:29:06] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T162652Z, fail: 
[2013-07-09 17:29:06] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T162653Z Last: 1373387213756 Life: 21766 ID: 1373387212-17615-8 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:29:06] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:29:06] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-09 17:29:06] [DEBUG] LDAPProvider:45 - Trying to obtain data for user jcb98
[2013-07-09 17:29:06] [DEBUG] LDAPProvider:47 - Trying to obtain displayName for user jcb98
[2013-07-09 17:29:06] [DEBUG] LDAPProvider:49 - Trying to obtain email address for user jcb98
[2013-07-09 17:29:06] [DEBUG] LDAPProvider:51 - Trying to obtain Institutions for user jcb98
[2013-07-09 17:29:06] [DEBUG] LDAPProvider:72 - toArray() called with attribute: ou: Homerton College - Undergraduates
[2013-07-09 17:29:06] [DEBUG] LDAPProvider:86 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:29:06] [DEBUG] LDAPProvider:53 - Trying to obtain roles for user jcb98
[2013-07-09 17:29:06] [DEBUG] LDAPProvider:72 - toArray() called with attribute: null
[2013-07-09 17:29:06] [DEBUG] LDAPProvider:74 - Attribute is null. Returning String[0].
[2013-07-09 17:29:06] [DEBUG] LDAPProvider:55 - Trying to obtain data for user jcb98
[2013-07-09 17:29:06] [DEBUG] LDAPProvider:67 - Returning user info for jcb98
[2013-07-09 17:30:32] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-09 17:30:32] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-09 17:30:32] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-09 17:30:32] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-09 17:30:32] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-09 17:30:32] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@5492de02
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@5492de02
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5492de02
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@10fd0a62
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@39b1ff47
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@15837e8
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@12e29f36
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@12e29f36
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@12e29f36
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@62f04dae
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@62f04dae
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@62f04dae
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@174da86b
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@174da86b
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@174da86b
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@4145582
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@4145582
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4145582
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@381bd13
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@381bd13
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@381bd13
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@448be1c9
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@448be1c9
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@448be1c9
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@1a15cd9a
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@1a15cd9a
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a15cd9a
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@216feee5
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@216feee5
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4b5a4a77
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4b5a4a77
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@1d91eb90
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1d91eb90
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@153d4c49
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28722969
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@15364ee5
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@15364ee5
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@3b9fa8f7
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3b9fa8f7
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@7be758ca
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7be758ca
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@34a083f2
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@34a083f2
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@34a083f2
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1d30b5e2
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@531a700a
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@531a700a
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@531a700a
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c9021e3
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@5fb45ddc
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5fb45ddc
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@2f87fafc
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2f87fafc
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@34f34071
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@34f34071
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@6a46f764
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6a46f764
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@49b9a538
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@49b9a538
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1db5d2b2
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4c6030f9
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@7a258c74
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@7a258c74
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@7a258c74
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7696e4c
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7696e4c
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7696e4c
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@7c6743e2
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@79b2591c
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@79b2591c
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@79b2591c
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@b04bce3
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@b04bce3
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@b04bce3
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@3484fdbc
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@68487fb7
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@6b91602
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b91602
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@49c88f2b
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@4a393167
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a393167
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@2f031310
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2f031310
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@69c5a33b
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b45c414
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@20b124fa
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@6e659812
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6e659812
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3fa9b4a4
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1e929ba3
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2b27fa03
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4d8ef117
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@637644c8
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@699dd97b
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7a315068
[2013-07-09 17:30:32] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3b961a84
[2013-07-09 17:30:32] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-09 17:30:32] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-09 17:30:32] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-09 17:30:32] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-09 17:30:32] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-09 17:30:32] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-09 17:30:32] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-09 17:30:32] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-09 17:30:32] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-09 17:30:32] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-09 17:30:32] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-09 17:30:32] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-09 17:30:32] [DEBUG] Configuration:1947 - connection.password=
[2013-07-09 17:30:32] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-09 17:30:32] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-09 17:30:32] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-09 17:30:32] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-09 17:30:32] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-09 17:30:32] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-09 17:30:32] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-09 17:30:32] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-09 17:30:32] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-09 17:30:32] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-09 17:30:32] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-09 17:30:32] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-09 17:30:32] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-09 17:30:32] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-09 17:30:32] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-09 17:30:32] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-09 17:30:32] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-09 17:30:32] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-09 17:30:32] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-09 17:30:32] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-09 17:30:32] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-09 17:30:32] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-09 17:30:32] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-09 17:30:32] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-09 17:30:32] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:30:32] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:30:32] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-09 17:30:32] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:30:32] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:30:32] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-09 17:30:32] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-09 17:30:32] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:30:32] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:30:32] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:30:32] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:30:32] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:30:32] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-09 17:30:32] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-09 17:30:32] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-09 17:30:32] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-09 17:30:32] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-09 17:30:32] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-09 17:30:32] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:30:32] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-09 17:30:32] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-09 17:30:32] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-09 17:30:32] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:30:32] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:30:32] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-09 17:30:32] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-09 17:30:32] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:30:32] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:30:32] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:30:32] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:30:32] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-09 17:30:32] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-09 17:30:32] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-09 17:30:32] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-09 17:30:32] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:30:32] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-09 17:30:32] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-09 17:30:32] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-09 17:30:32] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:30:32] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:30:32] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-09 17:30:32] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-09 17:30:32] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:30:32] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:30:32] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:30:32] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:30:32] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-09 17:30:32] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-09 17:30:32] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-09 17:30:32] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-09 17:30:32] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:30:32] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-09 17:30:32] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:30:32] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-09 17:30:32] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:30:32] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-09 17:30:32] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:30:32] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:30:32] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:30:32] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:30:32] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:30:32] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:30:32] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:30:32] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:30:32] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:30:32] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:30:32] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-09 17:30:32] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-09 17:30:32] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-09 17:30:32] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-09 17:30:32] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-09 17:30:32] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-09 17:30:32] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:30:32] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-09 17:30:32] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-09 17:30:32] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-09 17:30:32] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-09 17:30:32] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-09 17:30:32] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-09 17:30:32] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-09 17:30:32] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-09 17:30:32] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-09 17:30:32] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-09 17:30:32] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-09 17:30:32] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-09 17:30:32] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-09 17:30:32] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-09 17:30:32] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-09 17:30:32] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-09 17:30:32] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-09 17:30:32] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:30:32] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:30:32] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:30:32] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:30:32] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:30:32] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:30:32] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:30:32] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:30:32] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@237aaeec
[2013-07-09 17:30:32] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 46d5b5d8-b9a1-420a-9c51-629546fe6a90 (<unnamed>)
[2013-07-09 17:30:32] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-09 17:30:32] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-09 17:30:32] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:30:32] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:30:32] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:30:32] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:30:32] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:30:32] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:30:32] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:30:32] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:30:32] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:30:32] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:30:32] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:30:32] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:30:32] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:30:32] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:30:32] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:30:32] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:30:32] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:30:32] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:30:32] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:30:32] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:30:32] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:30:32] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:30:32] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:30:32] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:30:32] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:30:32] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:30:32] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:30:32] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-09 17:30:32] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-09 17:30:32] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-09 17:30:32] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-09 17:30:32] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-09 17:30:32] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-09 17:30:32] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-09 17:30:32] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-09 17:30:32] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-09 17:30:32] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-09 17:30:32] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-09 17:30:32] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-09 17:30:32] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-09 17:30:32] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-09 17:30:32] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-09 17:30:32] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-09 17:30:32] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-09 17:30:32] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-09 17:30:32] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-09 17:30:32] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-09 17:30:32] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-09 17:30:32] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-09 17:30:32] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-09 17:30:32] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-09 17:30:32] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-09 17:30:33] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:30:33] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:30:33] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-09 17:30:33] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 17:30:33] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-09 17:30:34] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:30:34] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130709T163034Z!1373387433-17586-2!http://localhost:8080/ldap/jcb98!jcb98!!pwd!21545!!2!qZbYpIVJkiaO6pMCOiqaGWi5l12ekAF9hqKya3Py0PGkYRFs.1I2maQdBm5vTK9E35dkTtCI36-0bcubTTCs6wfVXVY.ubqCxUePbVcw2uLPq-87.qjvMpkk4Rp1BGJNjGP2ok2mMPm7SnYjaVn0qWdl6uv5qKUxUjmw4wLnu1c_
[2013-07-09 17:30:34] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163033Z, fail: 
[2013-07-09 17:30:34] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 17:30:34] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-09 17:30:34] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130709T163034Z Last: 1373387434886 Life: 21545 ID: 1373387433-17586-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:30:34] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:30:34] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:30:34] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163033Z, fail: 
[2013-07-09 17:30:34] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163034Z Last: 1373387434886 Life: 21545 ID: 1373387433-17586-2 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:30:34] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:30:34] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-09 17:30:34] [DEBUG] LDAPProvider:45 - Trying to obtain data for user jcb98
[2013-07-09 17:30:34] [DEBUG] LDAPProvider:47 - Trying to obtain displayName for user jcb98
[2013-07-09 17:30:34] [DEBUG] LDAPProvider:49 - Trying to obtain email address for user jcb98
[2013-07-09 17:30:34] [DEBUG] LDAPProvider:51 - Trying to obtain Institutions for user jcb98
[2013-07-09 17:30:34] [DEBUG] LDAPProvider:72 - toArray() called with attribute: ou: Homerton College - Undergraduates
[2013-07-09 17:30:34] [DEBUG] LDAPProvider:86 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:30:34] [DEBUG] LDAPProvider:53 - Trying to obtain roles for user jcb98
[2013-07-09 17:30:34] [DEBUG] LDAPProvider:72 - toArray() called with attribute: null
[2013-07-09 17:30:34] [DEBUG] LDAPProvider:74 - Attribute is null. Returning String[0].
[2013-07-09 17:30:34] [DEBUG] LDAPProvider:55 - Trying to obtain data for user jcb98
[2013-07-09 17:30:34] [DEBUG] LDAPProvider:67 - Returning user info for jcb98
[2013-07-09 17:37:27] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-09 17:37:27] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-09 17:37:27] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-09 17:37:27] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-09 17:37:27] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-09 17:37:27] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@7e266b44
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@7e266b44
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7e266b44
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4b90725e
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@225bcd91
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@10ba5a81
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@54eeabe8
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@54eeabe8
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@54eeabe8
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@7cd47880
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@7cd47880
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7cd47880
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@62e59e40
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@62e59e40
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@62e59e40
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@57044c5
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@57044c5
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57044c5
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@4c68059
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@4c68059
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4c68059
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@a211b37
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@a211b37
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@a211b37
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@6f3d5f21
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@6f3d5f21
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f3d5f21
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1a15cd9a
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1a15cd9a
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@f6a8823
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@f6a8823
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@216feee5
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@216feee5
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4b5a4a77
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1d91eb90
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@153d4c49
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@153d4c49
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@15364ee5
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15364ee5
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@111bda67
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@111bda67
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4c18fa85
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4c18fa85
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4c18fa85
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6fc41e49
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@5c392fe8
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5c392fe8
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5c392fe8
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5ec22978
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@32d35f5f
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@32d35f5f
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@c9021e3
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@c9021e3
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5fb45ddc
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5fb45ddc
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@2f87fafc
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f87fafc
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6a46f764
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6a46f764
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3c6e4ba6
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@55a517bd
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@1db5d2b2
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1db5d2b2
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@1db5d2b2
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4c6030f9
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4c6030f9
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4c6030f9
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@7a258c74
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@7696e4c
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7696e4c
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@7696e4c
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7c6743e2
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7c6743e2
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7c6743e2
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@79b2591c
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@b04bce3
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@15f7dbd8
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15f7dbd8
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1f98a654
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@7794566d
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7794566d
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@2d6acad2
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2d6acad2
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2501e081
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@455bfaf
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@72d8978c
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@4df2a9da
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4df2a9da
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@26a150e
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@28c4b5f
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@48a84b47
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@20e64795
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6e659812
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4fe2fe5d
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3fa9b4a4
[2013-07-09 17:37:27] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1e929ba3
[2013-07-09 17:37:27] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-09 17:37:27] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-09 17:37:27] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-09 17:37:27] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-09 17:37:27] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-09 17:37:27] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-09 17:37:27] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-09 17:37:27] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-09 17:37:27] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-09 17:37:27] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-09 17:37:27] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-09 17:37:27] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-09 17:37:27] [DEBUG] Configuration:1947 - connection.password=
[2013-07-09 17:37:27] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-09 17:37:27] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-09 17:37:27] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-09 17:37:27] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-09 17:37:27] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-09 17:37:27] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-09 17:37:27] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-09 17:37:27] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-09 17:37:27] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-09 17:37:27] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-09 17:37:27] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-09 17:37:27] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-09 17:37:27] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-09 17:37:27] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-09 17:37:27] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-09 17:37:27] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-09 17:37:27] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-09 17:37:27] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-09 17:37:27] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-09 17:37:27] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-09 17:37:27] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-09 17:37:27] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-09 17:37:27] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-09 17:37:27] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-09 17:37:27] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:37:27] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:37:27] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-09 17:37:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:37:27] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:37:27] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-09 17:37:27] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-09 17:37:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:37:27] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:37:27] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:37:27] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:37:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:37:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-09 17:37:27] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-09 17:37:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-09 17:37:27] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-09 17:37:27] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-09 17:37:27] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-09 17:37:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:37:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-09 17:37:27] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-09 17:37:27] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-09 17:37:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:37:27] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:37:27] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-09 17:37:27] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-09 17:37:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:37:27] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:37:27] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:37:27] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:37:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-09 17:37:27] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-09 17:37:27] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-09 17:37:27] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-09 17:37:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 17:37:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-09 17:37:27] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-09 17:37:27] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-09 17:37:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 17:37:27] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 17:37:27] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-09 17:37:27] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-09 17:37:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 17:37:27] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 17:37:27] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 17:37:27] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 17:37:27] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-09 17:37:27] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-09 17:37:27] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-09 17:37:27] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-09 17:37:27] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:37:27] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-09 17:37:27] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:37:27] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-09 17:37:27] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 17:37:27] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-09 17:37:27] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:37:27] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:37:27] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:37:27] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:37:27] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:37:27] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:37:27] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:37:27] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:37:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:37:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:37:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-09 17:37:27] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-09 17:37:27] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-09 17:37:27] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-09 17:37:27] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-09 17:37:27] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-09 17:37:27] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:37:27] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-09 17:37:27] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-09 17:37:27] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-09 17:37:27] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-09 17:37:27] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-09 17:37:27] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-09 17:37:27] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-09 17:37:27] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-09 17:37:27] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-09 17:37:27] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-09 17:37:27] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-09 17:37:27] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-09 17:37:27] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-09 17:37:27] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-09 17:37:27] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-09 17:37:27] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-09 17:37:27] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-09 17:37:27] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:37:27] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:37:27] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:37:27] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:37:27] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:37:27] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:37:27] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:37:27] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 17:37:27] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@31ec0130
[2013-07-09 17:37:27] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: a5110a24-3ffa-409a-b6dd-f7b159e028f3 (<unnamed>)
[2013-07-09 17:37:27] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-09 17:37:27] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-09 17:37:27] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:37:27] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:37:27] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:37:27] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:37:27] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:37:27] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:37:27] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:37:27] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:37:27] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:37:27] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:37:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:37:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:37:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:37:27] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 17:37:27] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 17:37:27] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 17:37:27] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 17:37:27] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 17:37:27] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 17:37:27] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 17:37:27] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 17:37:27] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 17:37:27] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 17:37:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:37:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 17:37:27] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:37:27] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 17:37:27] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-09 17:37:27] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-09 17:37:27] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-09 17:37:27] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-09 17:37:27] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-09 17:37:27] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-09 17:37:27] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-09 17:37:27] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-09 17:37:27] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-09 17:37:27] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-09 17:37:27] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-09 17:37:27] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-09 17:37:27] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-09 17:37:27] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-09 17:37:27] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-09 17:37:27] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-09 17:37:27] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-09 17:37:27] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-09 17:37:27] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-09 17:37:27] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-09 17:37:27] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-09 17:37:27] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-09 17:37:27] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-09 17:37:27] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-09 17:37:28] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-09 17:37:29] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:37:29] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:37:29] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-09 17:37:29] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 17:37:29] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/jcb98
[2013-07-09 17:37:30] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:37:30] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130709T163730Z!1373387849-17573-11!http://localhost:8080/ldap/jcb98!jcb98!!pwd!21129!!2!AKQzosjvTMqr5UQrfuKaXobcQLPYQBRm45g.g08p6lIoSey6TWuabcON5-bXT15vK7JJw5gRVYPGzCZ3.dE4MN1OLtgVrOwbB-5fU8TcY-roKGNjQzq6tUVxHMlAo1MXAdYaulIEbHYDKxJN7DpXMifNqUR1hebgo.zQnpn6fiI_
[2013-07-09 17:37:30] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:37:30] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 17:37:30] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-09 17:37:30] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:37:30] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:37:30] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:37:30] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:37:30] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:37:30] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:37:30] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-09 17:37:30] [DEBUG] LDAPProvider:46 - Trying to obtain data for user jcb98
[2013-07-09 17:37:30] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user jcb98
[2013-07-09 17:37:30] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user jcb98
[2013-07-09 17:37:30] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user jcb98
[2013-07-09 17:37:30] [DEBUG] LDAPProvider:73 - toList() called with attribute: ou: Homerton College - Undergraduates
[2013-07-09 17:37:30] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:37:30] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user jcb98
[2013-07-09 17:37:30] [DEBUG] LDAPProvider:73 - toList() called with attribute: null
[2013-07-09 17:37:30] [DEBUG] LDAPProvider:75 - Attribute is null. Returning String[0].
[2013-07-09 17:37:30] [DEBUG] LDAPProvider:56 - Trying to obtain data for user jcb98
[2013-07-09 17:37:30] [DEBUG] LDAPProvider:68 - Returning user info for jcb98
[2013-07-09 17:46:38] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:46:38] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:46:38] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:46:38] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:46:38] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:46:38] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-09 17:46:38] [DEBUG] LDAPProvider:46 - Trying to obtain data for user jcb98
[2013-07-09 17:46:38] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user jcb98
[2013-07-09 17:46:38] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user jcb98
[2013-07-09 17:46:38] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user jcb98
[2013-07-09 17:46:38] [DEBUG] LDAPProvider:73 - toList() called with attribute: ou: Homerton College - Undergraduates
[2013-07-09 17:46:38] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:46:38] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user jcb98
[2013-07-09 17:46:38] [DEBUG] LDAPProvider:73 - toList() called with attribute: null
[2013-07-09 17:46:38] [DEBUG] LDAPProvider:75 - Attribute is null. Returning String[0].
[2013-07-09 17:46:38] [DEBUG] LDAPProvider:56 - Trying to obtain data for user jcb98
[2013-07-09 17:46:38] [DEBUG] LDAPProvider:68 - Returning user info for jcb98
[2013-07-09 17:46:38] [DEBUG] RavenFilter:389 - RavenFilter running for: /style.css
[2013-07-09 17:46:38] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:46:38] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:46:38] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:46:38] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:46:38] [DEBUG] SynchronousDispatcher:60 - PathInfo: /style.css
[2013-07-09 17:46:42] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:46:42] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:46:42] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:46:42] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:46:42] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:46:42] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-09 17:46:42] [DEBUG] LDAPProvider:46 - Trying to obtain data for user jcb98
[2013-07-09 17:46:42] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user jcb98
[2013-07-09 17:46:42] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user jcb98
[2013-07-09 17:46:42] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user jcb98
[2013-07-09 17:46:42] [DEBUG] LDAPProvider:73 - toList() called with attribute: ou: Homerton College - Undergraduates
[2013-07-09 17:46:42] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:46:42] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user jcb98
[2013-07-09 17:46:42] [DEBUG] LDAPProvider:73 - toList() called with attribute: null
[2013-07-09 17:46:42] [DEBUG] LDAPProvider:75 - Attribute is null. Returning String[0].
[2013-07-09 17:46:42] [DEBUG] LDAPProvider:56 - Trying to obtain data for user jcb98
[2013-07-09 17:46:42] [DEBUG] LDAPProvider:68 - Returning user info for jcb98
[2013-07-09 17:46:43] [DEBUG] RavenFilter:389 - RavenFilter running for: /style.css
[2013-07-09 17:46:43] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:46:43] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:46:43] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:46:43] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:46:43] [DEBUG] SynchronousDispatcher:60 - PathInfo: /style.css
[2013-07-09 17:46:59] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:46:59] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:46:59] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:46:59] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:46:59] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:46:59] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-09 17:46:59] [DEBUG] LDAPProvider:46 - Trying to obtain data for user jcb98
[2013-07-09 17:46:59] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user jcb98
[2013-07-09 17:46:59] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user jcb98
[2013-07-09 17:46:59] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user jcb98
[2013-07-09 17:46:59] [DEBUG] LDAPProvider:73 - toList() called with attribute: ou: Homerton College - Undergraduates
[2013-07-09 17:46:59] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:46:59] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user jcb98
[2013-07-09 17:46:59] [DEBUG] LDAPProvider:73 - toList() called with attribute: null
[2013-07-09 17:46:59] [DEBUG] LDAPProvider:75 - Attribute is null. Returning String[0].
[2013-07-09 17:46:59] [DEBUG] LDAPProvider:56 - Trying to obtain data for user jcb98
[2013-07-09 17:46:59] [DEBUG] LDAPProvider:68 - Returning user info for jcb98
[2013-07-09 17:46:59] [DEBUG] RavenFilter:389 - RavenFilter running for: /style.css
[2013-07-09 17:46:59] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:46:59] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:46:59] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:46:59] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:46:59] [DEBUG] SynchronousDispatcher:60 - PathInfo: /style.css
[2013-07-09 17:47:00] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:47:00] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:47:00] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:47:00] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:47:00] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:47:00] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-09 17:47:00] [DEBUG] LDAPProvider:46 - Trying to obtain data for user jcb98
[2013-07-09 17:47:00] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user jcb98
[2013-07-09 17:47:00] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user jcb98
[2013-07-09 17:47:00] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user jcb98
[2013-07-09 17:47:00] [DEBUG] LDAPProvider:73 - toList() called with attribute: ou: Homerton College - Undergraduates
[2013-07-09 17:47:00] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:47:00] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user jcb98
[2013-07-09 17:47:00] [DEBUG] LDAPProvider:73 - toList() called with attribute: null
[2013-07-09 17:47:00] [DEBUG] LDAPProvider:75 - Attribute is null. Returning String[0].
[2013-07-09 17:47:00] [DEBUG] LDAPProvider:56 - Trying to obtain data for user jcb98
[2013-07-09 17:47:00] [DEBUG] LDAPProvider:68 - Returning user info for jcb98
[2013-07-09 17:47:00] [DEBUG] RavenFilter:389 - RavenFilter running for: /style.css
[2013-07-09 17:47:00] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:47:00] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:47:00] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:47:00] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:47:00] [DEBUG] SynchronousDispatcher:60 - PathInfo: /style.css
[2013-07-09 17:47:01] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:47:01] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:47:01] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:47:01] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:47:01] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:47:01] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:46 - Trying to obtain data for user jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:73 - toList() called with attribute: ou: Homerton College - Undergraduates
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:73 - toList() called with attribute: null
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:75 - Attribute is null. Returning String[0].
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:56 - Trying to obtain data for user jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:68 - Returning user info for jcb98
[2013-07-09 17:47:01] [DEBUG] RavenFilter:389 - RavenFilter running for: /style.css
[2013-07-09 17:47:01] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:47:01] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:47:01] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:47:01] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:47:01] [DEBUG] SynchronousDispatcher:60 - PathInfo: /style.css
[2013-07-09 17:47:01] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:47:01] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:47:01] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:47:01] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:47:01] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:47:01] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:46 - Trying to obtain data for user jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:73 - toList() called with attribute: ou: Homerton College - Undergraduates
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:73 - toList() called with attribute: null
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:75 - Attribute is null. Returning String[0].
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:56 - Trying to obtain data for user jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:68 - Returning user info for jcb98
[2013-07-09 17:47:01] [DEBUG] RavenFilter:389 - RavenFilter running for: /style.css
[2013-07-09 17:47:01] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:47:01] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:47:01] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:47:01] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:47:01] [DEBUG] SynchronousDispatcher:60 - PathInfo: /style.css
[2013-07-09 17:47:01] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:47:01] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:47:01] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:47:01] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:47:01] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:47:01] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:46 - Trying to obtain data for user jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:73 - toList() called with attribute: ou: Homerton College - Undergraduates
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:73 - toList() called with attribute: null
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:75 - Attribute is null. Returning String[0].
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:56 - Trying to obtain data for user jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:68 - Returning user info for jcb98
[2013-07-09 17:47:01] [DEBUG] RavenFilter:389 - RavenFilter running for: /style.css
[2013-07-09 17:47:01] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:47:01] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:47:01] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:47:01] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:47:01] [DEBUG] SynchronousDispatcher:60 - PathInfo: /style.css
[2013-07-09 17:47:01] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:47:01] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:47:01] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:47:01] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:47:01] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:47:01] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:46 - Trying to obtain data for user jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:73 - toList() called with attribute: ou: Homerton College - Undergraduates
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:73 - toList() called with attribute: null
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:75 - Attribute is null. Returning String[0].
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:56 - Trying to obtain data for user jcb98
[2013-07-09 17:47:01] [DEBUG] LDAPProvider:68 - Returning user info for jcb98
[2013-07-09 17:47:01] [DEBUG] RavenFilter:389 - RavenFilter running for: /style.css
[2013-07-09 17:47:01] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:47:01] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:47:01] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:47:01] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:47:01] [DEBUG] SynchronousDispatcher:60 - PathInfo: /style.css
[2013-07-09 17:47:22] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/jcb98
[2013-07-09 17:47:22] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:47:22] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:47:22] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:47:22] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:47:22] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/jcb98
[2013-07-09 17:47:22] [DEBUG] LDAPProvider:46 - Trying to obtain data for user jcb98
[2013-07-09 17:47:22] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user jcb98
[2013-07-09 17:47:22] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user jcb98
[2013-07-09 17:47:22] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user jcb98
[2013-07-09 17:47:22] [DEBUG] LDAPProvider:73 - toList() called with attribute: ou: Homerton College - Undergraduates
[2013-07-09 17:47:22] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:47:22] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user jcb98
[2013-07-09 17:47:22] [DEBUG] LDAPProvider:73 - toList() called with attribute: null
[2013-07-09 17:47:22] [DEBUG] LDAPProvider:75 - Attribute is null. Returning String[0].
[2013-07-09 17:47:22] [DEBUG] LDAPProvider:56 - Trying to obtain data for user jcb98
[2013-07-09 17:47:22] [DEBUG] LDAPProvider:68 - Returning user info for jcb98
[2013-07-09 17:47:22] [DEBUG] RavenFilter:389 - RavenFilter running for: /style.css
[2013-07-09 17:47:22] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:47:22] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:47:22] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:47:22] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:47:22] [DEBUG] SynchronousDispatcher:60 - PathInfo: /style.css
[2013-07-09 17:47:33] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/acr31
[2013-07-09 17:47:33] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:47:33] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:47:33] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:47:33] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:47:33] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/acr31
[2013-07-09 17:47:33] [DEBUG] LDAPProvider:46 - Trying to obtain data for user acr31
[2013-07-09 17:47:33] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user acr31
[2013-07-09 17:47:33] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user acr31
[2013-07-09 17:47:33] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user acr31
[2013-07-09 17:47:33] [DEBUG] LDAPProvider:73 - toList() called with attribute: ou: Queens' College, Computer Laboratory
[2013-07-09 17:47:33] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:47:33] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user acr31
[2013-07-09 17:47:33] [DEBUG] LDAPProvider:73 - toList() called with attribute: title: Official Fellow, University Lecturer
[2013-07-09 17:47:33] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:47:33] [DEBUG] LDAPProvider:56 - Trying to obtain data for user acr31
[2013-07-09 17:47:33] [DEBUG] LDAPProvider:68 - Returning user info for acr31
[2013-07-09 17:47:44] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/acr31
[2013-07-09 17:47:44] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:47:44] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:47:44] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:47:44] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:47:44] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/acr31
[2013-07-09 17:47:44] [DEBUG] LDAPProvider:46 - Trying to obtain data for user acr31
[2013-07-09 17:47:44] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user acr31
[2013-07-09 17:47:44] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user acr31
[2013-07-09 17:47:44] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user acr31
[2013-07-09 17:47:44] [DEBUG] LDAPProvider:73 - toList() called with attribute: ou: Queens' College, Computer Laboratory
[2013-07-09 17:47:44] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:47:44] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user acr31
[2013-07-09 17:47:44] [DEBUG] LDAPProvider:73 - toList() called with attribute: title: Official Fellow, University Lecturer
[2013-07-09 17:47:44] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:47:44] [DEBUG] LDAPProvider:56 - Trying to obtain data for user acr31
[2013-07-09 17:47:44] [DEBUG] LDAPProvider:68 - Returning user info for acr31
[2013-07-09 17:47:44] [DEBUG] RavenFilter:389 - RavenFilter running for: /style.css
[2013-07-09 17:47:44] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:47:44] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:47:44] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:47:44] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:47:44] [DEBUG] SynchronousDispatcher:60 - PathInfo: /style.css
[2013-07-09 17:48:02] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/acr31
[2013-07-09 17:48:02] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:48:02] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:48:02] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:48:02] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:48:02] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/acr31
[2013-07-09 17:48:02] [DEBUG] LDAPProvider:46 - Trying to obtain data for user acr31
[2013-07-09 17:48:02] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user acr31
[2013-07-09 17:48:02] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user acr31
[2013-07-09 17:48:02] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user acr31
[2013-07-09 17:48:02] [DEBUG] LDAPProvider:73 - toList() called with attribute: ou: Queens' College, Computer Laboratory
[2013-07-09 17:48:02] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:48:02] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user acr31
[2013-07-09 17:48:02] [DEBUG] LDAPProvider:73 - toList() called with attribute: title: Official Fellow, University Lecturer
[2013-07-09 17:48:02] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:48:02] [DEBUG] LDAPProvider:56 - Trying to obtain data for user acr31
[2013-07-09 17:48:02] [DEBUG] LDAPProvider:68 - Returning user info for acr31
[2013-07-09 17:48:03] [DEBUG] RavenFilter:389 - RavenFilter running for: /style.css
[2013-07-09 17:48:03] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:48:03] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:48:03] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:48:03] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:48:03] [DEBUG] SynchronousDispatcher:60 - PathInfo: /style.css
[2013-07-09 17:48:03] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/acr31
[2013-07-09 17:48:03] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:48:03] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:48:03] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:48:03] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:48:03] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/acr31
[2013-07-09 17:48:03] [DEBUG] LDAPProvider:46 - Trying to obtain data for user acr31
[2013-07-09 17:48:03] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user acr31
[2013-07-09 17:48:03] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user acr31
[2013-07-09 17:48:03] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user acr31
[2013-07-09 17:48:03] [DEBUG] LDAPProvider:73 - toList() called with attribute: ou: Queens' College, Computer Laboratory
[2013-07-09 17:48:03] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:48:03] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user acr31
[2013-07-09 17:48:03] [DEBUG] LDAPProvider:73 - toList() called with attribute: title: Official Fellow, University Lecturer
[2013-07-09 17:48:03] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:48:03] [DEBUG] LDAPProvider:56 - Trying to obtain data for user acr31
[2013-07-09 17:48:03] [DEBUG] LDAPProvider:68 - Returning user info for acr31
[2013-07-09 17:48:03] [DEBUG] RavenFilter:389 - RavenFilter running for: /style.css
[2013-07-09 17:48:03] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:48:03] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:48:03] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:48:03] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:48:03] [DEBUG] SynchronousDispatcher:60 - PathInfo: /style.css
[2013-07-09 17:48:04] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/acr31
[2013-07-09 17:48:04] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:48:04] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:48:04] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:48:04] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:48:04] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/acr31
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:46 - Trying to obtain data for user acr31
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user acr31
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user acr31
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user acr31
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:73 - toList() called with attribute: ou: Queens' College, Computer Laboratory
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user acr31
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:73 - toList() called with attribute: title: Official Fellow, University Lecturer
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:56 - Trying to obtain data for user acr31
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:68 - Returning user info for acr31
[2013-07-09 17:48:04] [DEBUG] RavenFilter:389 - RavenFilter running for: /style.css
[2013-07-09 17:48:04] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:48:04] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:48:04] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:48:04] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:48:04] [DEBUG] SynchronousDispatcher:60 - PathInfo: /style.css
[2013-07-09 17:48:04] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/acr31
[2013-07-09 17:48:04] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:48:04] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:48:04] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:48:04] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:48:04] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/acr31
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:46 - Trying to obtain data for user acr31
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user acr31
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user acr31
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user acr31
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:73 - toList() called with attribute: ou: Queens' College, Computer Laboratory
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user acr31
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:73 - toList() called with attribute: title: Official Fellow, University Lecturer
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:56 - Trying to obtain data for user acr31
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:68 - Returning user info for acr31
[2013-07-09 17:48:04] [DEBUG] RavenFilter:389 - RavenFilter running for: /style.css
[2013-07-09 17:48:04] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:48:04] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:48:04] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:48:04] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:48:04] [DEBUG] SynchronousDispatcher:60 - PathInfo: /style.css
[2013-07-09 17:48:04] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/acr31
[2013-07-09 17:48:04] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:48:04] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:48:04] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:48:04] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:48:04] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/acr31
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:46 - Trying to obtain data for user acr31
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user acr31
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user acr31
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user acr31
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:73 - toList() called with attribute: ou: Queens' College, Computer Laboratory
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user acr31
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:73 - toList() called with attribute: title: Official Fellow, University Lecturer
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:56 - Trying to obtain data for user acr31
[2013-07-09 17:48:04] [DEBUG] LDAPProvider:68 - Returning user info for acr31
[2013-07-09 17:48:04] [DEBUG] RavenFilter:389 - RavenFilter running for: /style.css
[2013-07-09 17:48:04] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:48:04] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:48:04] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:48:04] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:48:04] [DEBUG] SynchronousDispatcher:60 - PathInfo: /style.css
[2013-07-09 17:48:11] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/acr31
[2013-07-09 17:48:11] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:48:11] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:48:11] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:48:11] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:48:11] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/acr31
[2013-07-09 17:48:11] [DEBUG] LDAPProvider:46 - Trying to obtain data for user acr31
[2013-07-09 17:48:11] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user acr31
[2013-07-09 17:48:11] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user acr31
[2013-07-09 17:48:11] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user acr31
[2013-07-09 17:48:11] [DEBUG] LDAPProvider:73 - toList() called with attribute: ou: Queens' College, Computer Laboratory
[2013-07-09 17:48:11] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:48:11] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user acr31
[2013-07-09 17:48:11] [DEBUG] LDAPProvider:73 - toList() called with attribute: title: Official Fellow, University Lecturer
[2013-07-09 17:48:11] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:48:11] [DEBUG] LDAPProvider:56 - Trying to obtain data for user acr31
[2013-07-09 17:48:11] [DEBUG] LDAPProvider:68 - Returning user info for acr31
[2013-07-09 17:48:11] [DEBUG] RavenFilter:389 - RavenFilter running for: /style.css
[2013-07-09 17:48:11] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:48:11] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:48:11] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:48:11] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:48:11] [DEBUG] SynchronousDispatcher:60 - PathInfo: /style.css
[2013-07-09 17:48:35] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/acr31
[2013-07-09 17:48:35] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:48:35] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:48:35] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:48:35] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:48:35] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/acr31
[2013-07-09 17:48:35] [DEBUG] LDAPProvider:46 - Trying to obtain data for user acr31
[2013-07-09 17:48:35] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user acr31
[2013-07-09 17:48:35] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user acr31
[2013-07-09 17:48:35] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user acr31
[2013-07-09 17:48:35] [DEBUG] LDAPProvider:73 - toList() called with attribute: ou: Queens' College, Computer Laboratory
[2013-07-09 17:48:35] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:48:35] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user acr31
[2013-07-09 17:48:35] [DEBUG] LDAPProvider:73 - toList() called with attribute: title: Official Fellow, University Lecturer
[2013-07-09 17:48:35] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:48:35] [DEBUG] LDAPProvider:56 - Trying to obtain data for user acr31
[2013-07-09 17:48:35] [DEBUG] LDAPProvider:68 - Returning user info for acr31
[2013-07-09 17:48:35] [DEBUG] RavenFilter:389 - RavenFilter running for: /style.css
[2013-07-09 17:48:35] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:48:35] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:48:35] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:48:35] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:48:35] [DEBUG] SynchronousDispatcher:60 - PathInfo: /style.css
[2013-07-09 17:48:35] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/acr31
[2013-07-09 17:48:35] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:48:35] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:48:35] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:48:35] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:48:35] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/acr31
[2013-07-09 17:48:35] [DEBUG] LDAPProvider:46 - Trying to obtain data for user acr31
[2013-07-09 17:48:35] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user acr31
[2013-07-09 17:48:35] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user acr31
[2013-07-09 17:48:35] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user acr31
[2013-07-09 17:48:35] [DEBUG] LDAPProvider:73 - toList() called with attribute: ou: Queens' College, Computer Laboratory
[2013-07-09 17:48:35] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:48:35] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user acr31
[2013-07-09 17:48:35] [DEBUG] LDAPProvider:73 - toList() called with attribute: title: Official Fellow, University Lecturer
[2013-07-09 17:48:35] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:48:35] [DEBUG] LDAPProvider:56 - Trying to obtain data for user acr31
[2013-07-09 17:48:35] [DEBUG] LDAPProvider:68 - Returning user info for acr31
[2013-07-09 17:48:35] [DEBUG] RavenFilter:389 - RavenFilter running for: /style.css
[2013-07-09 17:48:35] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:48:35] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:48:35] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:48:35] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:48:35] [DEBUG] SynchronousDispatcher:60 - PathInfo: /style.css
[2013-07-09 17:48:36] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/acr31
[2013-07-09 17:48:36] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:48:36] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:48:36] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:48:36] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:48:36] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/acr31
[2013-07-09 17:48:36] [DEBUG] LDAPProvider:46 - Trying to obtain data for user acr31
[2013-07-09 17:48:36] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user acr31
[2013-07-09 17:48:36] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user acr31
[2013-07-09 17:48:36] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user acr31
[2013-07-09 17:48:36] [DEBUG] LDAPProvider:73 - toList() called with attribute: ou: Queens' College, Computer Laboratory
[2013-07-09 17:48:36] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:48:36] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user acr31
[2013-07-09 17:48:36] [DEBUG] LDAPProvider:73 - toList() called with attribute: title: Official Fellow, University Lecturer
[2013-07-09 17:48:36] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:48:36] [DEBUG] LDAPProvider:56 - Trying to obtain data for user acr31
[2013-07-09 17:48:36] [DEBUG] LDAPProvider:68 - Returning user info for acr31
[2013-07-09 17:48:36] [DEBUG] RavenFilter:389 - RavenFilter running for: /style.css
[2013-07-09 17:48:36] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:48:36] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:48:36] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:48:36] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:48:36] [DEBUG] SynchronousDispatcher:60 - PathInfo: /style.css
[2013-07-09 17:48:36] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/acr31
[2013-07-09 17:48:36] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:48:36] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:48:36] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:48:36] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:48:36] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/acr31
[2013-07-09 17:48:36] [DEBUG] LDAPProvider:46 - Trying to obtain data for user acr31
[2013-07-09 17:48:36] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user acr31
[2013-07-09 17:48:36] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user acr31
[2013-07-09 17:48:36] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user acr31
[2013-07-09 17:48:36] [DEBUG] LDAPProvider:73 - toList() called with attribute: ou: Queens' College, Computer Laboratory
[2013-07-09 17:48:36] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:48:36] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user acr31
[2013-07-09 17:48:36] [DEBUG] LDAPProvider:73 - toList() called with attribute: title: Official Fellow, University Lecturer
[2013-07-09 17:48:36] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:48:36] [DEBUG] LDAPProvider:56 - Trying to obtain data for user acr31
[2013-07-09 17:48:36] [DEBUG] LDAPProvider:68 - Returning user info for acr31
[2013-07-09 17:48:36] [DEBUG] RavenFilter:389 - RavenFilter running for: /style.css
[2013-07-09 17:48:36] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:48:36] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:48:36] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:48:36] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:48:36] [DEBUG] SynchronousDispatcher:60 - PathInfo: /style.css
[2013-07-09 17:48:53] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/acr31
[2013-07-09 17:48:53] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:48:53] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:48:53] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:48:53] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:48:53] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/acr31
[2013-07-09 17:48:53] [DEBUG] LDAPProvider:46 - Trying to obtain data for user acr31
[2013-07-09 17:48:53] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user acr31
[2013-07-09 17:48:53] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user acr31
[2013-07-09 17:48:53] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user acr31
[2013-07-09 17:48:53] [DEBUG] LDAPProvider:73 - toList() called with attribute: ou: Queens' College, Computer Laboratory
[2013-07-09 17:48:53] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:48:53] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user acr31
[2013-07-09 17:48:53] [DEBUG] LDAPProvider:73 - toList() called with attribute: title: Official Fellow, University Lecturer
[2013-07-09 17:48:53] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:48:53] [DEBUG] LDAPProvider:56 - Trying to obtain data for user acr31
[2013-07-09 17:48:53] [DEBUG] LDAPProvider:68 - Returning user info for acr31
[2013-07-09 17:48:53] [DEBUG] RavenFilter:389 - RavenFilter running for: /style.css
[2013-07-09 17:48:53] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:48:53] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:48:53] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:48:53] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:48:53] [DEBUG] SynchronousDispatcher:60 - PathInfo: /style.css
[2013-07-09 17:54:02] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/acr31
[2013-07-09 17:54:02] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:54:02] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:54:02] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:54:02] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:54:02] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/acr31
[2013-07-09 17:54:02] [DEBUG] LDAPProvider:46 - Trying to obtain data for user acr31
[2013-07-09 17:54:02] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user acr31
[2013-07-09 17:54:02] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user acr31
[2013-07-09 17:54:02] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user acr31
[2013-07-09 17:54:02] [DEBUG] LDAPProvider:73 - toList() called with attribute: ou: Queens' College, Computer Laboratory
[2013-07-09 17:54:02] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:54:02] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user acr31
[2013-07-09 17:54:02] [DEBUG] LDAPProvider:73 - toList() called with attribute: title: Official Fellow, University Lecturer
[2013-07-09 17:54:02] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:54:02] [DEBUG] LDAPProvider:56 - Trying to obtain data for user acr31
[2013-07-09 17:54:02] [DEBUG] LDAPProvider:68 - Returning user info for acr31
[2013-07-09 17:54:03] [DEBUG] RavenFilter:389 - RavenFilter running for: /style.css
[2013-07-09 17:54:03] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:54:03] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:54:03] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:54:03] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:54:03] [DEBUG] SynchronousDispatcher:60 - PathInfo: /style.css
[2013-07-09 17:57:27] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/acr31
[2013-07-09 17:57:27] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:57:27] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:57:27] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:57:27] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:57:27] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/acr31
[2013-07-09 17:57:27] [DEBUG] LDAPProvider:46 - Trying to obtain data for user acr31
[2013-07-09 17:57:27] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user acr31
[2013-07-09 17:57:27] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user acr31
[2013-07-09 17:57:27] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user acr31
[2013-07-09 17:57:27] [DEBUG] LDAPProvider:73 - toList() called with attribute: ou: Queens' College, Computer Laboratory
[2013-07-09 17:57:27] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:57:27] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user acr31
[2013-07-09 17:57:27] [DEBUG] LDAPProvider:73 - toList() called with attribute: title: Official Fellow, University Lecturer
[2013-07-09 17:57:27] [DEBUG] LDAPProvider:85 - Sucessfully converted listResults to String[] stringResults
[2013-07-09 17:57:27] [DEBUG] LDAPProvider:56 - Trying to obtain data for user acr31
[2013-07-09 17:57:27] [DEBUG] LDAPProvider:68 - Returning user info for acr31
[2013-07-09 17:57:27] [DEBUG] RavenFilter:389 - RavenFilter running for: /style.css
[2013-07-09 17:57:27] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 17:57:27] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/jcb98, desc: , aauth: , iact: , msg: , params: , date: 20130709T163729Z, fail: 
[2013-07-09 17:57:27] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T163730Z Last: 1373387850642 Life: 21129 ID: 1373387849-17573-11 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 17:57:27] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 17:57:27] [DEBUG] SynchronousDispatcher:60 - PathInfo: /style.css
[2013-07-09 18:00:26] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-09 18:00:26] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-09 18:00:26] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-09 18:00:26] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-09 18:00:26] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-09 18:00:26] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@732efcfe
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@732efcfe
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@732efcfe
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2569a1c5
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4c18e99
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@190c0fa7
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@3f9f76a5
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@3f9f76a5
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3f9f76a5
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@71e852be
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@71e852be
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@71e852be
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@3a8bd3bb
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@3a8bd3bb
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3a8bd3bb
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@39b1ff47
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@39b1ff47
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@39b1ff47
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@61335b86
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@61335b86
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@61335b86
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@62f04dae
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@62f04dae
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@62f04dae
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@477baf4
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@477baf4
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@477baf4
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@57044c5
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@57044c5
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@174da86b
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@174da86b
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@4145582
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4145582
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1b2ede8
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3aa42c31
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@2630a895
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2630a895
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@d6d46d7
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@d6d46d7
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@216feee5
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@216feee5
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1e4276fd
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1e4276fd
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1e4276fd
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6b5b5783
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@5efcc13d
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5efcc13d
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5efcc13d
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@15364ee5
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@4dc4e792
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4dc4e792
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@3b9fa8f7
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b9fa8f7
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@657a7adf
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@657a7adf
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@11767553
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@11767553
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c392fe8
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c392fe8
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5ec22978
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@32d35f5f
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@c9021e3
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@c9021e3
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@c9021e3
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5fb45ddc
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5fb45ddc
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5fb45ddc
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@2f87fafc
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@34f34071
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@34f34071
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@34f34071
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6a46f764
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6a46f764
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6a46f764
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@6d289e48
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@49b9a538
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@5f99ea3c
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5f99ea3c
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@79b2591c
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@db2b10a
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@db2b10a
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@49c88f2b
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@49c88f2b
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4de514a9
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1adbbe8b
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@51f2412a
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@4a393167
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4a393167
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1ae637f0
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@627b5c
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4190d536
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@b9deddb
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2d6acad2
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3e29b849
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2501e081
[2013-07-09 18:00:26] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1e3a4822
[2013-07-09 18:00:26] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-09 18:00:26] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-09 18:00:26] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-09 18:00:26] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-09 18:00:26] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-09 18:00:26] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-09 18:00:26] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-09 18:00:26] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-09 18:00:26] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-09 18:00:26] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-09 18:00:26] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-09 18:00:26] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-09 18:00:26] [DEBUG] Configuration:1947 - connection.password=
[2013-07-09 18:00:26] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-09 18:00:26] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-09 18:00:26] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-09 18:00:26] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-09 18:00:26] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-09 18:00:26] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-09 18:00:26] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-09 18:00:26] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-09 18:00:26] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-09 18:00:26] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-09 18:00:26] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-09 18:00:26] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-09 18:00:26] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-09 18:00:26] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-09 18:00:26] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-09 18:00:26] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-09 18:00:26] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-09 18:00:26] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-09 18:00:26] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-09 18:00:26] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-09 18:00:26] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-09 18:00:26] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-09 18:00:26] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-09 18:00:26] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-09 18:00:26] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 18:00:26] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 18:00:26] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-09 18:00:26] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 18:00:26] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 18:00:26] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-09 18:00:26] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-09 18:00:26] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 18:00:26] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 18:00:26] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 18:00:26] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 18:00:26] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 18:00:26] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-09 18:00:26] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-09 18:00:26] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-09 18:00:26] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-09 18:00:26] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-09 18:00:26] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-09 18:00:26] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 18:00:26] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-09 18:00:26] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-09 18:00:26] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-09 18:00:26] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 18:00:26] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 18:00:26] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-09 18:00:26] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-09 18:00:26] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 18:00:26] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 18:00:26] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 18:00:26] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 18:00:26] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-09 18:00:26] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-09 18:00:26] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-09 18:00:26] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-09 18:00:26] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 18:00:26] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-09 18:00:26] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-09 18:00:26] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-09 18:00:26] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 18:00:26] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 18:00:26] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-09 18:00:26] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-09 18:00:26] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 18:00:26] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 18:00:26] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 18:00:26] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 18:00:26] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-09 18:00:26] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-09 18:00:26] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-09 18:00:26] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-09 18:00:26] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 18:00:26] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-09 18:00:26] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 18:00:26] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-09 18:00:26] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 18:00:26] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-09 18:00:26] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 18:00:26] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 18:00:26] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 18:00:26] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 18:00:26] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 18:00:26] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 18:00:26] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 18:00:26] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 18:00:26] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 18:00:26] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 18:00:26] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-09 18:00:26] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-09 18:00:26] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-09 18:00:26] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-09 18:00:26] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-09 18:00:26] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-09 18:00:26] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 18:00:26] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-09 18:00:26] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-09 18:00:26] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-09 18:00:26] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-09 18:00:26] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-09 18:00:26] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-09 18:00:26] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-09 18:00:26] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-09 18:00:26] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-09 18:00:26] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-09 18:00:26] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-09 18:00:26] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-09 18:00:26] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-09 18:00:26] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-09 18:00:26] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-09 18:00:26] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-09 18:00:26] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-09 18:00:26] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 18:00:26] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 18:00:26] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 18:00:26] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 18:00:26] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 18:00:26] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 18:00:26] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 18:00:26] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 18:00:26] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1e66a917
[2013-07-09 18:00:26] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: db7c4abf-d199-43d0-8387-d001d3f50637 (<unnamed>)
[2013-07-09 18:00:26] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-09 18:00:26] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-09 18:00:26] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 18:00:26] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 18:00:26] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 18:00:26] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 18:00:26] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 18:00:26] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 18:00:26] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 18:00:26] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 18:00:26] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 18:00:26] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 18:00:26] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 18:00:26] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 18:00:26] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 18:00:26] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 18:00:26] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 18:00:26] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 18:00:26] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 18:00:26] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 18:00:26] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 18:00:26] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 18:00:26] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 18:00:26] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 18:00:26] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 18:00:26] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 18:00:26] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 18:00:26] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 18:00:26] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 18:00:26] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-09 18:00:26] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-09 18:00:26] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-09 18:00:26] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-09 18:00:26] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-09 18:00:26] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-09 18:00:26] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-09 18:00:26] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-09 18:00:26] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-09 18:00:26] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-09 18:00:26] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-09 18:00:26] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-09 18:00:26] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-09 18:00:26] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-09 18:00:26] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-09 18:00:26] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-09 18:00:26] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-09 18:00:26] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-09 18:00:26] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-09 18:00:26] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-09 18:00:26] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-09 18:00:26] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-09 18:00:26] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-09 18:00:26] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-09 18:00:27] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-09 18:00:27] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/acr31
[2013-07-09 18:00:27] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 18:00:27] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-09 18:00:27] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 18:00:27] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/acr31
[2013-07-09 18:00:30] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/acr31
[2013-07-09 18:00:30] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130709T170030Z!1373389229-17928-17!http://localhost:8080/ldap/acr31!jcb98!!pwd!19749!!2!uawMuARTKQJoW1V1bTBvqRNsXAMtjFTdRxoJc6hfmDZEVlaYr7MO3ZOVwthr-dzJdmPk6I7PJSREc-d7pSpIgFeJU..oDReu-lbKI6p-vZj0CRaQdXsTmAcmLkmJQXFoCoNk3GJv4IZpla.dkVFHH8t2Ka00BMihf.WEZYSV97s_
[2013-07-09 18:00:30] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/acr31, desc: , aauth: , iact: , msg: , params: , date: 20130709T170027Z, fail: 
[2013-07-09 18:00:30] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 18:00:30] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-09 18:00:30] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130709T170030Z Last: 1373389230909 Life: 19749 ID: 1373389229-17928-17 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 18:00:30] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/acr31
[2013-07-09 18:00:30] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 18:00:30] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/acr31, desc: , aauth: , iact: , msg: , params: , date: 20130709T170027Z, fail: 
[2013-07-09 18:00:30] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T170030Z Last: 1373389230909 Life: 19749 ID: 1373389229-17928-17 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 18:00:30] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 18:00:30] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/acr31
[2013-07-09 18:00:30] [DEBUG] LDAPProvider:46 - Trying to obtain data for user acr31
[2013-07-09 18:00:30] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user acr31
[2013-07-09 18:00:30] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user acr31
[2013-07-09 18:00:30] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user acr31
[2013-07-09 18:00:30] [DEBUG] LDAPProvider:77 - toList() called with attribute: ou: Queens' College, Computer Laboratory
[2013-07-09 18:00:30] [DEBUG] LDAPProvider:89 - Successfully returning list of results (probably)
[2013-07-09 18:00:30] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user acr31
[2013-07-09 18:00:30] [DEBUG] LDAPProvider:77 - toList() called with attribute: title: Official Fellow, University Lecturer
[2013-07-09 18:00:30] [DEBUG] LDAPProvider:89 - Successfully returning list of results (probably)
[2013-07-09 18:00:30] [DEBUG] LDAPProvider:56 - Trying to obtain misAffiliation for user acr31
[2013-07-09 18:00:30] [DEBUG] LDAPProvider:61 - Successfully got misAffiliation
[2013-07-09 18:00:30] [DEBUG] LDAPProvider:66 - Trying to get the image for useracr31
[2013-07-09 18:00:30] [DEBUG] LDAPProvider:72 - Returning user info for acr31
[2013-07-09 18:02:37] [DEBUG] RavenFilter:270 - Certificate will be loaded from: /home/jcb98/github/SettingWork/src/main/webapp/WEB-INF/raven/pubkey2.crt
[2013-07-09 18:02:37] [DEBUG] RavenFilter:280 - Testing mode: null
[2013-07-09 18:02:37] [DEBUG] RavenFilter:285 - Server url prefix: null
[2013-07-09 18:02:37] [DEBUG] RavenFilter:294 - Granting access to all principals
[2013-07-09 18:02:38] [DEBUG] HibernateSessionRequestFilter:34 - Initializing filter...
[2013-07-09 18:02:38] [DEBUG] logging:184 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@6406f3ea
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@6406f3ea
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6406f3ea
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5da0b94d
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4c68059
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@52f9cbe5
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@3aa42c31
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@3aa42c31
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3aa42c31
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@2630a895
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@2630a895
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2630a895
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@5e53bbfa
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@5e53bbfa
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5e53bbfa
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@1e4276fd
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@1e4276fd
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e4276fd
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@6b5b5783
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@6b5b5783
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6b5b5783
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@15364ee5
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@15364ee5
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15364ee5
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@3a3f4a21
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@3a3f4a21
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3a3f4a21
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4c18fa85
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4c18fa85
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7810a519
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7810a519
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@34a083f2
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@34a083f2
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2e7857a5
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@68f51766
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@6cb1cb25
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6cb1cb25
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@388eed76
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@388eed76
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@4e0bd5df
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4e0bd5df
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@6d289e48
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6d289e48
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6d289e48
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1db5d2b2
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@4c6030f9
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4c6030f9
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4c6030f9
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3bd85e85
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@3834a1c8
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3834a1c8
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@51bfa303
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@51bfa303
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@71e13a2c
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@71e13a2c
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@468034b6
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@468034b6
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@74bffc3a
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@74bffc3a
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6fb8fcdd
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7418e252
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@17e319a
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@17e319a
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@17e319a
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@43824d2c
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@43824d2c
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@43824d2c
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@22c393a1
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@6153e0c0
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6153e0c0
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@6153e0c0
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4de514a9
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4de514a9
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4de514a9
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@50baa573
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@7794566d
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@1e3a4822
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1e3a4822
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@199b7c62
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@20e64795
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@20e64795
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@c7f5bf9
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@c7f5bf9
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1286d597
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7bfd25ce
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@52ed3b53
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@2d97d09f
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2d97d09f
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2c18b492
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@9f6f3dc
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3403f5a0
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6ff2f60d
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@37f808e6
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7d1050be
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3a252a17
[2013-07-09 18:02:38] [DEBUG] BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5dee69d3
[2013-07-09 18:02:38] [INFO ] Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[2013-07-09 18:02:38] [INFO ] Version:41 - HHH000412: Hibernate Core {4.2.2.Final}
[2013-07-09 18:02:38] [INFO ] Environment:239 - HHH000206: hibernate.properties not found
[2013-07-09 18:02:38] [INFO ] Environment:342 - HHH000021: Bytecode provider name : javassist
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2013-07-09 18:02:38] [INFO ] Configuration:1985 - HHH000043: Configuring from resource: /hibernate.cfg.xml
[2013-07-09 18:02:38] [INFO ] Configuration:2004 - HHH000040: Configuration resource: /hibernate.cfg.xml
[2013-07-09 18:02:38] [DEBUG] DTDEntityResolver:68 - Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[2013-07-09 18:02:38] [DEBUG] DTDEntityResolver:70 - Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
[2013-07-09 18:02:38] [DEBUG] DTDEntityResolver:107 - Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
[2013-07-09 18:02:38] [DEBUG] Configuration:1947 - connection.driver_class=org.h2.Driver
[2013-07-09 18:02:38] [DEBUG] Configuration:1947 - connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
[2013-07-09 18:02:38] [DEBUG] Configuration:1947 - connection.username=sa
[2013-07-09 18:02:38] [DEBUG] Configuration:1947 - connection.password=
[2013-07-09 18:02:38] [DEBUG] Configuration:1947 - connection.pool_size=1
[2013-07-09 18:02:38] [DEBUG] Configuration:1947 - dialect=org.hibernate.dialect.H2Dialect
[2013-07-09 18:02:38] [DEBUG] Configuration:1947 - cache.provider_class=org.hibernate.cache.internal.NoCacheProvider
[2013-07-09 18:02:38] [DEBUG] Configuration:1947 - show_sql=true
[2013-07-09 18:02:38] [DEBUG] Configuration:1947 - hbm2ddl.auto=create
[2013-07-09 18:02:38] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.Question] for mapping
[2013-07-09 18:02:38] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.QuestionSet] for mapping
[2013-07-09 18:02:38] [DEBUG] Configuration:2186 - Session-factory config [null] named class [org.example.models.User] for mapping
[2013-07-09 18:02:38] [INFO ] Configuration:2126 - HHH000041: Configured SessionFactory: null
[2013-07-09 18:02:38] [DEBUG] Configuration:2127 - Properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hbm2ddl.auto=create, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.show_sql=true, hibernate.connection.pool_size=1}
[2013-07-09 18:02:38] [DEBUG] IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2013-07-09 18:02:38] [DEBUG] Configuration:1753 - Preparing to build session factory with filters : {}
[2013-07-09 18:02:38] [INFO ] DriverManagerConnectionProviderImpl:98 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
[2013-07-09 18:02:38] [INFO ] DriverManagerConnectionProviderImpl:134 - HHH000115: Hibernate connection pool size: 1
[2013-07-09 18:02:38] [INFO ] DriverManagerConnectionProviderImpl:137 - HHH000006: Autocommit mode: false
[2013-07-09 18:02:38] [INFO ] DriverManagerConnectionProviderImpl:151 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
[2013-07-09 18:02:38] [INFO ] DriverManagerConnectionProviderImpl:154 - HHH000046: Connection properties: {user=sa, password=}
[2013-07-09 18:02:38] [DEBUG] DriverManagerConnectionProviderImpl:196 - Opening new JDBC connection
[2013-07-09 18:02:38] [DEBUG] DriverManagerConnectionProviderImpl:219 - Created connection to: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, Isolation Level: 2
[2013-07-09 18:02:38] [DEBUG] JdbcServicesImpl:121 - Database ->
       name : H2
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-09 18:02:38] [DEBUG] JdbcServicesImpl:127 - Driver ->
       name : H2 JDBC Driver
    version : 1.2.145 (2010-11-02)
      major : 1
      minor : 2
[2013-07-09 18:02:38] [DEBUG] JdbcServicesImpl:133 - JDBC version : 3.0
[2013-07-09 18:02:38] [INFO ] Dialect:130 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2013-07-09 18:02:38] [INFO ] LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[2013-07-09 18:02:38] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 18:02:38] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 18:02:38] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.Question
[2013-07-09 18:02:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 18:02:38] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 18:02:38] [DEBUG] EntityBinder:394 - Import with entity name Question
[2013-07-09 18:02:38] [DEBUG] EntityBinder:564 - Bind entity org.example.models.Question on table QUESTIONS
[2013-07-09 18:02:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 18:02:38] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 18:02:38] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 18:02:38] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 18:02:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 18:02:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=author, insertable=true, updatable=true, unique=false}
[2013-07-09 18:02:38] [DEBUG] PropertyBinder:260 - Building property author
[2013-07-09 18:02:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=content, insertable=true, updatable=true, unique=false}
[2013-07-09 18:02:38] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property content with lazy=false
[2013-07-09 18:02:38] [DEBUG] SimpleValueBinder:331 - building SimpleValue for content
[2013-07-09 18:02:38] [DEBUG] PropertyBinder:260 - Building property content
[2013-07-09 18:02:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 18:02:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONS), mappingColumn=parentSet, insertable=true, updatable=true, unique=false}
[2013-07-09 18:02:38] [DEBUG] PropertyBinder:260 - Building property parentSet
[2013-07-09 18:02:38] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.QuestionSet
[2013-07-09 18:02:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 18:02:38] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 18:02:38] [DEBUG] EntityBinder:394 - Import with entity name QuestionSet
[2013-07-09 18:02:38] [DEBUG] EntityBinder:564 - Bind entity org.example.models.QuestionSet on table QUESTIONSETS
[2013-07-09 18:02:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 18:02:38] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 18:02:38] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 18:02:38] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 18:02:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-09 18:02:38] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-09 18:02:38] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-09 18:02:38] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-09 18:02:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[2013-07-09 18:02:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(QUESTIONSETS), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[2013-07-09 18:02:38] [DEBUG] PropertyBinder:260 - Building property owner
[2013-07-09 18:02:38] [DEBUG] AnnotationBinder:532 - Binding entity from annotated class: org.example.models.User
[2013-07-09 18:02:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2013-07-09 18:02:38] [DEBUG] AnnotationBinder:990 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2013-07-09 18:02:38] [DEBUG] EntityBinder:394 - Import with entity name User
[2013-07-09 18:02:38] [DEBUG] EntityBinder:564 - Bind entity org.example.models.User on table USERS
[2013-07-09 18:02:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2013-07-09 18:02:38] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
[2013-07-09 18:02:38] [DEBUG] SimpleValueBinder:331 - building SimpleValue for id
[2013-07-09 18:02:38] [DEBUG] PropertyBinder:260 - Building property id
[2013-07-09 18:02:38] [DEBUG] Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2013-07-09 18:02:38] [DEBUG] PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
[2013-07-09 18:02:38] [DEBUG] SimpleValueBinder:331 - building SimpleValue for name
[2013-07-09 18:02:38] [DEBUG] PropertyBinder:260 - Building property name
[2013-07-09 18:02:38] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 18:02:38] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for content
[2013-07-09 18:02:38] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 18:02:38] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-09 18:02:38] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for id
[2013-07-09 18:02:38] [DEBUG] SimpleValueBinder:369 - Setting SimpleValue typeName for name
[2013-07-09 18:02:38] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 18:02:38] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 18:02:38] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 18:02:38] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 18:02:38] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 18:02:38] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 18:02:38] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 18:02:38] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 18:02:38] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 18:02:38] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 18:02:38] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:120 - Automatic session close at end of transaction: disabled
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:131 - JDBC batch size: 15
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:137 - JDBC batch updates for versioned data: disabled
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:147 - Scrollable result sets: enabled
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:153 - Wrap result sets: disabled
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:171 - multi-tenancy strategy : NONE
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:177 - Connection release mode: auto
[2013-07-09 18:02:38] [INFO ] TransactionFactoryInitiator:68 - HHH000399: Using default transaction strategy (direct JDBC transactions)
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:199 - Using BatchFetchStyle : LEGACY
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:224 - Default batch fetch size: 1
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:230 - Generate SQL with comments: disabled
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:236 - Order SQL updates by primary key: disabled
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:242 - Order SQL inserts for batching: disabled
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:250 - Default null ordering: none
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[2013-07-09 18:02:38] [INFO ] ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:260 - Query language substitutions: {}
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:266 - JPA-QL strict compliance: disabled
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:274 - Second-level cache: enabled
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:280 - Query cache: disabled
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:295 - Optimize cache for minimal puts: disabled
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:310 - Structured second-level cache entries: disabled
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:320 - Second-level cache direct-reference entries: disabled
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:328 - Statistics: disabled
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:358 - Default entity-mode: pojo
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:364 - Named query checking : enabled
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
[2013-07-09 18:02:38] [DEBUG] SettingsFactory:398 - JTA Track by Thread: enabled
[2013-07-09 18:02:38] [DEBUG] SessionFactoryImpl:225 - Building session factory
[2013-07-09 18:02:38] [DEBUG] SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
[2013-07-09 18:02:38] [DEBUG] SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Linux, hbm2ddl.auto=create, sun.boot.class.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/java-6-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_27-b27, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, user.name=jcb98, guice.disable.misplaced.annotation.check=true, connection.driver_class=org.h2.Driver, user.language=en, sun.boot.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64, classworlds.conf=/usr/share/maven/bin/m2.conf, dialect=org.hibernate.dialect.H2Dialect, java.version=1.6.0_27, user.timezone=Europe/London, sun.arch.data.model=64, java.endorsed.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=50.0, user.country=GB, securerandom.source=file:/dev/./urandom, connection.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE, java.home=/usr/lib/jvm/java-6-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=3.8.0-25-generic, path.separator=:, connection.password=, java.vm.version=20.0-b12, hibernate.connection.password=, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.username=sa, user.home=/home/jcb98, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64/server:/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/amd64:/usr/lib/jvm/java-6-openjdk-amd64/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.h2.Driver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.H2Dialect, maven.home=/usr/share/maven, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-6-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/jcb98/github/SettingWork, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.internal.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.6, hibernate.connection.pool_size=1, hibernate.show_sql=true}
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 18:02:38] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.QuestionSet
[2013-07-09 18:02:38] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONSETS where id =?
[2013-07-09 18:02:38] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select questionse_.id, questionse_.name as name2_1_, questionse_.owner_id as owner3_1_ from QUESTIONSETS questionse_ where questionse_.id=?
[2013-07-09 18:02:38] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONSETS (name, owner_id, id) values (?, ?, ?)
[2013-07-09 18:02:38] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONSETS set name=?, owner_id=? where id=?
[2013-07-09 18:02:38] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONSETS where id=?
[2013-07-09 18:02:38] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.Question
[2013-07-09 18:02:38] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from QUESTIONS where id =?
[2013-07-09 18:02:38] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select question_.id, question_.author_id as author3_0_, question_.content as content2_0_, question_.parentSet_id as parentSe4_0_ from QUESTIONS question_ where question_.id=?
[2013-07-09 18:02:38] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into QUESTIONS (author_id, content, parentSet_id, id) values (?, ?, ?, ?)
[2013-07-09 18:02:38] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update QUESTIONS set author_id=?, content=?, parentSet_id=? where id=?
[2013-07-09 18:02:38] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from QUESTIONS where id=?
[2013-07-09 18:02:38] [DEBUG] AbstractEntityPersister:3592 - Static SQL for entity: org.example.models.User
[2013-07-09 18:02:38] [DEBUG] AbstractEntityPersister:3597 -  Version select: select id from USERS where id =?
[2013-07-09 18:02:38] [DEBUG] AbstractEntityPersister:3600 -  Snapshot select: select user_.id, user_.name as name2_2_ from USERS user_ where user_.id=?
[2013-07-09 18:02:38] [DEBUG] AbstractEntityPersister:3603 -  Insert 0: insert into USERS (name, id) values (?, ?)
[2013-07-09 18:02:38] [DEBUG] AbstractEntityPersister:3604 -  Update 0: update USERS set name=? where id=?
[2013-07-09 18:02:38] [DEBUG] AbstractEntityPersister:3605 -  Delete 0: delete from USERS where id=?
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [NONE]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [READ]: select questionse0_.id as id1_1_1_, questionse0_.name as name2_1_1_, questionse0_.owner_id as owner3_1_1_, user1_.id as id1_2_0_, user1_.name as name2_2_0_ from QUESTIONSETS questionse0_ left outer join USERS user1_ on questionse0_.owner_id=user1_.id where questionse0_.id=?
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [UPGRADE_NOWAIT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [FORCE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_READ]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_WRITE]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [PESSIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=? for update
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.QuestionSet [OPTIMISTIC_FORCE_INCREMENT]: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 18:02:38] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 18:02:38] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.QuestionSet: select questionse0_.id as id1_1_0_, questionse0_.name as name2_1_0_, questionse0_.owner_id as owner3_1_0_ from QUESTIONSETS questionse0_ where questionse0_.id=?
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [NONE]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [READ]: select question0_.id as id1_0_3_, question0_.author_id as author3_0_3_, question0_.content as content2_0_3_, question0_.parentSet_id as parentSe4_0_3_, user1_.id as id1_2_0_, user1_.name as name2_2_0_, questionse2_.id as id1_1_1_, questionse2_.name as name2_1_1_, questionse2_.owner_id as owner3_1_1_, user3_.id as id1_2_2_, user3_.name as name2_2_2_ from QUESTIONS question0_ left outer join USERS user1_ on question0_.author_id=user1_.id left outer join QUESTIONSETS questionse2_ on question0_.parentSet_id=questionse2_.id left outer join USERS user3_ on questionse2_.owner_id=user3_.id where question0_.id=?
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [UPGRADE_NOWAIT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [FORCE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_READ]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_WRITE]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [PESSIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=? for update
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.Question [OPTIMISTIC_FORCE_INCREMENT]: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 18:02:38] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 18:02:38] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.Question: select question0_.id as id1_0_0_, question0_.author_id as author3_0_0_, question0_.content as content2_0_0_, question0_.parentSet_id as parentSe4_0_0_ from QUESTIONS question0_ where question0_.id=?
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.User [NONE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.User [READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.User [FORCE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=? for update
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 18:02:38] [DEBUG] Loader:123 - Static select for entity org.example.models.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 18:02:38] [DEBUG] Loader:56 - Static select for action ACTION_MERGE on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 18:02:38] [DEBUG] Loader:56 - Static select for action ACTION_REFRESH on entity org.example.models.User: select user0_.id as id1_2_0_, user0_.name as name2_2_0_ from USERS user0_ where user0_.id=?
[2013-07-09 18:02:38] [DEBUG] SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@10469e8
[2013-07-09 18:02:38] [DEBUG] SessionFactoryRegistry:75 - Registering SessionFactory: 90426f2b-2391-4fa5-9678-3bde2e787434 (<unnamed>)
[2013-07-09 18:02:38] [DEBUG] SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
[2013-07-09 18:02:38] [DEBUG] SessionFactoryImpl:488 - Instantiated session factory
[2013-07-09 18:02:38] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 18:02:38] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 18:02:38] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 18:02:38] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 18:02:38] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 18:02:38] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 18:02:38] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 18:02:38] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 18:02:38] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 18:02:38] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 18:02:38] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 18:02:38] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 18:02:38] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 18:02:38] [DEBUG] Configuration:3472 - Processing hbm.xml files
[2013-07-09 18:02:38] [DEBUG] Configuration:3502 - Process annotated classes
[2013-07-09 18:02:38] [DEBUG] Configuration:1420 - Processing fk mappings (*ToOne and JoinedSubclass)
[2013-07-09 18:02:38] [DEBUG] Configuration:1603 - Processing extends queue
[2013-07-09 18:02:38] [DEBUG] Configuration:1661 - Processing extends queue
[2013-07-09 18:02:38] [DEBUG] Configuration:1606 - Processing collection mappings
[2013-07-09 18:02:38] [DEBUG] Configuration:1616 - Processing native query and ResultSetMapping mappings
[2013-07-09 18:02:38] [DEBUG] Configuration:1624 - Processing association property references
[2013-07-09 18:02:38] [DEBUG] Configuration:1646 - Creating tables' unique integer identifiers
[2013-07-09 18:02:38] [DEBUG] Configuration:1647 - Processing foreign key constraints
[2013-07-09 18:02:38] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 18:02:38] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.QuestionSet
[2013-07-09 18:02:38] [DEBUG] Configuration:1718 - Resolving reference to class: org.example.models.User
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 18:02:38] [DEBUG] DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.H2Dialect]
[2013-07-09 18:02:38] [INFO ] SchemaExport:343 - HHH000227: Running hbm2ddl schema export
[2013-07-09 18:02:38] [DEBUG] SchemaExport:353 - Import file not found: /import.sql
[2013-07-09 18:02:38] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-09 18:02:38] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two
[2013-07-09 18:02:38] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_ft7bojpo0rx65wm6t22460two [42102-145]
[2013-07-09 18:02:38] [DEBUG] SQL:104 - alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-09 18:02:38] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4
[2013-07-09 18:02:38] [ERROR] SchemaExport:426 - Table "QUESTIONS" not found; SQL statement:
alter table QUESTIONS drop constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 [42102-145]
[2013-07-09 18:02:38] [DEBUG] SQL:104 - alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-09 18:02:38] [ERROR] SchemaExport:425 - HHH000389: Unsuccessful: alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s
[2013-07-09 18:02:38] [ERROR] SchemaExport:426 - Table "QUESTIONSETS" not found; SQL statement:
alter table QUESTIONSETS drop constraint FK_1lfsutbenn1e1x5oxtpg9lx6s [42102-145]
[2013-07-09 18:02:38] [DEBUG] SQL:104 - drop table QUESTIONS if exists
[2013-07-09 18:02:38] [DEBUG] SQL:104 - drop table QUESTIONSETS if exists
[2013-07-09 18:02:38] [DEBUG] SQL:104 - drop table USERS if exists
[2013-07-09 18:02:38] [DEBUG] SQL:104 - create table QUESTIONS (id integer not null, content varchar(255), author_id varchar(255), parentSet_id integer, primary key (id))
[2013-07-09 18:02:38] [DEBUG] SQL:104 - create table QUESTIONSETS (id integer not null, name varchar(255), owner_id varchar(255), primary key (id))
[2013-07-09 18:02:38] [DEBUG] SQL:104 - create table USERS (id varchar(255) not null, name varchar(255), primary key (id))
[2013-07-09 18:02:38] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_ft7bojpo0rx65wm6t22460two foreign key (author_id) references USERS
[2013-07-09 18:02:38] [DEBUG] SQL:104 - alter table QUESTIONS add constraint FK_bl2wjhq5j87ubkqwqb3s5ulb4 foreign key (parentSet_id) references QUESTIONSETS
[2013-07-09 18:02:38] [DEBUG] SQL:104 - alter table QUESTIONSETS add constraint FK_1lfsutbenn1e1x5oxtpg9lx6s foreign key (owner_id) references USERS
[2013-07-09 18:02:38] [INFO ] SchemaExport:405 - HHH000230: Schema export complete
[2013-07-09 18:02:38] [DEBUG] SessionFactoryImpl:1068 - Checking 0 named HQL queries
[2013-07-09 18:02:38] [DEBUG] SessionFactoryImpl:1091 - Checking 0 named SQL queries
[2013-07-09 18:02:38] [DEBUG] StatisticsInitiator:110 - Statistics initialized [enabled=false]
[2013-07-09 18:02:38] [INFO ] ResteasyDeployment:82 - Deploying javax.ws.rs.core.Application: class org.example.SettingWork
[2013-07-09 18:02:38] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/acr31
[2013-07-09 18:02:38] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 18:02:38] [DEBUG] RavenFilter:409 - Stored raven request is null
[2013-07-09 18:02:38] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 18:02:38] [DEBUG] RavenFilter:541 - Redirecting with url http://localhost:8080/ldap/acr31
[2013-07-09 18:02:40] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/acr31
[2013-07-09 18:02:40] [DEBUG] RavenFilter:400 - WLS-Response is 1!200!!20130709T170240Z!1373389359-18431-7!http://localhost:8080/ldap/acr31!jcb98!!pwd!19619!!2!Trgtg2ed66y3mD52QRkU0IhUlSVrLvCSQpC6RZ-lrWBo.F-1Zkul7Wip-UL-FjPSsp0gF4Y8T93gfefcJIhOCtwiq7eY8BfGncT4w8IYojjOmr4a3JT0pVCYsY0kVN7PKANqBaa1qr7kFA0ynua8d4iHQNMICvTOdzWnIfbrOCk_
[2013-07-09 18:02:40] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/acr31, desc: , aauth: , iact: , msg: , params: , date: 20130709T170238Z, fail: 
[2013-07-09 18:02:40] [DEBUG] RavenFilter:412 - Stored state is null
[2013-07-09 18:02:40] [DEBUG] RavenFilter:466 - Validating received response with stored request
[2013-07-09 18:02:40] [DEBUG] RavenFilter:484 - Storing new state  Status: 200 Issue: 20130709T170240Z Last: 1373389360493 Life: 19619 ID: 1373389359-18431-7 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 18:02:40] [DEBUG] RavenFilter:389 - RavenFilter running for: /ldap/acr31
[2013-07-09 18:02:40] [DEBUG] RavenFilter:400 - WLS-Response is null
[2013-07-09 18:02:40] [DEBUG] RavenFilter:409 - Stored raven request is Webauth request: ver: 1, url: http://localhost:8080/ldap/acr31, desc: , aauth: , iact: , msg: , params: , date: 20130709T170238Z, fail: 
[2013-07-09 18:02:40] [DEBUG] RavenFilter:412 - Stored state is  Status: 200 Issue: 20130709T170240Z Last: 1373389360493 Life: 19619 ID: 1373389359-18431-7 Principal: RavenPrincipal--jcb98 AAuth:  SSO: pwd Params: 
[2013-07-09 18:02:40] [DEBUG] RavenFilter:440 - Accepting stored session
[2013-07-09 18:02:40] [DEBUG] SynchronousDispatcher:60 - PathInfo: /ldap/acr31
[2013-07-09 18:02:40] [DEBUG] LDAPProvider:46 - Trying to obtain data for user acr31
[2013-07-09 18:02:40] [DEBUG] LDAPProvider:48 - Trying to obtain displayName for user acr31
[2013-07-09 18:02:40] [DEBUG] LDAPProvider:50 - Trying to obtain email address for user acr31
[2013-07-09 18:02:40] [DEBUG] LDAPProvider:52 - Trying to obtain Institutions for user acr31
[2013-07-09 18:02:40] [DEBUG] LDAPProvider:80 - toList() called with attribute: ou: Queens' College, Computer Laboratory
[2013-07-09 18:02:40] [DEBUG] LDAPProvider:92 - Successfully returning list of results (probably)
[2013-07-09 18:02:40] [DEBUG] LDAPProvider:54 - Trying to obtain roles for user acr31
[2013-07-09 18:02:40] [DEBUG] LDAPProvider:80 - toList() called with attribute: title: Official Fellow, University Lecturer
[2013-07-09 18:02:40] [DEBUG] LDAPProvider:92 - Successfully returning list of results (probably)
[2013-07-09 18:02:40] [DEBUG] LDAPProvider:56 - Trying to obtain misAffiliation for user acr31
[2013-07-09 18:02:40] [DEBUG] LDAPProvider:61 - Successfully got misAffiliation
[2013-07-09 18:02:40] [DEBUG] LDAPProvider:66 - Trying to get the image for useracr31
[2013-07-09 18:02:40] [DEBUG] LDAPProvider:75 - Returning user info for acr31
